apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f4fff92ef47 m=8 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f4fff92ef47
    stack: frame={sp:0x7f4ff5ffa830, fp:0x0} stack=[0x7f4ff57fb288,0x7f4ff5ffae88)
    00007f4ff5ffa730:  00007f4ff5ffaaf0  00007f4ffff1775a 
    00007f4ff5ffa740:  000000000000000b  0000000000000000 
    00007f4ff5ffa750:  00007f4ff57fa700  00005618cae32148 
    00007f4ff5ffa760:  00007f4ff5ffac40  00005618cc2cd540 
    00007f4ff5ffa770:  0000000000000000  00005618ca30ed10 
    00007f4ff5ffa780:  0000000000000000  00007f4ffff0ff13 
    00007f4ff5ffa790:  0000000000000005  0000000000000000 
    00007f4ff5ffa7a0:  2525252525252525  2525252525252525 
    00007f4ff5ffa7b0:  00000000000000ff  0000000000000000 
    00007f4ff5ffa7c0:  00000000000000ff  0000000000000000 
    00007f4ff5ffa7d0:  0000000000000004  000000000000000c 
    00007f4ff5ffa7e0:  000000000000000e  000000000000000e 
    00007f4ff5ffa7f0:  0000000000000000  0000000000000000 
    00007f4ff5ffa800:  ffffffffffffffff  ffffffffffffffff 
    00007f4ff5ffa810:  0000000400000004  0000000400000004 
    00007f4ff5ffa820:  20636f6c6c616d00  203a64656c696166 
    00007f4ff5ffa830: <0000000000000000  0000000000000000 
    00007f4ff5ffa840:  0000000000000000  0000000000000000 
    00007f4ff5ffa850:  0000000000000000  0000000000000000 
    00007f4ff5ffa860:  0000000000000000  0000000000000000 
    00007f4ff5ffa870:  0000000000000000  0000000000000000 
    00007f4ff5ffa880:  0000000000000000  0000000000000000 
    00007f4ff5ffa890:  0000000000000000  0000000000000000 
    00007f4ff5ffa8a0:  0000000000000000  0000000000000000 
    00007f4ff5ffa8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f4ff5ffa8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f4ff5ffa8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f4ff5ffa8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f4ff5ffa8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f4ff5ffa900:  ffffffffffffffff  ffffffffffffffff 
    00007f4ff5ffa910:  ffffffffffffffff  ffffffffffffffff 
    00007f4ff5ffa920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f4fff92ef47
    stack: frame={sp:0x7f4ff5ffa830, fp:0x0} stack=[0x7f4ff57fb288,0x7f4ff5ffae88)
    00007f4ff5ffa730:  00007f4ff5ffaaf0  00007f4ffff1775a 
    00007f4ff5ffa740:  000000000000000b  0000000000000000 
    00007f4ff5ffa750:  00007f4ff57fa700  00005618cae32148 
    00007f4ff5ffa760:  00007f4ff5ffac40  00005618cc2cd540 
    00007f4ff5ffa770:  0000000000000000  00005618ca30ed10 
    00007f4ff5ffa780:  0000000000000000  00007f4ffff0ff13 
    00007f4ff5ffa790:  0000000000000005  0000000000000000 
    00007f4ff5ffa7a0:  2525252525252525  2525252525252525 
    00007f4ff5ffa7b0:  00000000000000ff  0000000000000000 
    00007f4ff5ffa7c0:  00000000000000ff  0000000000000000 
    00007f4ff5ffa7d0:  0000000000000004  000000000000000c 
    00007f4ff5ffa7e0:  000000000000000e  000000000000000e 
    00007f4ff5ffa7f0:  0000000000000000  0000000000000000 
    00007f4ff5ffa800:  ffffffffffffffff  ffffffffffffffff 
    00007f4ff5ffa810:  0000000400000004  0000000400000004 
    00007f4ff5ffa820:  20636f6c6c616d00  203a64656c696166 
    00007f4ff5ffa830: <0000000000000000  0000000000000000 
    00007f4ff5ffa840:  0000000000000000  0000000000000000 
    00007f4ff5ffa850:  0000000000000000  0000000000000000 
    00007f4ff5ffa860:  0000000000000000  0000000000000000 
    00007f4ff5ffa870:  0000000000000000  0000000000000000 
    00007f4ff5ffa880:  0000000000000000  0000000000000000 
    00007f4ff5ffa890:  0000000000000000  0000000000000000 
    00007f4ff5ffa8a0:  0000000000000000  0000000000000000 
    00007f4ff5ffa8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f4ff5ffa8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f4ff5ffa8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f4ff5ffa8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f4ff5ffa8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f4ff5ffa900:  ffffffffffffffff  ffffffffffffffff 
    00007f4ff5ffa910:  ffffffffffffffff  ffffffffffffffff 
    00007f4ff5ffa920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).parse(0xc0002c6000)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:278 +0xa5b
    text/template/parse.(*Tree).Parse(0xc0002c6000, 0x5618ca1be440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001f6720, 0xc0001fd7b0, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x5618ca1639b7, 0x4, 0x5618ca1be440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001fd7b0, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc00009e340, 0x5618ca1be440, 0x16c, 0x4, 0xc0001fe628, 0x5618cae4d760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 20 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 21 [runnable]:
    text/template/parse.(*lexer).emit(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:157
    text/template/parse.lexRightDelim(0xc000206120, 0x5618ca8dd8a8)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:345 +0x17f
    text/template/parse.(*lexer).run(0xc000206120)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:230 +0x39
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7f4fffcdc840
    rcx    0x7f4fff92ef47
    rdx    0x0
    rdi    0x2
    rsi    0x7f4ff5ffa830
    rbp    0x5618ca328e7c
    rsp    0x7f4ff5ffa830
    r8     0x0
    r9     0x7f4ff5ffa830
    r10    0x8
    r11    0x246
    r12    0x5618cc2cd540
    r13    0x0
    r14    0x5618ca30ed10
    r15    0x0
    rip    0x7f4fff92ef47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000288000)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000288000)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc000048800, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc00006df01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc000000c00)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [syscall, locked to thread]:
    encoding/json.Unmarshal(0xc000440e40, 0x3e, 0xafc0, 0x1811e60, 0xc00047c4d8, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:100 +0x31
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000521440, 0xc000440e40, 0x3e, 0xafc0, 0x7f4f320c6a40, 0xc000521440)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:565 +0x18b
    encoding/json.(*decodeState).object(0xc0005168f0, 0x19ce1a0, 0xc000521440, 0x199, 0xc000516918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0005168f0, 0x19ce1a0, 0xc000521440, 0x199, 0xc000530000, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0005168f0, 0x18bc100, 0xc000520ce0, 0x195, 0xc000516918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0005168f0, 0x18bc100, 0xc000520ce0, 0x195, 0x18bc100, 0xc000520ce0)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0005168f0, 0x1815520, 0xc000520b40, 0x16, 0xc000516918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0005168f0, 0x1815520, 0xc000520b40, 0x16, 0xc0004a0888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0005168f0, 0x1815520, 0xc000520b40, 0xc000516918, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0004407b5, 0x9e1, 0xb64b, 0x1815520, 0xc000520b40, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000470d80, 0xc0004407b5, 0x9e1, 0xb64b, 0x7f4f320c6a40, 0xc000470d80)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0001369a0, 0x19ce1a0, 0xc000470d80, 0x199, 0xc0001369c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0001369a0, 0x19ce1a0, 0xc000470d80, 0x199, 0xc000520900, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0001369a0, 0x18e59a0, 0xc000404d08, 0x195, 0xc0001369c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0001369a0, 0x18e59a0, 0xc000404d08, 0x195, 0x18e59a0, 0xc000404d08)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0001369a0, 0x1815520, 0xc000404b40, 0x16, 0xc0001369c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0001369a0, 0x1815520, 0xc000404b40, 0x16, 0xc000173548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0001369a0, 0x1815520, 0xc000404b40, 0xc0001369c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc00043c000, 0x9d38, 0xfe00, 0x1815520, 0xc000404b40, 0x7f4f320be558, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000404900, 0xc00043c000, 0x9d38, 0xfe00, 0x7f4f320c6a40, 0xc000404900)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0001368f0, 0x1a89300, 0xc000404900, 0x16, 0xc000136918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0001368f0, 0x1a89300, 0xc000404900, 0x16, 0xc000173c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0001368f0, 0x1a89300, 0xc000404900, 0xc000136918, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc00043c000, 0x9d39, 0xfe00, 0x1a89300, 0xc000404900, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc0003efb30, 0xc000173d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc0003efa70, 0xc0003efa40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 6 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
