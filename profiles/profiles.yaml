apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7fc494e71f47 m=3 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7fc494e71f47
    stack: frame={sp:0x7fc49241f830, fp:0x0} stack=[0x7fc491c20288,0x7fc49241fe88)
    00007fc49241f730:  00007fc49241faf0  00007fc49545a75a 
    00007fc49241f740:  000000000000000b  0000000000000000 
    00007fc49241f750:  00007fc47b3d2700  00005562e3b55148 
    00007fc49241f760:  00007fc49241fc40  00007fc484000da0 
    00007fc49241f770:  0000000000000000  00005562e3031d10 
    00007fc49241f780:  0000000000000000  00007fc495452f13 
    00007fc49241f790:  0000000000000005  0000000000000000 
    00007fc49241f7a0:  2525252525252525  2525252525252525 
    00007fc49241f7b0:  00000000000000ff  0000000000000000 
    00007fc49241f7c0:  00000000000000ff  0000000000000000 
    00007fc49241f7d0:  0000000000000036  000000000000000c 
    00007fc49241f7e0:  000000000000000e  000000000000000e 
    00007fc49241f7f0:  0000000000000000  0000000000000000 
    00007fc49241f800:  ffffffffffffffff  ffffffffffffffff 
    00007fc49241f810:  0000000400000004  0000000400000004 
    00007fc49241f820:  20636f6c6c616d00  203a64656c696166 
    00007fc49241f830: <0000000000000000  0000000000000000 
    00007fc49241f840:  0000000000000000  0000000000000000 
    00007fc49241f850:  0000000000000000  0000000000000000 
    00007fc49241f860:  0000000000000000  0000000000000000 
    00007fc49241f870:  0000000000000000  0000000000000000 
    00007fc49241f880:  0000000000000000  0000000000000000 
    00007fc49241f890:  0000000000000000  0000000000000000 
    00007fc49241f8a0:  0000000000000000  0000000000000000 
    00007fc49241f8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007fc49241f8c0:  ffffffffffffffff  ffffffffffffffff 
    00007fc49241f8d0:  ffffffffffffffff  ffffffffffffffff 
    00007fc49241f8e0:  ffffffffffffffff  ffffffffffffffff 
    00007fc49241f8f0:  ffffffffffffffff  ffffffffffffffff 
    00007fc49241f900:  ffffffffffffffff  ffffffffffffffff 
    00007fc49241f910:  ffffffffffffffff  ffffffffffffffff 
    00007fc49241f920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7fc494e71f47
    stack: frame={sp:0x7fc49241f830, fp:0x0} stack=[0x7fc491c20288,0x7fc49241fe88)
    00007fc49241f730:  00007fc49241faf0  00007fc49545a75a 
    00007fc49241f740:  000000000000000b  0000000000000000 
    00007fc49241f750:  00007fc47b3d2700  00005562e3b55148 
    00007fc49241f760:  00007fc49241fc40  00007fc484000da0 
    00007fc49241f770:  0000000000000000  00005562e3031d10 
    00007fc49241f780:  0000000000000000  00007fc495452f13 
    00007fc49241f790:  0000000000000005  0000000000000000 
    00007fc49241f7a0:  2525252525252525  2525252525252525 
    00007fc49241f7b0:  00000000000000ff  0000000000000000 
    00007fc49241f7c0:  00000000000000ff  0000000000000000 
    00007fc49241f7d0:  0000000000000036  000000000000000c 
    00007fc49241f7e0:  000000000000000e  000000000000000e 
    00007fc49241f7f0:  0000000000000000  0000000000000000 
    00007fc49241f800:  ffffffffffffffff  ffffffffffffffff 
    00007fc49241f810:  0000000400000004  0000000400000004 
    00007fc49241f820:  20636f6c6c616d00  203a64656c696166 
    00007fc49241f830: <0000000000000000  0000000000000000 
    00007fc49241f840:  0000000000000000  0000000000000000 
    00007fc49241f850:  0000000000000000  0000000000000000 
    00007fc49241f860:  0000000000000000  0000000000000000 
    00007fc49241f870:  0000000000000000  0000000000000000 
    00007fc49241f880:  0000000000000000  0000000000000000 
    00007fc49241f890:  0000000000000000  0000000000000000 
    00007fc49241f8a0:  0000000000000000  0000000000000000 
    00007fc49241f8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007fc49241f8c0:  ffffffffffffffff  ffffffffffffffff 
    00007fc49241f8d0:  ffffffffffffffff  ffffffffffffffff 
    00007fc49241f8e0:  ffffffffffffffff  ffffffffffffffff 
    00007fc49241f8f0:  ffffffffffffffff  ffffffffffffffff 
    00007fc49241f900:  ffffffffffffffff  ffffffffffffffff 
    00007fc49241f910:  ffffffffffffffff  ffffffffffffffff 
    00007fc49241f920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [runnable]:
    net/http.(*persistConn).readLoop.func4(0x5562e3617820, 0xc000074060, 0x400, 0x400)
    	/usr/lib/go-1.13/src/net/http/transport.go:2004 +0xe5
    net/http.(*bodyEOFSignal).condfn(...)
    	/usr/lib/go-1.13/src/net/http/transport.go:2613
    net/http.(*bodyEOFSignal).Read(0xc00027c100, 0xc000398200, 0x400, 0x400, 0x348, 0x5562e3617820, 0xc000074060)
    	/usr/lib/go-1.13/src/net/http/transport.go:2589 +0x1cd
    encoding/json.(*Decoder).refill(0xc000392160, 0x6d, 0x0)
    	/usr/lib/go-1.13/src/encoding/json/stream.go:161 +0xed
    encoding/json.(*Decoder).readValue(0xc000392160, 0x0, 0x0, 0x5562e35c1dc0)
    	/usr/lib/go-1.13/src/encoding/json/stream.go:136 +0x1de
    encoding/json.(*Decoder).Decode(0xc000392160, 0x5562e34dff40, 0xc000337a40, 0xc00023f808, 0x0)
    	/usr/lib/go-1.13/src/encoding/json/stream.go:63 +0x7b
    github.com/snapcore/snapd/client.decodeInto(0x5562e36195e0, 0xc00027c100, 0x5562e34dff40, 0xc000337a40, 0xc00027c100, 0x5562e2e8fd78)
    	/build/snapd/parts/snapd-deb/build/client/client.go:423 +0x92
    github.com/snapcore/snapd/client.(*Client).do(0xc00010ea80, 0x5562e2e85ee7, 0x3, 0x5562e2e8fd78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x5562e34dff40, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:408 +0x410
    github.com/snapcore/snapd/client.(*Client).doSyncWithOpts(0xc00010ea80, 0x5562e2e85ee7, 0x3, 0x5562e2e8fd78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x5562e347b9a0, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:492 +0xf6
    github.com/snapcore/snapd/client.(*Client).SysInfo(0xc00010ea80, 0x46, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/client/client.go:727 +0xd4
    main.maybeWaitForSecurityProfileRegeneration(0xc00010ea80, 0xc00033a280, 0xd)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:200 +0x1aa
    main.(*cmdRun).Execute(0xc00023feb8, 0xc000032190, 0x2, 0x3, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:240 +0x172
    main.main()
    	/build/snapd/parts/snapd-deb/build/cmd/snap/main.go:482 +0x581
    
    goroutine 6 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 10 [IO wait]:
    internal/poll.runtime_pollWait(0x7fc4955c3c38, 0x72, 0xffffffffffffffff)
    	/usr/lib/go-1.13/src/runtime/netpoll.go:184 +0x57
    internal/poll.(*pollDesc).wait(0xc000347d18, 0x72, 0x1000, 0x1000, 0xffffffffffffffff)
    	/usr/lib/go-1.13/src/internal/poll/fd_poll_runtime.go:87 +0x47
    internal/poll.(*pollDesc).waitRead(...)
    	/usr/lib/go-1.13/src/internal/poll/fd_poll_runtime.go:92
    internal/poll.(*FD).Read(0xc000347d00, 0xc00036b000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
    	/usr/lib/go-1.13/src/internal/poll/fd_unix.go:169 +0x1d1
    net.(*netFD).Read(0xc000347d00, 0xc00036b000, 0x1000, 0x1000, 0x5562e26fae8e, 0xc00006cb20, 0x5562e2723670)
    	/usr/lib/go-1.13/src/net/fd_unix.go:202 +0x51
    net.(*conn).Read(0xc0000105e8, 0xc00036b000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
    	/usr/lib/go-1.13/src/net/net.go:184 +0x6a
    net/http.(*persistConn).Read(0xc00037d8c0, 0xc00036b000, 0x1000, 0x1000, 0xc00038e000, 0xc00006cc20, 0x5562e26cfb65)
    	/usr/lib/go-1.13/src/net/http/transport.go:1758 +0x77
    bufio.(*Reader).fill(0xc000380720)
    	/usr/lib/go-1.13/src/bufio/bufio.go:100 +0x105
    bufio.(*Reader).Peek(0xc000380720, 0x1, 0x0, 0x0, 0x1, 0xc00036e900, 0x0)
    	/usr/lib/go-1.13/src/bufio/bufio.go:138 +0x51
    net/http.(*persistConn).readLoop(0xc00037d8c0)
    	/usr/lib/go-1.13/src/net/http/transport.go:1911 +0x1d8
    created by net/http.(*Transport).dialConn
    	/usr/lib/go-1.13/src/net/http/transport.go:1580 +0xb0f
    
    goroutine 11 [select]:
    net/http.(*persistConn).writeLoop(0xc00037d8c0)
    	/usr/lib/go-1.13/src/net/http/transport.go:2210 +0x125
    created by net/http.(*Transport).dialConn
    	/usr/lib/go-1.13/src/net/http/transport.go:1581 +0xb34
    
    rax    0x0
    rbx    0x7fc49521f840
    rcx    0x7fc494e71f47
    rdx    0x0
    rdi    0x2
    rsi    0x7fc49241f830
    rbp    0x5562e304be7c
    rsp    0x7fc49241f830
    r8     0x0
    r9     0x7fc49241f830
    r10    0x8
    r11    0x246
    r12    0x7fc484000da0
    r13    0x0
    r14    0x5562e3031d10
    r15    0x0
    rip    0x7fc494e71f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000088400)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000088400)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc00004d800, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc00006df01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc000500480)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [runnable, locked to thread]:
    k8s.io/kubernetes/vendor/github.com/go-openapi/swag.(*NameProvider).GetJSONNames(0xc000366770, 0x1a89300, 0xc00049cfc0, 0x0, 0x0, 0x0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/swag/json.go:265 +0x1da
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00049cfc0, 0xc0003d46b6, 0x39, 0xb74a, 0x7f3948e8db80, 0xc00049cfc0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:574 +0x267
    encoding/json.(*decodeState).object(0xc000498420, 0x19ce1a0, 0xc00049cfc0, 0x199, 0xc000498448, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc000498420, 0x19ce1a0, 0xc00049cfc0, 0x199, 0xc0004af200, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000498420, 0x18bc100, 0xc00049c860, 0x195, 0xc000498448, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000498420, 0x18bc100, 0xc00049c860, 0x195, 0x18bc100, 0xc00049c860)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000498420, 0x1815520, 0xc00049c6c0, 0x16, 0xc000498448, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000498420, 0x1815520, 0xc00049c6c0, 0x16, 0xc000436888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc000498420, 0x1815520, 0xc00049c6c0, 0xc000498448, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003d3dc7, 0x9ca, 0xc039, 0x1815520, 0xc00049c6c0, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000404fc0, 0xc0003d3dc7, 0x9ca, 0xc039, 0x7f3948e8db80, 0xc000404fc0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc00014ab00, 0x19ce1a0, 0xc000404fc0, 0x199, 0xc00014ab28, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc00014ab00, 0x19ce1a0, 0xc000404fc0, 0x199, 0xc00049c480, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc00014ab00, 0x18e59a0, 0xc000398f48, 0x195, 0xc00014ab28, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc00014ab00, 0x18e59a0, 0xc000398f48, 0x195, 0x18e59a0, 0xc000398f48)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc00014ab00, 0x1815520, 0xc000398d80, 0x16, 0xc00014ab28, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc00014ab00, 0x1815520, 0xc000398d80, 0x16, 0xc00018b548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc00014ab00, 0x1815520, 0xc000398d80, 0xc00014ab28, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003d0000, 0x9d38, 0xfe00, 0x1815520, 0xc000398d80, 0x7f3948e83cc0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000398b40, 0xc0003d0000, 0x9d38, 0xfe00, 0x7f3948e8db80, 0xc000398b40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc00014aa50, 0x1a89300, 0xc000398b40, 0x16, 0xc00014aa78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc00014aa50, 0x1a89300, 0xc000398b40, 0x16, 0xc00018bc18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc00014aa50, 0x1a89300, 0xc000398b40, 0xc00014aa78, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003d0000, 0x9d39, 0xfe00, 0x1a89300, 0xc000398b40, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc00037fb30, 0xc00018bd68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc00037fa70, 0xc00037fa40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 18 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
