apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
    Error: bad file '-': yaml: line 11: mapping values are not allowed in this context
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc0002e8800)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc0002e8800)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc00004b000, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc000073f01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc000350a80)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [syscall, locked to thread]:
    reflect.mapassign(0x18bc100, 0xc000475830, 0xc00048f030, 0xc0004a4fc0)
    	/usr/local/go/src/runtime/map.go:1319 +0x3f
    reflect.Value.SetMapIndex(0x18bc100, 0xc0004a4860, 0x195, 0x1858200, 0xc00048f030, 0x98, 0x19ce1a0, 0xc0004a4fc0, 0x199)
    	/usr/local/go/src/reflect/value.go:1706 +0x27c
    encoding/json.(*decodeState).object(0xc000498840, 0x18bc100, 0xc0004a4860, 0x195, 0xc000498868, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:807 +0x8da
    encoding/json.(*decodeState).value(0xc000498840, 0x18bc100, 0xc0004a4860, 0x195, 0x18bc100, 0xc0004a4860)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000498840, 0x1815520, 0xc0004a46c0, 0x16, 0xc000498868, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000498840, 0x1815520, 0xc0004a46c0, 0x16, 0xc000422888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc000498840, 0x1815520, 0xc0004a46c0, 0xc000498868, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003c27b5, 0x9e1, 0xb64b, 0x1815520, 0xc0004a46c0, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0003f2900, 0xc0003c27b5, 0x9e1, 0xb64b, 0x7f9abbb0ab00, 0xc0003f2900)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0001368f0, 0x19ce1a0, 0xc0003f2900, 0x199, 0xc000136918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0001368f0, 0x19ce1a0, 0xc0003f2900, 0x199, 0xc0004a4480, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0001368f0, 0x18e59a0, 0xc000384888, 0x195, 0xc000136918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0001368f0, 0x18e59a0, 0xc000384888, 0x195, 0x18e59a0, 0xc000384888)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0001368f0, 0x1815520, 0xc0003846c0, 0x16, 0xc000136918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0001368f0, 0x1815520, 0xc0003846c0, 0x16, 0xc000173548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0001368f0, 0x1815520, 0xc0003846c0, 0xc000136918, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003be000, 0x9d38, 0xfe00, 0x1815520, 0xc0003846c0, 0x7f9abbb6b810, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000384480, 0xc0003be000, 0x9d38, 0xfe00, 0x7f9abbb0ab00, 0xc000384480)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc000136840, 0x1a89300, 0xc000384480, 0x16, 0xc000136868, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc000136840, 0x1a89300, 0xc000384480, 0x16, 0xc000173c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc000136840, 0x1a89300, 0xc000384480, 0xc000136868, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003be000, 0x9d39, 0xfe00, 0x1a89300, 0xc000384480, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc000371b30, 0xc000173d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc000371a70, 0xc000371a40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 6 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: 
    -----
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f79da402f47 m=0 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f79da402f47
    stack: frame={sp:0x7fff5ca55d20, fp:0x0} stack=[0x7fff5c2572b0,0x7fff5ca562f0)
    00007fff5ca55c20:  00007fff5ca560d0  00007f79da7b7c58 
    00007fff5ca55c30:  00007fff5ca55fe0  00007f79da9eb75a 
    00007fff5ca55c40:  000000000000000b  0000000000000000 
    00007fff5ca55c50:  00007f79d81b2700  00000000008661c8 
    00007fff5ca55c60:  00007fff5ca56130  0000000000bdb2a0 
    00007fff5ca55c70:  0000000000000000  0000000000593e90 
    00007fff5ca55c80:  0000000000000000  00007f79da9e3f13 
    00007fff5ca55c90:  0000000000000001  0000000000000000 
    00007fff5ca55ca0:  2525252525252525  2525252525252525 
    00007fff5ca55cb0:  00000000ff00ff00  0000000000000000 
    00007fff5ca55cc0:  00000000ff000000  0000000000000000 
    00007fff5ca55cd0:  414fffffe0000000  0000000000000000 
    00007fff5ca55ce0:  2f7273752f3a6e69  73752f3a6e696273 
    00007fff5ca55cf0:  752f3a6e69622f72  6c61636f6c2f7273 
    00007fff5ca55d00:  73752f3a6e69622f  732f6e6962732f72 
    00007fff5ca55d10:  2f3a656369767265  6e69622f70616e73 
    00007fff5ca55d20: <0000000000000000  656c69616620636f 
    00007fff5ca55d30:  0000000000000000  0000000000000000 
    00007fff5ca55d40:  0000000000000000  0000000000000000 
    00007fff5ca55d50:  0000000000000000  0000000000000000 
    00007fff5ca55d60:  0000000000000000  0000000000000000 
    00007fff5ca55d70:  0000000000000000  0000000000000000 
    00007fff5ca55d80:  0000000000000000  0000000000000000 
    00007fff5ca55d90:  0000000000000000  0000000000000000 
    00007fff5ca55da0:  fffffffe7fffffff  ffffffffffffffff 
    00007fff5ca55db0:  ffffffffffffffff  ffffffffffffffff 
    00007fff5ca55dc0:  ffffffffffffffff  ffffffffffffffff 
    00007fff5ca55dd0:  ffffffffffffffff  ffffffffffffffff 
    00007fff5ca55de0:  ffffffffffffffff  ffffffffffffffff 
    00007fff5ca55df0:  ffffffffffffffff  ffffffffffffffff 
    00007fff5ca55e00:  ffffffffffffffff  ffffffffffffffff 
    00007fff5ca55e10:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f79da402f47
    stack: frame={sp:0x7fff5ca55d20, fp:0x0} stack=[0x7fff5c2572b0,0x7fff5ca562f0)
    00007fff5ca55c20:  00007fff5ca560d0  00007f79da7b7c58 
    00007fff5ca55c30:  00007fff5ca55fe0  00007f79da9eb75a 
    00007fff5ca55c40:  000000000000000b  0000000000000000 
    00007fff5ca55c50:  00007f79d81b2700  00000000008661c8 
    00007fff5ca55c60:  00007fff5ca56130  0000000000bdb2a0 
    00007fff5ca55c70:  0000000000000000  0000000000593e90 
    00007fff5ca55c80:  0000000000000000  00007f79da9e3f13 
    00007fff5ca55c90:  0000000000000001  0000000000000000 
    00007fff5ca55ca0:  2525252525252525  2525252525252525 
    00007fff5ca55cb0:  00000000ff00ff00  0000000000000000 
    00007fff5ca55cc0:  00000000ff000000  0000000000000000 
    00007fff5ca55cd0:  414fffffe0000000  0000000000000000 
    00007fff5ca55ce0:  2f7273752f3a6e69  73752f3a6e696273 
    00007fff5ca55cf0:  752f3a6e69622f72  6c61636f6c2f7273 
    00007fff5ca55d00:  73752f3a6e69622f  732f6e6962732f72 
    00007fff5ca55d10:  2f3a656369767265  6e69622f70616e73 
    00007fff5ca55d20: <0000000000000000  656c69616620636f 
    00007fff5ca55d30:  0000000000000000  0000000000000000 
    00007fff5ca55d40:  0000000000000000  0000000000000000 
    00007fff5ca55d50:  0000000000000000  0000000000000000 
    00007fff5ca55d60:  0000000000000000  0000000000000000 
    00007fff5ca55d70:  0000000000000000  0000000000000000 
    00007fff5ca55d80:  0000000000000000  0000000000000000 
    00007fff5ca55d90:  0000000000000000  0000000000000000 
    00007fff5ca55da0:  fffffffe7fffffff  ffffffffffffffff 
    00007fff5ca55db0:  ffffffffffffffff  ffffffffffffffff 
    00007fff5ca55dc0:  ffffffffffffffff  ffffffffffffffff 
    00007fff5ca55dd0:  ffffffffffffffff  ffffffffffffffff 
    00007fff5ca55de0:  ffffffffffffffff  ffffffffffffffff 
    00007fff5ca55df0:  ffffffffffffffff  ffffffffffffffff 
    00007fff5ca55e00:  ffffffffffffffff  ffffffffffffffff 
    00007fff5ca55e10:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [running]:
    runtime.systemstack_switch()
    	/usr/lib/go-1.13/src/runtime/asm_amd64.s:330 fp=0xc00003c760 sp=0xc00003c758 pc=0x456b50
    runtime.main()
    	/usr/lib/go-1.13/src/runtime/proc.go:133 +0x63 fp=0xc00003c7e0 sp=0xc00003c760 pc=0x4303d3
    runtime.goexit()
    	/usr/lib/go-1.13/src/runtime/asm_amd64.s:1357 +0x1 fp=0xc00003c7e8 sp=0xc00003c7e0 pc=0x458c21
    
    rax    0x0
    rbx    0x7f79da7b0840
    rcx    0x7f79da402f47
    rdx    0x0
    rdi    0x2
    rsi    0x7fff5ca55d20
    rbp    0x59f2ca
    rsp    0x7fff5ca55d20
    r8     0x0
    r9     0x7fff5ca55d20
    r10    0x8
    r11    0x246
    r12    0xbdb2a0
    r13    0x0
    r14    0x593e90
    r15    0x0
    rip    0x7f79da402f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    -----
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f6ca006cf47 m=9 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f6ca006cf47
    stack: frame={sp:0x7f6c95bce840, fp:0x0} stack=[0x7f6c953cf288,0x7f6c95bcee88)
    00007f6c95bce740:  00007f6c95bceb20  00007f6ca064df13 
    00007f6c95bce750:  0000000000000005  00005642a340e148 
    00007f6c95bce760:  00007f6c95bcec50  00007f6c84003320 
    00007f6c95bce770:  0000000000000000  00005642a28ead10 
    00007f6c95bce780:  0000000000000000  00007f6ca064df13 
    00007f6c95bce790:  0000000000000005  0000000000000000 
    00007f6c95bce7a0:  2525252525252525  2525252525252525 
    00007f6c95bce7b0:  00000000000000ff  0000000000000000 
    00007f6c95bce7c0:  00000000000000ff  0000000000000000 
    00007f6c95bce7d0:  00007f6c74000010  00007f6c74000010 
    00007f6c95bce7e0:  000000000000000e  000000000000000e 
    00007f6c95bce7f0:  0000000000000000  0000000000000000 
    00007f6c95bce800:  ffffffffffffffff  ffffffffffffffff 
    00007f6c95bce810:  0000000400000004  0000000400000004 
    00007f6c95bce820:  20636f6c6c616d00  203a64656c696166 
    00007f6c95bce830:  0000000000000000  0000000000000000 
    00007f6c95bce840: <0000000000000000  000000c000466120 
    00007f6c95bce850:  0000000000000000  0000000000000000 
    00007f6c95bce860:  0000000000000000  0000000000000000 
    00007f6c95bce870:  3566666637783020  0a30326435356163 
    00007f6c95bce880:  3020202020203872  20202039720a3078 
    00007f6c95bce890:  6666663778302020  3032643535616335 
    00007f6c95bce8a0:  0000000000000000  0000000000000000 
    00007f6c95bce8b0:  00007f6ca041a560  00007f6ca041dbc0 
    00007f6c95bce8c0:  fffffffe7fffffff  ffffffffffffffff 
    00007f6c95bce8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f6c95bce8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f6c95bce8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f6c95bce900:  ffffffffffffffff  ffffffffffffffff 
    00007f6c95bce910:  ffffffffffffffff  ffffffffffffffff 
    00007f6c95bce920:  ffffffffffffffff  ffffffffffffffff 
    00007f6c95bce930:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f6ca006cf47
    stack: frame={sp:0x7f6c95bce840, fp:0x0} stack=[0x7f6c953cf288,0x7f6c95bcee88)
    00007f6c95bce740:  00007f6c95bceb20  00007f6ca064df13 
    00007f6c95bce750:  0000000000000005  00005642a340e148 
    00007f6c95bce760:  00007f6c95bcec50  00007f6c84003320 
    00007f6c95bce770:  0000000000000000  00005642a28ead10 
    00007f6c95bce780:  0000000000000000  00007f6ca064df13 
    00007f6c95bce790:  0000000000000005  0000000000000000 
    00007f6c95bce7a0:  2525252525252525  2525252525252525 
    00007f6c95bce7b0:  00000000000000ff  0000000000000000 
    00007f6c95bce7c0:  00000000000000ff  0000000000000000 
    00007f6c95bce7d0:  00007f6c74000010  00007f6c74000010 
    00007f6c95bce7e0:  000000000000000e  000000000000000e 
    00007f6c95bce7f0:  0000000000000000  0000000000000000 
    00007f6c95bce800:  ffffffffffffffff  ffffffffffffffff 
    00007f6c95bce810:  0000000400000004  0000000400000004 
    00007f6c95bce820:  20636f6c6c616d00  203a64656c696166 
    00007f6c95bce830:  0000000000000000  0000000000000000 
    00007f6c95bce840: <0000000000000000  000000c000466120 
    00007f6c95bce850:  0000000000000000  0000000000000000 
    00007f6c95bce860:  0000000000000000  0000000000000000 
    00007f6c95bce870:  3566666637783020  0a30326435356163 
    00007f6c95bce880:  3020202020203872  20202039720a3078 
    00007f6c95bce890:  6666663778302020  3032643535616335 
    00007f6c95bce8a0:  0000000000000000  0000000000000000 
    00007f6c95bce8b0:  00007f6ca041a560  00007f6ca041dbc0 
    00007f6c95bce8c0:  fffffffe7fffffff  ffffffffffffffff 
    00007f6c95bce8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f6c95bce8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f6c95bce8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f6c95bce900:  ffffffffffffffff  ffffffffffffffff 
    00007f6c95bce910:  ffffffffffffffff  ffffffffffffffff 
    00007f6c95bce920:  ffffffffffffffff  ffffffffffffffff 
    00007f6c95bce930:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [syscall]:
    github.com/snapcore/snapd/osutil.parseMountOpts(0xc0002a31a0, 0xb, 0xc0002a31a0)
    	/build/snapd/parts/snapd-deb/build/osutil/mountinfo_linux.go:207 +0x1be
    github.com/snapcore/snapd/osutil.ParseMountInfoEntry(0xc000472420, 0x55, 0x55, 0xcdc, 0xc000472420)
    	/build/snapd/parts/snapd-deb/build/osutil/mountinfo_linux.go:194 +0x4e1
    github.com/snapcore/snapd/osutil.ReadMountInfo(0x5642a2ed28c0, 0xc0002a0188, 0xc0002a0188, 0x5642a2ed28c0, 0xc0002a0188, 0x1, 0xc000296ea0)
    	/build/snapd/parts/snapd-deb/build/osutil/mountinfo_linux.go:121 +0x119
    github.com/snapcore/snapd/osutil.LoadMountInfo(0x0, 0x0, 0x0, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/osutil/mountinfo_linux.go:112 +0xf2
    github.com/snapcore/snapd/sandbox/selinux.getSELinuxMount(0x2, 0x2, 0xc000296ea0, 0x12)
    	/build/snapd/parts/snapd-deb/build/sandbox/selinux/selinux_linux.go:65 +0x28
    github.com/snapcore/snapd/sandbox/selinux.IsEnabled(0xc0002a2040, 0xd, 0xc0002a2e08)
    	/build/snapd/parts/snapd-deb/build/sandbox/selinux/selinux_linux.go:33 +0x28
    main.maybeRestoreSecurityContext(0xc0004601e0, 0xc0002a2e08, 0xc0002a2e08, 0x0)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:433 +0x7c
    main.createUserDataDirs(0xc0004ae000, 0xc0002a2e08, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:426 +0x591
    main.(*cmdRun).runSnapConfine(0xc000251eb8, 0xc0004ae000, 0xc0002a2e10, 0xa, 0x7ffe164c4ef3, 0x2, 0x0, 0x0, 0xc0000a8160, 0x2, ...)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:1043 +0x3a5
    main.(*cmdRun).snapRunApp(0xc000251eb8, 0x7ffe164c4ef3, 0x2, 0xc0000a8160, 0x2, 0x2, 0xc0003c0990, 0xc00000f900)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:505 +0x1b9
    main.(*cmdRun).Execute(0xc000251eb8, 0xc0000a8160, 0x2, 0x3, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:257 +0x264
    main.main()
    	/build/snapd/parts/snapd-deb/build/cmd/snap/main.go:482 +0x581
    
    goroutine 19 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 52 [IO wait]:
    internal/poll.runtime_pollWait(0x7f6ca07bed08, 0x72, 0xffffffffffffffff)
    	/usr/lib/go-1.13/src/runtime/netpoll.go:184 +0x57
    internal/poll.(*pollDesc).wait(0xc000462198, 0x72, 0x1000, 0x1000, 0xffffffffffffffff)
    	/usr/lib/go-1.13/src/internal/poll/fd_poll_runtime.go:87 +0x47
    internal/poll.(*pollDesc).waitRead(...)
    	/usr/lib/go-1.13/src/internal/poll/fd_poll_runtime.go:92
    internal/poll.(*FD).Read(0xc000462180, 0xc00047a000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
    	/usr/lib/go-1.13/src/internal/poll/fd_unix.go:169 +0x1d1
    net.(*netFD).Read(0xc000462180, 0xc00047a000, 0x1000, 0x1000, 0x5642a1fb3e8e, 0xc000452b20, 0x5642a1fdc670)
    	/usr/lib/go-1.13/src/net/fd_unix.go:202 +0x51
    net.(*conn).Read(0xc0002a0030, 0xc00047a000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
    	/usr/lib/go-1.13/src/net/net.go:184 +0x6a
    net/http.(*persistConn).Read(0xc000466120, 0xc00047a000, 0x1000, 0x1000, 0xc000472240, 0xc000452c20, 0x5642a1f88b65)
    	/usr/lib/go-1.13/src/net/http/transport.go:1758 +0x77
    bufio.(*Reader).fill(0xc00029e3c0)
    	/usr/lib/go-1.13/src/bufio/bufio.go:100 +0x105
    bufio.(*Reader).Peek(0xc00029e3c0, 0x1, 0x0, 0x0, 0x1, 0xc000472100, 0x0)
    	/usr/lib/go-1.13/src/bufio/bufio.go:138 +0x51
    net/http.(*persistConn).readLoop(0xc000466120)
    	/usr/lib/go-1.13/src/net/http/transport.go:1911 +0x1d8
    created by net/http.(*Transport).dialConn
    	/usr/lib/go-1.13/src/net/http/transport.go:1580 +0xb0f
    
    goroutine 53 [select]:
    net/http.(*persistConn).writeLoop(0xc000466120)
    	/usr/lib/go-1.13/src/net/http/transport.go:2210 +0x125
    created by net/http.(*Transport).dialConn
    	/usr/lib/go-1.13/src/net/http/transport.go:1581 +0xb34
    
    rax    0x0
    rbx    0x7f6ca041a840
    rcx    0x7f6ca006cf47
    rdx    0x0
    rdi    0x2
    rsi    0x7f6c95bce840
    rbp    0x5642a2904e7c
    rsp    0x7f6c95bce840
    r8     0x0
    r9     0x7f6c95bce840
    r10    0x8
    r11    0x246
    r12    0x7f6c84003320
    r13    0x0
    r14    0x5642a28ead10
    r15    0x0
    rip    0x7f6ca006cf47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
