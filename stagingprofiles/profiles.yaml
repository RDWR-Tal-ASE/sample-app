apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7ff37b246f47 m=3 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7ff37b246f47
    stack: frame={sp:0x7ff3787f4830, fp:0x0} stack=[0x7ff377ff5288,0x7ff3787f4e88)
    00007ff3787f4730:  00007ff3787f4af0  00007ff37b82f75a 
    00007ff3787f4740:  000000000000000b  0000000000000000 
    00007ff3787f4750:  00007ff3767f1700  0000558d8c2f8148 
    00007ff3787f4760:  00007ff3787f4c40  00007ff368000c50 
    00007ff3787f4770:  0000000000000000  0000558d8b7d4d10 
    00007ff3787f4780:  0000000000000000  00007ff37b827f13 
    00007ff3787f4790:  0000000000000005  0000000000000000 
    00007ff3787f47a0:  2525252525252525  2525252525252525 
    00007ff3787f47b0:  00000000000000ff  0000000000000000 
    00007ff3787f47c0:  00000000000000ff  0000000000000000 
    00007ff3787f47d0:  0000000000000022  0000000000000001 
    00007ff3787f47e0:  000000000000000e  000000000000000e 
    00007ff3787f47f0:  0000000000000000  0000000000000000 
    00007ff3787f4800:  ffffffffffffffff  ffffffffffffffff 
    00007ff3787f4810:  0000000400000004  0000000400000004 
    00007ff3787f4820:  20636f6c6c616d00  203a64656c696166 
    00007ff3787f4830: <0000000000000000  0000000000000000 
    00007ff3787f4840:  0000000000000000  0000000000000000 
    00007ff3787f4850:  0000000000000000  0000000000000000 
    00007ff3787f4860:  0000000000000000  0000000000000000 
    00007ff3787f4870:  0000000000000000  0000000000000000 
    00007ff3787f4880:  0000000000000000  0000000000000000 
    00007ff3787f4890:  0000000000000000  0000000000000000 
    00007ff3787f48a0:  0000000000000000  0000000000000000 
    00007ff3787f48b0:  fffffffe7fffffff  ffffffffffffffff 
    00007ff3787f48c0:  ffffffffffffffff  ffffffffffffffff 
    00007ff3787f48d0:  ffffffffffffffff  ffffffffffffffff 
    00007ff3787f48e0:  ffffffffffffffff  ffffffffffffffff 
    00007ff3787f48f0:  ffffffffffffffff  ffffffffffffffff 
    00007ff3787f4900:  ffffffffffffffff  ffffffffffffffff 
    00007ff3787f4910:  ffffffffffffffff  ffffffffffffffff 
    00007ff3787f4920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7ff37b246f47
    stack: frame={sp:0x7ff3787f4830, fp:0x0} stack=[0x7ff377ff5288,0x7ff3787f4e88)
    00007ff3787f4730:  00007ff3787f4af0  00007ff37b82f75a 
    00007ff3787f4740:  000000000000000b  0000000000000000 
    00007ff3787f4750:  00007ff3767f1700  0000558d8c2f8148 
    00007ff3787f4760:  00007ff3787f4c40  00007ff368000c50 
    00007ff3787f4770:  0000000000000000  0000558d8b7d4d10 
    00007ff3787f4780:  0000000000000000  00007ff37b827f13 
    00007ff3787f4790:  0000000000000005  0000000000000000 
    00007ff3787f47a0:  2525252525252525  2525252525252525 
    00007ff3787f47b0:  00000000000000ff  0000000000000000 
    00007ff3787f47c0:  00000000000000ff  0000000000000000 
    00007ff3787f47d0:  0000000000000022  0000000000000001 
    00007ff3787f47e0:  000000000000000e  000000000000000e 
    00007ff3787f47f0:  0000000000000000  0000000000000000 
    00007ff3787f4800:  ffffffffffffffff  ffffffffffffffff 
    00007ff3787f4810:  0000000400000004  0000000400000004 
    00007ff3787f4820:  20636f6c6c616d00  203a64656c696166 
    00007ff3787f4830: <0000000000000000  0000000000000000 
    00007ff3787f4840:  0000000000000000  0000000000000000 
    00007ff3787f4850:  0000000000000000  0000000000000000 
    00007ff3787f4860:  0000000000000000  0000000000000000 
    00007ff3787f4870:  0000000000000000  0000000000000000 
    00007ff3787f4880:  0000000000000000  0000000000000000 
    00007ff3787f4890:  0000000000000000  0000000000000000 
    00007ff3787f48a0:  0000000000000000  0000000000000000 
    00007ff3787f48b0:  fffffffe7fffffff  ffffffffffffffff 
    00007ff3787f48c0:  ffffffffffffffff  ffffffffffffffff 
    00007ff3787f48d0:  ffffffffffffffff  ffffffffffffffff 
    00007ff3787f48e0:  ffffffffffffffff  ffffffffffffffff 
    00007ff3787f48f0:  ffffffffffffffff  ffffffffffffffff 
    00007ff3787f4900:  ffffffffffffffff  ffffffffffffffff 
    00007ff3787f4910:  ffffffffffffffff  ffffffffffffffff 
    00007ff3787f4920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).next(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:64
    text/template/parse.(*Tree).nextNonSpace(0xc00011c500, 0x0, 0x0, 0x0, 0x0, 0x0)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:102 +0x14e
    text/template/parse.(*Tree).parse(0xc00011c500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:281 +0x2f6
    text/template/parse.(*Tree).Parse(0xc00011c500, 0x558d8b684440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001c4720, 0xc000142350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x558d8b6299b7, 0x4, 0x558d8b684440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000142350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc00003d840, 0x558d8b684440, 0x16c, 0x4, 0xc000109708, 0x558d8c313760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 6 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 7 [runnable]:
    text/template/parse.(*lexer).emit(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:157
    text/template/parse.lexLeftDelim(0xc00014a630, 0x558d8bda3888)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:307 +0x1e0
    text/template/parse.(*lexer).run(0xc00014a630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:230 +0x39
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7ff37b5f4840
    rcx    0x7ff37b246f47
    rdx    0x0
    rdi    0x2
    rsi    0x7ff3787f4830
    rbp    0x558d8b7eee7c
    rsp    0x7ff3787f4830
    r8     0x0
    r9     0x7ff3787f4830
    r10    0x8
    r11    0x246
    r12    0x7ff368000c50
    r13    0x0
    r14    0x558d8b7d4d10
    r15    0x0
    rip    0x7ff37b246f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 7 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000063000)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000063000)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc00004d800, 0x6)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc00006df01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc000000c00)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [syscall, locked to thread]:
    encoding/json.(*decodeState).object(0xc0004c7600, 0x1811e60, 0xc00042e498, 0x16, 0xc0004c7628, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:783 +0x7ba
    encoding/json.(*decodeState).value(0xc0004c7600, 0x1811e60, 0xc00042e498, 0x16, 0xc00044fbc8, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0004c7600, 0x1811e60, 0xc00042e498, 0xc0004c7628, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003eeb25, 0x9f, 0xb2db, 0x1811e60, 0xc00042e498, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0004d2240, 0xc0003eeb25, 0x9f, 0xb2db, 0x7f7e3b7d1540, 0xc0004d2240)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:565 +0x18b
    encoding/json.(*decodeState).object(0xc0004c6a50, 0x19ce1a0, 0xc0004d2240, 0x199, 0xc0004c6a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0004c6a50, 0x19ce1a0, 0xc0004d2240, 0x199, 0xc0004d3d40, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004c6a50, 0x18bc100, 0xc0004cba60, 0x195, 0xc0004c6a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004c6a50, 0x18bc100, 0xc0004cba60, 0x195, 0x18bc100, 0xc0004cba60)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004c6a50, 0x1815520, 0xc0004cb8c0, 0x16, 0xc0004c6a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004c6a50, 0x1815520, 0xc0004cb8c0, 0x16, 0xc000450888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0004c6a50, 0x1815520, 0xc0004cb8c0, 0xc0004c6a78, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003ee7b5, 0x9e1, 0xb64b, 0x1815520, 0xc0004cb8c0, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00041fb00, 0xc0003ee7b5, 0x9e1, 0xb64b, 0x7f7e3b7d1540, 0xc00041fb00)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e4b00, 0x19ce1a0, 0xc00041fb00, 0x199, 0xc0000e4b28, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e4b00, 0x19ce1a0, 0xc00041fb00, 0x199, 0xc0004cb680, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e4b00, 0x18e59a0, 0xc0003a3a88, 0x195, 0xc0000e4b28, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e4b00, 0x18e59a0, 0xc0003a3a88, 0x195, 0x18e59a0, 0xc0003a3a88)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e4b00, 0x1815520, 0xc0003a38c0, 0x16, 0xc0000e4b28, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e4b00, 0x1815520, 0xc0003a38c0, 0x16, 0xc0001a3548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e4b00, 0x1815520, 0xc0003a38c0, 0xc0000e4b28, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003ea000, 0x9d38, 0xfe00, 0x1815520, 0xc0003a38c0, 0x7f7e3b9936a8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0003a3680, 0xc0003ea000, 0x9d38, 0xfe00, 0x7f7e3b7d1540, 0xc0003a3680)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e4a50, 0x1a89300, 0xc0003a3680, 0x16, 0xc0000e4a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e4a50, 0x1a89300, 0xc0003a3680, 0x16, 0xc0001a3c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e4a50, 0x1a89300, 0xc0003a3680, 0xc0000e4a78, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003ea000, 0x9d39, 0xfe00, 0x1a89300, 0xc0003a3680, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc00039bb30, 0xc0001a3d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc00039ba70, 0xc00039ba40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 18 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f842f7b4f47 m=4 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f842f7b4f47
    stack: frame={sp:0x7f841fffe840, fp:0x0} stack=[0x7f841f7ff288,0x7f841fffee88)
    00007f841fffe740:  00007f841fffeb20  00007f842fd95f13 
    00007f841fffe750:  0000000000000005  000055bce26dd148 
    00007f841fffe760:  00007f841fffec50  000055bce2d61540 
    00007f841fffe770:  0000000000000000  000055bce1bb9d10 
    00007f841fffe780:  0000000000000000  00007f842fd95f13 
    00007f841fffe790:  0000000000000005  0000000000000000 
    00007f841fffe7a0:  2525252525252525  2525252525252525 
    00007f841fffe7b0:  00000000000000ff  0000000000000000 
    00007f841fffe7c0:  00000000000000ff  0000000000000000 
    00007f841fffe7d0:  00007f8414000010  00007f8414000010 
    00007f841fffe7e0:  000000000000000e  000000000000000e 
    00007f841fffe7f0:  0000000000000000  0000000000000000 
    00007f841fffe800:  ffffffffffffffff  ffffffffffffffff 
    00007f841fffe810:  0000000400000004  0000000400000004 
    00007f841fffe820:  20636f6c6c616d00  203a64656c696166 
    00007f841fffe830:  0000000000000000  0000000000000000 
    00007f841fffe840: <0000000000000000  0000000000000000 
    00007f841fffe850:  0000000000000000  0000000000000000 
    00007f841fffe860:  0000000000000000  0000000000000000 
    00007f841fffe870:  0000000000000000  0000000000000000 
    00007f841fffe880:  0000000000000000  0000000000000000 
    00007f841fffe890:  0000000000000000  0000000000000000 
    00007f841fffe8a0:  0000000000000000  0000000000000000 
    00007f841fffe8b0:  00007f842fb62560  00007f842fb65bc0 
    00007f841fffe8c0:  fffffffe7fffffff  ffffffffffffffff 
    00007f841fffe8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f841fffe8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f841fffe8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f841fffe900:  ffffffffffffffff  ffffffffffffffff 
    00007f841fffe910:  ffffffffffffffff  ffffffffffffffff 
    00007f841fffe920:  ffffffffffffffff  ffffffffffffffff 
    00007f841fffe930:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f842f7b4f47
    stack: frame={sp:0x7f841fffe840, fp:0x0} stack=[0x7f841f7ff288,0x7f841fffee88)
    00007f841fffe740:  00007f841fffeb20  00007f842fd95f13 
    00007f841fffe750:  0000000000000005  000055bce26dd148 
    00007f841fffe760:  00007f841fffec50  000055bce2d61540 
    00007f841fffe770:  0000000000000000  000055bce1bb9d10 
    00007f841fffe780:  0000000000000000  00007f842fd95f13 
    00007f841fffe790:  0000000000000005  0000000000000000 
    00007f841fffe7a0:  2525252525252525  2525252525252525 
    00007f841fffe7b0:  00000000000000ff  0000000000000000 
    00007f841fffe7c0:  00000000000000ff  0000000000000000 
    00007f841fffe7d0:  00007f8414000010  00007f8414000010 
    00007f841fffe7e0:  000000000000000e  000000000000000e 
    00007f841fffe7f0:  0000000000000000  0000000000000000 
    00007f841fffe800:  ffffffffffffffff  ffffffffffffffff 
    00007f841fffe810:  0000000400000004  0000000400000004 
    00007f841fffe820:  20636f6c6c616d00  203a64656c696166 
    00007f841fffe830:  0000000000000000  0000000000000000 
    00007f841fffe840: <0000000000000000  0000000000000000 
    00007f841fffe850:  0000000000000000  0000000000000000 
    00007f841fffe860:  0000000000000000  0000000000000000 
    00007f841fffe870:  0000000000000000  0000000000000000 
    00007f841fffe880:  0000000000000000  0000000000000000 
    00007f841fffe890:  0000000000000000  0000000000000000 
    00007f841fffe8a0:  0000000000000000  0000000000000000 
    00007f841fffe8b0:  00007f842fb62560  00007f842fb65bc0 
    00007f841fffe8c0:  fffffffe7fffffff  ffffffffffffffff 
    00007f841fffe8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f841fffe8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f841fffe8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f841fffe900:  ffffffffffffffff  ffffffffffffffff 
    00007f841fffe910:  ffffffffffffffff  ffffffffffffffff 
    00007f841fffe920:  ffffffffffffffff  ffffffffffffffff 
    00007f841fffe930:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).parse(0xc000132500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:277 +0xbc6
    text/template/parse.(*Tree).Parse(0xc000132500, 0x55bce1a69440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001dc6f0, 0xc000158340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x55bce1a0e9b7, 0x4, 0x55bce1a69440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000158340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc00009d7c0, 0x55bce1a69440, 0x16c, 0x4, 0xc00011f5e8, 0x55bce26f8760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 19 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 20 [runnable]:
    text/template/parse.(*lexer).run(0xc000160630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:228
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7f842fb62840
    rcx    0x7f842f7b4f47
    rdx    0x0
    rdi    0x2
    rsi    0x7f841fffe840
    rbp    0x55bce1bd3e7c
    rsp    0x7f841fffe840
    r8     0x0
    r9     0x7f841fffe840
    r10    0x8
    r11    0x246
    r12    0x55bce2d61540
    r13    0x0
    r14    0x55bce1bb9d10
    r15    0x0
    rip    0x7f842f7b4f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
