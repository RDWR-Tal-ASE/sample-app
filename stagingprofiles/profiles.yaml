apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f8f07353f47 m=4 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f8f07353f47
    stack: frame={sp:0x7f8effffe830, fp:0x0} stack=[0x7f8eff7ff288,0x7f8effffee88)
    00007f8effffe730:  00007f8effffeaf0  00007f8f0793c75a 
    00007f8effffe740:  000000000000000b  0000000000000000 
    00007f8effffe750:  00007f8efe69c700  0000559e14261148 
    00007f8effffe760:  00007f8effffec40  0000559e150e4540 
    00007f8effffe770:  0000000000000000  0000559e1373dd10 
    00007f8effffe780:  0000000000000000  00007f8f07934f13 
    00007f8effffe790:  0000000000000005  0000000000000000 
    00007f8effffe7a0:  2525252525252525  2525252525252525 
    00007f8effffe7b0:  00000000000000ff  0000000000000000 
    00007f8effffe7c0:  00000000000000ff  0000000000000000 
    00007f8effffe7d0:  00007f8ef0000010  00007f8ef0000010 
    00007f8effffe7e0:  000000000000000e  000000000000000e 
    00007f8effffe7f0:  0000000000000000  0000000000000000 
    00007f8effffe800:  ffffffffffffffff  ffffffffffffffff 
    00007f8effffe810:  0000000400000004  0000000400000004 
    00007f8effffe820:  20636f6c6c616d00  203a64656c696166 
    00007f8effffe830: <0000000000000000  0000000000000000 
    00007f8effffe840:  0000000000000000  0000000000000000 
    00007f8effffe850:  0000000000000000  0000000000000000 
    00007f8effffe860:  0000000000000000  0000000000000000 
    00007f8effffe870:  0000000000000000  0000000000000000 
    00007f8effffe880:  0000000000000000  0000000000000000 
    00007f8effffe890:  0000000000000000  0000000000000000 
    00007f8effffe8a0:  0000000000000000  0000000000000000 
    00007f8effffe8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f8effffe8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f8effffe8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f8effffe8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f8effffe8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f8effffe900:  ffffffffffffffff  ffffffffffffffff 
    00007f8effffe910:  ffffffffffffffff  ffffffffffffffff 
    00007f8effffe920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f8f07353f47
    stack: frame={sp:0x7f8effffe830, fp:0x0} stack=[0x7f8eff7ff288,0x7f8effffee88)
    00007f8effffe730:  00007f8effffeaf0  00007f8f0793c75a 
    00007f8effffe740:  000000000000000b  0000000000000000 
    00007f8effffe750:  00007f8efe69c700  0000559e14261148 
    00007f8effffe760:  00007f8effffec40  0000559e150e4540 
    00007f8effffe770:  0000000000000000  0000559e1373dd10 
    00007f8effffe780:  0000000000000000  00007f8f07934f13 
    00007f8effffe790:  0000000000000005  0000000000000000 
    00007f8effffe7a0:  2525252525252525  2525252525252525 
    00007f8effffe7b0:  00000000000000ff  0000000000000000 
    00007f8effffe7c0:  00000000000000ff  0000000000000000 
    00007f8effffe7d0:  00007f8ef0000010  00007f8ef0000010 
    00007f8effffe7e0:  000000000000000e  000000000000000e 
    00007f8effffe7f0:  0000000000000000  0000000000000000 
    00007f8effffe800:  ffffffffffffffff  ffffffffffffffff 
    00007f8effffe810:  0000000400000004  0000000400000004 
    00007f8effffe820:  20636f6c6c616d00  203a64656c696166 
    00007f8effffe830: <0000000000000000  0000000000000000 
    00007f8effffe840:  0000000000000000  0000000000000000 
    00007f8effffe850:  0000000000000000  0000000000000000 
    00007f8effffe860:  0000000000000000  0000000000000000 
    00007f8effffe870:  0000000000000000  0000000000000000 
    00007f8effffe880:  0000000000000000  0000000000000000 
    00007f8effffe890:  0000000000000000  0000000000000000 
    00007f8effffe8a0:  0000000000000000  0000000000000000 
    00007f8effffe8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f8effffe8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f8effffe8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f8effffe8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f8effffe8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f8effffe900:  ffffffffffffffff  ffffffffffffffff 
    00007f8effffe910:  ffffffffffffffff  ffffffffffffffff 
    00007f8effffe920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).parse(0xc000132500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:277 +0xbc6
    text/template/parse.(*Tree).Parse(0xc000132500, 0x559e135ed440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001dc6f0, 0xc000158340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x559e135929b7, 0x4, 0x559e135ed440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000158340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc00009d7c0, 0x559e135ed440, 0x16c, 0x4, 0xc00011f828, 0x559e1427c760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 19 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 20 [runnable]:
    text/template/parse.(*lexer).run(0xc000160630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:228
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7f8f07701840
    rcx    0x7f8f07353f47
    rdx    0x0
    rdi    0x2
    rsi    0x7f8effffe830
    rbp    0x559e13757e7c
    rsp    0x7f8effffe830
    r8     0x0
    r9     0x7f8effffe830
    r10    0x8
    r11    0x246
    r12    0x559e150e4540
    r13    0x0
    r14    0x559e1373dd10
    r15    0x0
    rip    0x7f8f07353f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000188000)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000188000)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc000046000, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc00006df01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc00008a300)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [syscall, locked to thread]:
    net/url.parse(0xc0004699e0, 0x0, 0x100, 0xc0004699e0, 0x0, 0xc0004699e1)
    	/usr/local/go/src/net/url/url.go:519 +0x85
    net/url.Parse(0xc0004699e0, 0x12, 0xc0004699e0, 0x12, 0x0)
    	/usr/local/go/src/net/url/url.go:478 +0x85
    k8s.io/kubernetes/vendor/github.com/go-openapi/jsonreference.(*Ref).parse(0xc00044dbc8, 0xc0004699c0, 0x12, 0x4, 0xc0004b94c8)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/jsonreference/reference.go:117 +0x7d
    k8s.io/kubernetes/vendor/github.com/go-openapi/jsonreference.New(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/jsonreference/reference.go:45
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Ref).fromMap(0xc00044dd48, 0xc0004a3200, 0xb6ff, 0x1811e60)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/ref.go:182 +0xe8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0004b3440, 0xc0003ec701, 0x32, 0xb6ff, 0x7fbfd2746000, 0xc0004b3440)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:569 +0x1bc
    encoding/json.(*decodeState).object(0xc0004b0370, 0x19ce1a0, 0xc0004b3440, 0x199, 0xc0004b0398, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0004b0370, 0x19ce1a0, 0xc0004b3440, 0x199, 0xc0004c7d40, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004b0370, 0x18bc100, 0xc0004b2ce0, 0x195, 0xc0004b0398, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004b0370, 0x18bc100, 0xc0004b2ce0, 0x195, 0x18bc100, 0xc0004b2ce0)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004b0370, 0x1815520, 0xc0004b2b40, 0x16, 0xc0004b0398, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004b0370, 0x1815520, 0xc0004b2b40, 0x16, 0xc00044e888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0004b0370, 0x1815520, 0xc0004b2b40, 0xc0004b0398, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003ebdc7, 0x9ca, 0xc039, 0x1815520, 0xc0004b2b40, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00041f440, 0xc0003ebdc7, 0x9ca, 0xc039, 0x7fbfd2746000, 0xc00041f440)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e4a50, 0x19ce1a0, 0xc00041f440, 0x199, 0xc0000e4a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e4a50, 0x19ce1a0, 0xc00041f440, 0x199, 0xc0004b2900, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e4a50, 0x18e59a0, 0xc0003ab3c8, 0x195, 0xc0000e4a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e4a50, 0x18e59a0, 0xc0003ab3c8, 0x195, 0x18e59a0, 0xc0003ab3c8)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e4a50, 0x1815520, 0xc0003ab200, 0x16, 0xc0000e4a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e4a50, 0x1815520, 0xc0003ab200, 0x16, 0xc000123548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e4a50, 0x1815520, 0xc0003ab200, 0xc0000e4a78, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003e8000, 0x9d38, 0xfe00, 0x1815520, 0xc0003ab200, 0x7fbfd273bdf0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0003aafc0, 0xc0003e8000, 0x9d38, 0xfe00, 0x7fbfd2746000, 0xc0003aafc0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e49a0, 0x1a89300, 0xc0003aafc0, 0x16, 0xc0000e49c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e49a0, 0x1a89300, 0xc0003aafc0, 0x16, 0xc000123c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e49a0, 0x1a89300, 0xc0003aafc0, 0xc0000e49c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003e8000, 0x9d39, 0xfe00, 0x1a89300, 0xc0003aafc0, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc00039db30, 0xc000123d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc00039da70, 0xc00039da40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 18 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f50261a0f47 m=4 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f50261a0f47
    stack: frame={sp:0x7f502274c830, fp:0x0} stack=[0x7f5021f4d288,0x7f502274ce88)
    00007f502274c730:  0000000000000000  0000000000000000 
    00007f502274c740:  0000000000000000  0000000000000000 
    00007f502274c750:  0000000000000000  000055b3873a4148 
    00007f502274c760:  00007f502274cc40  000055b38856e540 
    00007f502274c770:  0000000000000000  000055b386880d10 
    00007f502274c780:  0000000000000000  00007f5026781f13 
    00007f502274c790:  0000000000000005  0000000000000000 
    00007f502274c7a0:  2525252525252525  2525252525252525 
    00007f502274c7b0:  00000000000000ff  0000000000000000 
    00007f502274c7c0:  00000000000000ff  0000000000000000 
    00007f502274c7d0:  00007f500c000010  00007f500c000010 
    00007f502274c7e0:  000000000000000e  000000000000000e 
    00007f502274c7f0:  0000000000000000  0000000000000000 
    00007f502274c800:  ffffffffffffffff  ffffffffffffffff 
    00007f502274c810:  0000000400000004  0000000400000004 
    00007f502274c820:  20636f6c6c616d00  203a64656c696166 
    00007f502274c830: <0000000000000000  0000000000000000 
    00007f502274c840:  0000000000000000  0000000000000000 
    00007f502274c850:  0000000000000000  0000000000000000 
    00007f502274c860:  0000000000000000  0000000000000000 
    00007f502274c870:  0000000000000000  0000000000000000 
    00007f502274c880:  0000000000000000  0000000000000000 
    00007f502274c890:  0000000000000000  0000000000000000 
    00007f502274c8a0:  0000000000000000  0000000000000000 
    00007f502274c8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f502274c8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f502274c8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f502274c8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f502274c8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f502274c900:  ffffffffffffffff  ffffffffffffffff 
    00007f502274c910:  ffffffffffffffff  ffffffffffffffff 
    00007f502274c920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f50261a0f47
    stack: frame={sp:0x7f502274c830, fp:0x0} stack=[0x7f5021f4d288,0x7f502274ce88)
    00007f502274c730:  0000000000000000  0000000000000000 
    00007f502274c740:  0000000000000000  0000000000000000 
    00007f502274c750:  0000000000000000  000055b3873a4148 
    00007f502274c760:  00007f502274cc40  000055b38856e540 
    00007f502274c770:  0000000000000000  000055b386880d10 
    00007f502274c780:  0000000000000000  00007f5026781f13 
    00007f502274c790:  0000000000000005  0000000000000000 
    00007f502274c7a0:  2525252525252525  2525252525252525 
    00007f502274c7b0:  00000000000000ff  0000000000000000 
    00007f502274c7c0:  00000000000000ff  0000000000000000 
    00007f502274c7d0:  00007f500c000010  00007f500c000010 
    00007f502274c7e0:  000000000000000e  000000000000000e 
    00007f502274c7f0:  0000000000000000  0000000000000000 
    00007f502274c800:  ffffffffffffffff  ffffffffffffffff 
    00007f502274c810:  0000000400000004  0000000400000004 
    00007f502274c820:  20636f6c6c616d00  203a64656c696166 
    00007f502274c830: <0000000000000000  0000000000000000 
    00007f502274c840:  0000000000000000  0000000000000000 
    00007f502274c850:  0000000000000000  0000000000000000 
    00007f502274c860:  0000000000000000  0000000000000000 
    00007f502274c870:  0000000000000000  0000000000000000 
    00007f502274c880:  0000000000000000  0000000000000000 
    00007f502274c890:  0000000000000000  0000000000000000 
    00007f502274c8a0:  0000000000000000  0000000000000000 
    00007f502274c8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f502274c8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f502274c8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f502274c8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f502274c8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f502274c900:  ffffffffffffffff  ffffffffffffffff 
    00007f502274c910:  ffffffffffffffff  ffffffffffffffff 
    00007f502274c920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).parse(0xc000136500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:277 +0xbc6
    text/template/parse.(*Tree).Parse(0xc000136500, 0x55b386730440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001e46c0, 0xc00015c310, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x55b3866d59b7, 0x4, 0x55b386730440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc00015c310, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc00009d7c0, 0x55b386730440, 0x16c, 0x4, 0xc000123828, 0x55b3873bf760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 19 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 20 [runnable]:
    text/template/parse.(*lexer).run(0xc000164630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:228
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7f502654e840
    rcx    0x7f50261a0f47
    rdx    0x0
    rdi    0x2
    rsi    0x7f502274c830
    rbp    0x55b38689ae7c
    rsp    0x7f502274c830
    r8     0x0
    r9     0x7f502274c830
    r10    0x8
    r11    0x246
    r12    0x55b38856e540
    r13    0x0
    r14    0x55b386880d10
    r15    0x0
    rip    0x7f50261a0f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
