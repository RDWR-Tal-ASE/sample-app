apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7ff5613abf47 m=5 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7ff5613abf47
    stack: frame={sp:0x7ff55d957830, fp:0x0} stack=[0x7ff55d158288,0x7ff55d957e88)
    00007ff55d957730:  00007ff55d957af0  00007ff56199475a 
    00007ff55d957740:  000000000000000b  0000000000000000 
    00007ff55d957750:  00007ff5477bd700  000055b051057148 
    00007ff55d957760:  00007ff55d957c40  00007ff548000c50 
    00007ff55d957770:  0000000000000000  000055b050533d10 
    00007ff55d957780:  0000000000000000  00007ff56198cf13 
    00007ff55d957790:  0000000000000005  0000000000000000 
    00007ff55d9577a0:  2525252525252525  2525252525252525 
    00007ff55d9577b0:  00000000000000ff  0000000000000000 
    00007ff55d9577c0:  00000000000000ff  0000000000000000 
    00007ff55d9577d0:  0000000000000006  000000000000000a 
    00007ff55d9577e0:  000000000000000e  000000000000000e 
    00007ff55d9577f0:  0000000000000000  0000000000000000 
    00007ff55d957800:  ffffffffffffffff  ffffffffffffffff 
    00007ff55d957810:  0000000400000004  0000000400000004 
    00007ff55d957820:  20636f6c6c616d00  203a64656c696166 
    00007ff55d957830: <0000000000000000  0000000000000000 
    00007ff55d957840:  0000000000000000  0000000000000000 
    00007ff55d957850:  0000000000000000  0000000000000000 
    00007ff55d957860:  0000000000000000  0000000000000000 
    00007ff55d957870:  0000000000000000  0000000000000000 
    00007ff55d957880:  0000000000000000  0000000000000000 
    00007ff55d957890:  0000000000000000  0000000000000000 
    00007ff55d9578a0:  0000000000000000  0000000000000000 
    00007ff55d9578b0:  fffffffe7fffffff  ffffffffffffffff 
    00007ff55d9578c0:  ffffffffffffffff  ffffffffffffffff 
    00007ff55d9578d0:  ffffffffffffffff  ffffffffffffffff 
    00007ff55d9578e0:  ffffffffffffffff  ffffffffffffffff 
    00007ff55d9578f0:  ffffffffffffffff  ffffffffffffffff 
    00007ff55d957900:  ffffffffffffffff  ffffffffffffffff 
    00007ff55d957910:  ffffffffffffffff  ffffffffffffffff 
    00007ff55d957920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7ff5613abf47
    stack: frame={sp:0x7ff55d957830, fp:0x0} stack=[0x7ff55d158288,0x7ff55d957e88)
    00007ff55d957730:  00007ff55d957af0  00007ff56199475a 
    00007ff55d957740:  000000000000000b  0000000000000000 
    00007ff55d957750:  00007ff5477bd700  000055b051057148 
    00007ff55d957760:  00007ff55d957c40  00007ff548000c50 
    00007ff55d957770:  0000000000000000  000055b050533d10 
    00007ff55d957780:  0000000000000000  00007ff56198cf13 
    00007ff55d957790:  0000000000000005  0000000000000000 
    00007ff55d9577a0:  2525252525252525  2525252525252525 
    00007ff55d9577b0:  00000000000000ff  0000000000000000 
    00007ff55d9577c0:  00000000000000ff  0000000000000000 
    00007ff55d9577d0:  0000000000000006  000000000000000a 
    00007ff55d9577e0:  000000000000000e  000000000000000e 
    00007ff55d9577f0:  0000000000000000  0000000000000000 
    00007ff55d957800:  ffffffffffffffff  ffffffffffffffff 
    00007ff55d957810:  0000000400000004  0000000400000004 
    00007ff55d957820:  20636f6c6c616d00  203a64656c696166 
    00007ff55d957830: <0000000000000000  0000000000000000 
    00007ff55d957840:  0000000000000000  0000000000000000 
    00007ff55d957850:  0000000000000000  0000000000000000 
    00007ff55d957860:  0000000000000000  0000000000000000 
    00007ff55d957870:  0000000000000000  0000000000000000 
    00007ff55d957880:  0000000000000000  0000000000000000 
    00007ff55d957890:  0000000000000000  0000000000000000 
    00007ff55d9578a0:  0000000000000000  0000000000000000 
    00007ff55d9578b0:  fffffffe7fffffff  ffffffffffffffff 
    00007ff55d9578c0:  ffffffffffffffff  ffffffffffffffff 
    00007ff55d9578d0:  ffffffffffffffff  ffffffffffffffff 
    00007ff55d9578e0:  ffffffffffffffff  ffffffffffffffff 
    00007ff55d9578f0:  ffffffffffffffff  ffffffffffffffff 
    00007ff55d957900:  ffffffffffffffff  ffffffffffffffff 
    00007ff55d957910:  ffffffffffffffff  ffffffffffffffff 
    00007ff55d957920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [runnable]:
    github.com/snapcore/snapd/client.(*Client).do(0xc00036e1c0, 0x55b050387ee7, 0x3, 0x55b050391d78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x55b0509e1f40, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:394 +0x2f9
    github.com/snapcore/snapd/client.(*Client).doSyncWithOpts(0xc00036e1c0, 0x55b050387ee7, 0x3, 0x55b050391d78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x55b05097d9a0, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:492 +0xf6
    github.com/snapcore/snapd/client.(*Client).SysInfo(0xc00036e1c0, 0x46, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/client/client.go:727 +0xd4
    main.maybeWaitForSecurityProfileRegeneration(0xc00036e1c0, 0xc0003ab7c0, 0xd)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:200 +0x1aa
    main.(*cmdRun).Execute(0xc00023feb8, 0xc000032190, 0x2, 0x3, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:240 +0x172
    main.main()
    	/build/snapd/parts/snapd-deb/build/cmd/snap/main.go:482 +0x581
    
    goroutine 6 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    rax    0x0
    rbx    0x7ff561759840
    rcx    0x7ff5613abf47
    rdx    0x0
    rdi    0x2
    rsi    0x7ff55d957830
    rbp    0x55b05054de7c
    rsp    0x7ff55d957830
    r8     0x0
    r9     0x7ff55d957830
    r10    0x8
    r11    0x246
    r12    0x7ff548000c50
    r13    0x0
    r14    0x55b050533d10
    r15    0x0
    rip    0x7ff5613abf47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 7 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    runtime: failed to create new OS thread (have 8 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc00020e000)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc00020e000)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc000050000, 0x6)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc000073f01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc00020a300)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [runnable, locked to thread]:
    k8s.io/kubernetes/vendor/github.com/go-openapi/swag.(*NameProvider).GetJSONNames(0xc000400770, 0x1a89300, 0xc000533b00, 0x0, 0x0, 0x0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/swag/json.go:266 +0x25c
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000533b00, 0xc00046c701, 0x32, 0xb6ff, 0x7fa75bd5c8c0, 0xc000533b00)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:574 +0x267
    encoding/json.(*decodeState).object(0xc000534370, 0x19ce1a0, 0xc000533b00, 0x199, 0xc000534398, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc000534370, 0x19ce1a0, 0xc000533b00, 0x199, 0xc000134240, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000534370, 0x18bc100, 0xc0005333a0, 0x195, 0xc000534398, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000534370, 0x18bc100, 0xc0005333a0, 0x195, 0x18bc100, 0xc0005333a0)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000534370, 0x1815520, 0xc000533200, 0x16, 0xc000534398, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000534370, 0x1815520, 0xc000533200, 0x16, 0xc0004d0888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc000534370, 0x1815520, 0xc000533200, 0xc000534398, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc00046bdc7, 0x9ca, 0xc039, 0x1815520, 0xc000533200, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00049db00, 0xc00046bdc7, 0x9ca, 0xc039, 0x7fa75bd5c8c0, 0xc00049db00)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e4a50, 0x19ce1a0, 0xc00049db00, 0x199, 0xc0000e4a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e4a50, 0x19ce1a0, 0xc00049db00, 0x199, 0xc000532fc0, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e4a50, 0x18e59a0, 0xc000427a88, 0x195, 0xc0000e4a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e4a50, 0x18e59a0, 0xc000427a88, 0x195, 0x18e59a0, 0xc000427a88)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e4a50, 0x1815520, 0xc0004278c0, 0x16, 0xc0000e4a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e4a50, 0x1815520, 0xc0004278c0, 0x16, 0xc0001a3548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e4a50, 0x1815520, 0xc0004278c0, 0xc0000e4a78, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000468000, 0x9d38, 0xfe00, 0x1815520, 0xc0004278c0, 0x7fa75bf1ec70, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000427680, 0xc000468000, 0x9d38, 0xfe00, 0x7fa75bd5c8c0, 0xc000427680)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e49a0, 0x1a89300, 0xc000427680, 0x16, 0xc0000e49c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e49a0, 0x1a89300, 0xc000427680, 0x16, 0xc0001a3c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e49a0, 0x1a89300, 0xc000427680, 0xc0000e49c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000468000, 0x9d39, 0xfe00, 0x1a89300, 0xc000427680, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc00041db30, 0xc0001a3d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc00041da70, 0xc00041da40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 18 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000100400)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000100400)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x0, 0xc00004b000, 0x7)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0xc00004b000, 0x2a6cc00)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.handoffp(0xc00004b000)
    	/usr/local/go/src/runtime/proc.go:2001 +0x52
    runtime.stoplockedm()
    	/usr/local/go/src/runtime/proc.go:2075 +0xf7
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2611 +0x48c
    runtime.goschedImpl(0xc000000180)
    	/usr/local/go/src/runtime/proc.go:2860 +0xda
    runtime.gopreempt_m(0xc000000180)
    	/usr/local/go/src/runtime/proc.go:2888 +0x34
    runtime.newstack()
    	/usr/local/go/src/runtime/stack.go:1047 +0x1bc
    runtime.morestack()
    	/usr/local/go/src/runtime/asm_amd64.s:449 +0x8f
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f37cb958f47 m=3 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f37cb958f47
    stack: frame={sp:0x7f37c8f06820, fp:0x0} stack=[0x7f37c8707288,0x7f37c8f06e88)
    00007f37c8f06720:  0000000000000000  00007f37cbd0dc58 
    00007f37c8f06730:  00007f37c8f06ae0  00007f37cbf4175a 
    00007f37c8f06740:  000000000000000b  0000000000000000 
    00007f37c8f06750:  00007f37c1bcf700  00005608b36e2148 
    00007f37c8f06760:  00007f37c8f06c30  00007f37bc000c50 
    00007f37c8f06770:  0000000000000000  00005608b2bbed10 
    00007f37c8f06780:  0000000000000000  00007f37cbf39f13 
    00007f37c8f06790:  0000000000000005  0000000000000000 
    00007f37c8f067a0:  2525252525252525  2525252525252525 
    00007f37c8f067b0:  00000000000000ff  0000000000000000 
    00007f37c8f067c0:  00000000000000ff  0000000000000000 
    00007f37c8f067d0:  ff000000000000ff  00000000ff000000 
    00007f37c8f067e0:  000000000000000e  000000000000000e 
    00007f37c8f067f0:  0000000000000000  0000000000000000 
    00007f37c8f06800:  ffffffffffffffff  ffffffffffffffff 
    00007f37c8f06810:  0000000400000004  0000000400000004 
    00007f37c8f06820: <0000000000000000  203a64656c696166 
    00007f37c8f06830:  0000000000000000  0000000000000000 
    00007f37c8f06840:  0000000000000000  0000000000000000 
    00007f37c8f06850:  0000000000000000  0000000000000000 
    00007f37c8f06860:  0000000000000000  0000000000000000 
    00007f37c8f06870:  0000000000000000  0000000000000000 
    00007f37c8f06880:  0000000000000000  0000000000000000 
    00007f37c8f06890:  0000000000000000  0000000000000000 
    00007f37c8f068a0:  fffffffe7fffffff  ffffffffffffffff 
    00007f37c8f068b0:  ffffffffffffffff  ffffffffffffffff 
    00007f37c8f068c0:  ffffffffffffffff  ffffffffffffffff 
    00007f37c8f068d0:  ffffffffffffffff  ffffffffffffffff 
    00007f37c8f068e0:  ffffffffffffffff  ffffffffffffffff 
    00007f37c8f068f0:  ffffffffffffffff  ffffffffffffffff 
    00007f37c8f06900:  ffffffffffffffff  ffffffffffffffff 
    00007f37c8f06910:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f37cb958f47
    stack: frame={sp:0x7f37c8f06820, fp:0x0} stack=[0x7f37c8707288,0x7f37c8f06e88)
    00007f37c8f06720:  0000000000000000  00007f37cbd0dc58 
    00007f37c8f06730:  00007f37c8f06ae0  00007f37cbf4175a 
    00007f37c8f06740:  000000000000000b  0000000000000000 
    00007f37c8f06750:  00007f37c1bcf700  00005608b36e2148 
    00007f37c8f06760:  00007f37c8f06c30  00007f37bc000c50 
    00007f37c8f06770:  0000000000000000  00005608b2bbed10 
    00007f37c8f06780:  0000000000000000  00007f37cbf39f13 
    00007f37c8f06790:  0000000000000005  0000000000000000 
    00007f37c8f067a0:  2525252525252525  2525252525252525 
    00007f37c8f067b0:  00000000000000ff  0000000000000000 
    00007f37c8f067c0:  00000000000000ff  0000000000000000 
    00007f37c8f067d0:  ff000000000000ff  00000000ff000000 
    00007f37c8f067e0:  000000000000000e  000000000000000e 
    00007f37c8f067f0:  0000000000000000  0000000000000000 
    00007f37c8f06800:  ffffffffffffffff  ffffffffffffffff 
    00007f37c8f06810:  0000000400000004  0000000400000004 
    00007f37c8f06820: <0000000000000000  203a64656c696166 
    00007f37c8f06830:  0000000000000000  0000000000000000 
    00007f37c8f06840:  0000000000000000  0000000000000000 
    00007f37c8f06850:  0000000000000000  0000000000000000 
    00007f37c8f06860:  0000000000000000  0000000000000000 
    00007f37c8f06870:  0000000000000000  0000000000000000 
    00007f37c8f06880:  0000000000000000  0000000000000000 
    00007f37c8f06890:  0000000000000000  0000000000000000 
    00007f37c8f068a0:  fffffffe7fffffff  ffffffffffffffff 
    00007f37c8f068b0:  ffffffffffffffff  ffffffffffffffff 
    00007f37c8f068c0:  ffffffffffffffff  ffffffffffffffff 
    00007f37c8f068d0:  ffffffffffffffff  ffffffffffffffff 
    00007f37c8f068e0:  ffffffffffffffff  ffffffffffffffff 
    00007f37c8f068f0:  ffffffffffffffff  ffffffffffffffff 
    00007f37c8f06900:  ffffffffffffffff  ffffffffffffffff 
    00007f37c8f06910:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [runnable]:
    github.com/snapcore/snapd/client.(*Client).do(0xc00011ea80, 0x5608b2a12ee7, 0x3, 0x5608b2a1cd78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x5608b306cf40, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:394 +0x2f9
    github.com/snapcore/snapd/client.(*Client).doSyncWithOpts(0xc00011ea80, 0x5608b2a12ee7, 0x3, 0x5608b2a1cd78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x5608b30089a0, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:492 +0xf6
    github.com/snapcore/snapd/client.(*Client).SysInfo(0xc00011ea80, 0x46, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/client/client.go:727 +0xd4
    main.maybeWaitForSecurityProfileRegeneration(0xc00011ea80, 0xc000346280, 0xd)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:200 +0x1aa
    main.(*cmdRun).Execute(0xc000251eb8, 0xc0000a8160, 0x2, 0x3, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:240 +0x172
    main.main()
    	/build/snapd/parts/snapd-deb/build/cmd/snap/main.go:482 +0x581
    
    goroutine 19 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    rax    0x0
    rbx    0x7f37cbd06840
    rcx    0x7f37cb958f47
    rdx    0x0
    rdi    0x2
    rsi    0x7f37c8f06820
    rbp    0x5608b2bd8e7c
    rsp    0x7f37c8f06820
    r8     0x0
    r9     0x7f37c8f06820
    r10    0x8
    r11    0x246
    r12    0x7f37bc000c50
    r13    0x0
    r14    0x5608b2bbed10
    r15    0x0
    rip    0x7f37cb958f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
