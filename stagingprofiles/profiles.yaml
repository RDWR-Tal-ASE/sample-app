apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    /bin/sh: 0: Cannot fork
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000188000)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000188000)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc000046000, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc000073f01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc000301b00)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [syscall, locked to thread]:
    reflect.unsafe_New(0x19ce1a0, 0x93a)
    	/usr/local/go/src/runtime/malloc.go:1200 +0x38
    reflect.Zero(0x1d4e220, 0x19ce1a0, 0x19ce1a0, 0xc0003ee73e, 0xa)
    	/usr/local/go/src/reflect/value.go:2373 +0x5d
    encoding/json.(*decodeState).object(0xc0004b0370, 0x18bc100, 0xc0004b4860, 0x195, 0xc0004b0398, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:691 +0x457
    encoding/json.(*decodeState).value(0xc0004b0370, 0x18bc100, 0xc0004b4860, 0x195, 0x18bc100, 0xc0004b4860)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004b0370, 0x1815520, 0xc0004b46c0, 0x16, 0xc0004b0398, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004b0370, 0x1815520, 0xc0004b46c0, 0x16, 0xc00044e888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0004b0370, 0x1815520, 0xc0004b46c0, 0xc0004b0398, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003eddc7, 0x9ca, 0xc039, 0x1815520, 0xc0004b46c0, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00041cfc0, 0xc0003eddc7, 0x9ca, 0xc039, 0x7fd144c10b80, 0xc00041cfc0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e4a50, 0x19ce1a0, 0xc00041cfc0, 0x199, 0xc0000e4a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e4a50, 0x19ce1a0, 0xc00041cfc0, 0x199, 0xc0004b4480, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e4a50, 0x18e59a0, 0xc0003aef48, 0x195, 0xc0000e4a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e4a50, 0x18e59a0, 0xc0003aef48, 0x195, 0x18e59a0, 0xc0003aef48)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e4a50, 0x1815520, 0xc0003aed80, 0x16, 0xc0000e4a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e4a50, 0x1815520, 0xc0003aed80, 0x16, 0xc000123548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e4a50, 0x1815520, 0xc0003aed80, 0xc0000e4a78, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003ea000, 0x9d38, 0xfe00, 0x1815520, 0xc0003aed80, 0x7fd144c06bb0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0003aeb40, 0xc0003ea000, 0x9d38, 0xfe00, 0x7fd144c10b80, 0xc0003aeb40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e49a0, 0x1a89300, 0xc0003aeb40, 0x16, 0xc0000e49c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e49a0, 0x1a89300, 0xc0003aeb40, 0x16, 0xc000123c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e49a0, 0x1a89300, 0xc0003aeb40, 0xc0000e49c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003ea000, 0x9d39, 0xfe00, 0x1a89300, 0xc0003aeb40, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc00039bb30, 0xc000123d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc00039ba70, 0xc00039ba40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 18 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: 
    -----
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7fcf817cef47 m=3 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7fcf817cef47
    stack: frame={sp:0x7fcf7ed7c840, fp:0x0} stack=[0x7fcf7e57d288,0x7fcf7ed7ce88)
    00007fcf7ed7c740:  0000000000000000  0000000000000000 
    00007fcf7ed7c750:  0000000000000000  00000000008661c8 
    00007fcf7ed7c760:  00007fcf7ed7cc50  00000000021893f0 
    00007fcf7ed7c770:  0000000000000000  0000000000593e90 
    00007fcf7ed7c780:  0000000000000000  00007fcf81daff13 
    00007fcf7ed7c790:  0000000000000005  0000000000000000 
    00007fcf7ed7c7a0:  2525252525252525  2525252525252525 
    00007fcf7ed7c7b0:  00000000ff00ff00  0000000000000000 
    00007fcf7ed7c7c0:  00000000ff000000  0000000000000000 
    00007fcf7ed7c7d0:  00007fcf70000010  00007fcf70000010 
    00007fcf7ed7c7e0:  000000000000000e  000000000000000e 
    00007fcf7ed7c7f0:  0000000000000000  0000000000000000 
    00007fcf7ed7c800:  ffffffffffffffff  ffffffffffffffff 
    00007fcf7ed7c810:  0000000400000004  0000000400000004 
    00007fcf7ed7c820:  6c6c616d00732520  656c69616620636f 
    00007fcf7ed7c830:  0000000000000000  0000000000000000 
    00007fcf7ed7c840: <0000000000000000  0000000000000000 
    00007fcf7ed7c850:  0000000000000000  0000000000000000 
    00007fcf7ed7c860:  0000000000000000  0000000000000000 
    00007fcf7ed7c870:  0000000000000000  0000000000000000 
    00007fcf7ed7c880:  0000000000000000  0000000000000000 
    00007fcf7ed7c890:  0000000000000000  0000000000000000 
    00007fcf7ed7c8a0:  0000000000000000  0000000000000000 
    00007fcf7ed7c8b0:  00007fcf81b7c560  00007fcf81b7fbc0 
    00007fcf7ed7c8c0:  fffffffe7fffffff  ffffffffffffffff 
    00007fcf7ed7c8d0:  ffffffffffffffff  ffffffffffffffff 
    00007fcf7ed7c8e0:  ffffffffffffffff  ffffffffffffffff 
    00007fcf7ed7c8f0:  ffffffffffffffff  ffffffffffffffff 
    00007fcf7ed7c900:  ffffffffffffffff  ffffffffffffffff 
    00007fcf7ed7c910:  ffffffffffffffff  ffffffffffffffff 
    00007fcf7ed7c920:  ffffffffffffffff  ffffffffffffffff 
    00007fcf7ed7c930:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7fcf817cef47
    stack: frame={sp:0x7fcf7ed7c840, fp:0x0} stack=[0x7fcf7e57d288,0x7fcf7ed7ce88)
    00007fcf7ed7c740:  0000000000000000  0000000000000000 
    00007fcf7ed7c750:  0000000000000000  00000000008661c8 
    00007fcf7ed7c760:  00007fcf7ed7cc50  00000000021893f0 
    00007fcf7ed7c770:  0000000000000000  0000000000593e90 
    00007fcf7ed7c780:  0000000000000000  00007fcf81daff13 
    00007fcf7ed7c790:  0000000000000005  0000000000000000 
    00007fcf7ed7c7a0:  2525252525252525  2525252525252525 
    00007fcf7ed7c7b0:  00000000ff00ff00  0000000000000000 
    00007fcf7ed7c7c0:  00000000ff000000  0000000000000000 
    00007fcf7ed7c7d0:  00007fcf70000010  00007fcf70000010 
    00007fcf7ed7c7e0:  000000000000000e  000000000000000e 
    00007fcf7ed7c7f0:  0000000000000000  0000000000000000 
    00007fcf7ed7c800:  ffffffffffffffff  ffffffffffffffff 
    00007fcf7ed7c810:  0000000400000004  0000000400000004 
    00007fcf7ed7c820:  6c6c616d00732520  656c69616620636f 
    00007fcf7ed7c830:  0000000000000000  0000000000000000 
    00007fcf7ed7c840: <0000000000000000  0000000000000000 
    00007fcf7ed7c850:  0000000000000000  0000000000000000 
    00007fcf7ed7c860:  0000000000000000  0000000000000000 
    00007fcf7ed7c870:  0000000000000000  0000000000000000 
    00007fcf7ed7c880:  0000000000000000  0000000000000000 
    00007fcf7ed7c890:  0000000000000000  0000000000000000 
    00007fcf7ed7c8a0:  0000000000000000  0000000000000000 
    00007fcf7ed7c8b0:  00007fcf81b7c560  00007fcf81b7fbc0 
    00007fcf7ed7c8c0:  fffffffe7fffffff  ffffffffffffffff 
    00007fcf7ed7c8d0:  ffffffffffffffff  ffffffffffffffff 
    00007fcf7ed7c8e0:  ffffffffffffffff  ffffffffffffffff 
    00007fcf7ed7c8f0:  ffffffffffffffff  ffffffffffffffff 
    00007fcf7ed7c900:  ffffffffffffffff  ffffffffffffffff 
    00007fcf7ed7c910:  ffffffffffffffff  ffffffffffffffff 
    00007fcf7ed7c920:  ffffffffffffffff  ffffffffffffffff 
    00007fcf7ed7c930:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    runtime.gopark(0x57a460, 0xc0000180c8, 0x170e, 0x3)
    	/usr/lib/go-1.13/src/runtime/proc.go:304 +0xe0
    runtime.goparkunlock(...)
    	/usr/lib/go-1.13/src/runtime/proc.go:310
    runtime.chanrecv(0xc000018070, 0x0, 0xc000000101, 0x41b36e)
    	/usr/lib/go-1.13/src/runtime/chan.go:524 +0x2e8
    runtime.chanrecv1(0xc000018070, 0x0)
    	/usr/lib/go-1.13/src/runtime/chan.go:406 +0x2b
    runtime.gcenable()
    	/usr/lib/go-1.13/src/runtime/mgc.go:212 +0x95
    runtime.main()
    	/usr/lib/go-1.13/src/runtime/proc.go:166 +0x121
    runtime.goexit()
    	/usr/lib/go-1.13/src/runtime/asm_amd64.s:1357 +0x1
    
    rax    0x0
    rbx    0x7fcf81b7c840
    rcx    0x7fcf817cef47
    rdx    0x0
    rdi    0x2
    rsi    0x7fcf7ed7c840
    rbp    0x59f2ca
    rsp    0x7fcf7ed7c840
    r8     0x0
    r9     0x7fcf7ed7c840
    r10    0x8
    r11    0x246
    r12    0x21893f0
    r13    0x0
    r14    0x593e90
    r15    0x0
    rip    0x7fcf817cef47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    -----
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7fceac84cf47 m=10 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7fceac84cf47
    stack: frame={sp:0x7fce993cd820, fp:0x0} stack=[0x7fce98bce288,0x7fce993cde88)
    00007fce993cd720:  00000000001ec4ef  0000012500000002 
    00007fce993cd730:  00000000001ec4ef  00007fce993cd7e0 
    00007fce993cd740:  00005584539cacaa <runtime.pcvalue+346>  00005584549869e7 
    00007fce993cd750:  00000000004833de  0000558454e0a148 
    00007fce993cd760:  00007fce993cdc30  00007fce9c000da0 
    00007fce993cd770:  0000000000000000  00005584542e6d10 
    00007fce993cd780:  0000000000000000  00007fceace2df13 
    00007fce993cd790:  0000000000000005  0000000000000000 
    00007fce993cd7a0:  2525252525252525  2525252525252525 
    00007fce993cd7b0:  00000000000000ff  0000000000000000 
    00007fce993cd7c0:  00000000000000ff  0000000000000000 
    00007fce993cd7d0:  0000000000000000  0000000000000000 
    00007fce993cd7e0:  0000558453bcd49a <net.unixSocket+314>  00005584548e5300 
    00007fce993cd7f0:  0000000000000000  00005584548d7cc0 
    00007fce993cd800:  000000c000464960  000000c000464970 
    00007fce993cd810:  00005584539b6228 <runtime.goexit1+56>  00005584548b54d8 
    00007fce993cd820: <0000000000000000  203a64656c696166 
    00007fce993cd830:  0000000000000000  0000000000000000 
    00007fce993cd840:  000000c00035c280  000000c00040a160 
    00007fce993cd850:  0000000000000000  0000000000000000 
    00007fce993cd860:  0000000000000000  0000000000000000 
    00007fce993cd870:  0000000000000000  0000000000000000 
    00007fce993cd880:  0000000000000000  0000000000000000 
    00007fce993cd890:  00005584548e5300  000000c0000be038 
    00007fce993cd8a0:  fffffffe7fffffff  ffffffffffffffff 
    00007fce993cd8b0:  ffffffffffffffff  ffffffffffffffff 
    00007fce993cd8c0:  ffffffffffffffff  ffffffffffffffff 
    00007fce993cd8d0:  ffffffffffffffff  ffffffffffffffff 
    00007fce993cd8e0:  ffffffffffffffff  ffffffffffffffff 
    00007fce993cd8f0:  ffffffffffffffff  ffffffffffffffff 
    00007fce993cd900:  ffffffffffffffff  ffffffffffffffff 
    00007fce993cd910:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7fceac84cf47
    stack: frame={sp:0x7fce993cd820, fp:0x0} stack=[0x7fce98bce288,0x7fce993cde88)
    00007fce993cd720:  00000000001ec4ef  0000012500000002 
    00007fce993cd730:  00000000001ec4ef  00007fce993cd7e0 
    00007fce993cd740:  00005584539cacaa <runtime.pcvalue+346>  00005584549869e7 
    00007fce993cd750:  00000000004833de  0000558454e0a148 
    00007fce993cd760:  00007fce993cdc30  00007fce9c000da0 
    00007fce993cd770:  0000000000000000  00005584542e6d10 
    00007fce993cd780:  0000000000000000  00007fceace2df13 
    00007fce993cd790:  0000000000000005  0000000000000000 
    00007fce993cd7a0:  2525252525252525  2525252525252525 
    00007fce993cd7b0:  00000000000000ff  0000000000000000 
    00007fce993cd7c0:  00000000000000ff  0000000000000000 
    00007fce993cd7d0:  0000000000000000  0000000000000000 
    00007fce993cd7e0:  0000558453bcd49a <net.unixSocket+314>  00005584548e5300 
    00007fce993cd7f0:  0000000000000000  00005584548d7cc0 
    00007fce993cd800:  000000c000464960  000000c000464970 
    00007fce993cd810:  00005584539b6228 <runtime.goexit1+56>  00005584548b54d8 
    00007fce993cd820: <0000000000000000  203a64656c696166 
    00007fce993cd830:  0000000000000000  0000000000000000 
    00007fce993cd840:  000000c00035c280  000000c00040a160 
    00007fce993cd850:  0000000000000000  0000000000000000 
    00007fce993cd860:  0000000000000000  0000000000000000 
    00007fce993cd870:  0000000000000000  0000000000000000 
    00007fce993cd880:  0000000000000000  0000000000000000 
    00007fce993cd890:  00005584548e5300  000000c0000be038 
    00007fce993cd8a0:  fffffffe7fffffff  ffffffffffffffff 
    00007fce993cd8b0:  ffffffffffffffff  ffffffffffffffff 
    00007fce993cd8c0:  ffffffffffffffff  ffffffffffffffff 
    00007fce993cd8d0:  ffffffffffffffff  ffffffffffffffff 
    00007fce993cd8e0:  ffffffffffffffff  ffffffffffffffff 
    00007fce993cd8f0:  ffffffffffffffff  ffffffffffffffff 
    00007fce993cd900:  ffffffffffffffff  ffffffffffffffff 
    00007fce993cd910:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [runnable]:
    github.com/snapcore/snapd/client.(*Client).do(0xc00011ea80, 0x55845413aee7, 0x3, 0x558454144d78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x558454794f40, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:394 +0x2f9
    github.com/snapcore/snapd/client.(*Client).doSyncWithOpts(0xc00011ea80, 0x55845413aee7, 0x3, 0x558454144d78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x5584547309a0, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:492 +0xf6
    github.com/snapcore/snapd/client.(*Client).SysInfo(0xc00011ea80, 0x0, 0x5584548cc820, 0xc000075b00)
    	/build/snapd/parts/snapd-deb/build/client/client.go:727 +0xd4
    main.maybeWaitForSecurityProfileRegeneration(0xc00011ea80, 0xc00035c280, 0xd)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:200 +0x1aa
    main.(*cmdRun).Execute(0xc0004ffeb8, 0xc0000a8160, 0x2, 0x3, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:240 +0x172
    main.main()
    	/build/snapd/parts/snapd-deb/build/cmd/snap/main.go:482 +0x581
    
    goroutine 19 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    rax    0x0
    rbx    0x7fceacbfa840
    rcx    0x7fceac84cf47
    rdx    0x0
    rdi    0x2
    rsi    0x7fce993cd820
    rbp    0x558454300e7c
    rsp    0x7fce993cd820
    r8     0x0
    r9     0x7fce993cd820
    r10    0x8
    r11    0x246
    r12    0x7fce9c000da0
    r13    0x0
    r14    0x5584542e6d10
    r15    0x0
    rip    0x7fceac84cf47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
