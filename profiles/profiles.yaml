apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    Error: bad file '-': yaml: line 11: mapping values are not allowed in this context
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 7 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000500400)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000500400)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x0, 0xc00004b000, 0x6)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0xc00004b000, 0x2a6cc00)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.handoffp(0xc00004b000)
    	/usr/local/go/src/runtime/proc.go:2001 +0x52
    runtime.stoplockedm()
    	/usr/local/go/src/runtime/proc.go:2075 +0xf7
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2611 +0x48c
    runtime.goschedImpl(0xc000000180)
    	/usr/local/go/src/runtime/proc.go:2860 +0xda
    runtime.gopreempt_m(0xc000000180)
    	/usr/local/go/src/runtime/proc.go:2888 +0x34
    runtime.newstack()
    	/usr/local/go/src/runtime/stack.go:1047 +0x1bc
    runtime.morestack()
    	/usr/local/go/src/runtime/asm_amd64.s:449 +0x8f
    
    goroutine 1 [runnable, locked to thread]:
    encoding/json.(*decodeState).scanWhile(0xc000521c30, 0x9)
    	/usr/local/go/src/encoding/json/decode.go:288 +0xf3
    encoding/json.(*decodeState).object(0xc000521c30, 0x1815520, 0xc000550000, 0x16, 0xc000521c58, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:813 +0x6c7
    encoding/json.(*decodeState).value(0xc000521c30, 0x1815520, 0xc000550000, 0x16, 0xc00041fbc8, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc000521c30, 0x1815520, 0xc000550000, 0xc000521c58, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003c1626, 0x26, 0xa7da, 0x1815520, 0xc000550000, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00053bb00, 0xc0003c1626, 0x26, 0xa7da, system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
    0x7f16f5937b00, 0xc00053bb00)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc000520fd0, 0x19ce1a0, 0xc00053bb00, 0x199, 0xc000520ff8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc000520fd0, 0x19ce1a0, 0xc00053bb00, 0x199, 0xc00054dd40, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000520fd0, 0x18bc100, 0xc00053b3a0, 0x195, 0xc000520ff8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000520fd0, 0x18bc100, 0xc00053b3a0, 0x195, 0x18bc100, 0xc00053b3a0)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000520fd0, 0x1815520, 0xc00053b200, 0x16, 0xc000520ff8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000520fd0, 0x1815520, 0xc00053b200, 0x16, 0xc000420888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc000520fd0, 0x1815520, 0xc00053b200, 0xc000520ff8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003c11b6, 0x94a, 0xac4a, 0x1815520, 0xc00053b200, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0003f0fc0, 0xc0003c11b6, 0x94a, 0xac4a, 0x7f16f5937b00, 0xc0003f0fc0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc000136b00, 0x19ce1a0, 0xc0003f0fc0, 0x199, 0xc000136b28, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc000136b00, 0x19ce1a0, 0xc0003f0fc0, 0x199, 0xc00053afc0, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000136b00, 0x18e59a0, 0xc00037ef48, 0x195, 0xc000136b28, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000136b00, 0x18e59a0, 0xc00037ef48, 0x195, 0x18e59a0, 0xc00037ef48)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000136b00, 0x1815520, 0xc00037ed80, 0x16, 0xc000136b28, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000136b00, 0x1815520, 0xc00037ed80, 0x16, 0xc000173548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc000136b00, 0x1815520, 0xc00037ed80, 0xc000136b28, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003bc000, 0x9d38, 0xfe00, 0x1815520, 0xc00037ed80, 0x7f16f5998898, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00037eb40, 0xc0003bc000, 0x9d38, 0xfe00, 0x7f16f5937b00, 0xc00037eb40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc000136a50, 0x1a89300, 0xc00037eb40, 0x16, 0xc000136a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc000136a50, 0x1a89300, 0xc00037eb40, 0x16, 0xc000173c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc000136a50, 0x1a89300, 0xc00037eb40, 0xc000136a78, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003bc000, 0x9d39, 0xfe00, 0x1a89300, 0xc00037eb40, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc00036db30, 0xc000173d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc00036da70, 0xc00036da40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 6 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f04b2dcff47 m=10 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f04b2dcff47
    stack: frame={sp:0x7f048fffe820, fp:0x0} stack=[0x7f048f7ff288,0x7f048fffee88)
    00007f048fffe720:  00000000001ec4ef  00007f04b3184c58 
    00007f048fffe730:  00007f048fffeae0  00007f04b33b875a 
    00007f048fffe740:  000000000000000b  0000000000000000 
    00007f048fffe750:  00007f048effd700  000055cc0e849148 
    00007f048fffe760:  00007f048fffec30  00007f0498000c50 
    00007f048fffe770:  0000000000000000  000055cc0dd25d10 
    00007f048fffe780:  0000000000000000  00007f04b33b0f13 
    00007f048fffe790:  0000000000000005  0000000000000000 
    00007f048fffe7a0:  2525252525252525  2525252525252525 
    00007f048fffe7b0:  00000000000000ff  0000000000000000 
    00007f048fffe7c0:  00000000000000ff  0000000000000000 
    00007f048fffe7d0:  0000000000000000  0000000000000000 
    00007f048fffe7e0:  000055cc0d60c49a <net.unixSocket+314>  000055cc0e324300 
    00007f048fffe7f0:  0000000000000000  000055cc0e316cc0 
    00007f048fffe800:  000000c000404c60  000000c000404c70 
    00007f048fffe810:  000055cc0d3f5228 <runtime.goexit1+56>  000055cc0e2f44d8 
    00007f048fffe820: <0000000000000000  203a64656c696166 
    00007f048fffe830:  0000000000000000  0000000000000000 
    00007f048fffe840:  000000c000354280  000000c000427760 
    00007f048fffe850:  0000000000000000  0000000000000000 
    00007f048fffe860:  0000000000000000  0000000000000000 
    00007f048fffe870:  0000000000000000  0000000000000000 
    00007f048fffe880:  0000000000000000  0000000000000000 
    00007f048fffe890:  0000000000000000  0000000000000000 
    00007f048fffe8a0:  fffffffe7fffffff  ffffffffffffffff 
    00007f048fffe8b0:  ffffffffffffffff  ffffffffffffffff 
    00007f048fffe8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f048fffe8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f048fffe8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f048fffe8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f048fffe900:  ffffffffffffffff  ffffffffffffffff 
    00007f048fffe910:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f04b2dcff47
    stack: frame={sp:0x7f048fffe820, fp:0x0} stack=[0x7f048f7ff288,0x7f048fffee88)
    00007f048fffe720:  00000000001ec4ef  00007f04b3184c58 
    00007f048fffe730:  00007f048fffeae0  00007f04b33b875a 
    00007f048fffe740:  000000000000000b  0000000000000000 
    00007f048fffe750:  00007f048effd700  000055cc0e849148 
    00007f048fffe760:  00007f048fffec30  00007f0498000c50 
    00007f048fffe770:  0000000000000000  000055cc0dd25d10 
    00007f048fffe780:  0000000000000000  00007f04b33b0f13 
    00007f048fffe790:  0000000000000005  0000000000000000 
    00007f048fffe7a0:  2525252525252525  2525252525252525 
    00007f048fffe7b0:  00000000000000ff  0000000000000000 
    00007f048fffe7c0:  00000000000000ff  0000000000000000 
    00007f048fffe7d0:  0000000000000000  0000000000000000 
    00007f048fffe7e0:  000055cc0d60c49a <net.unixSocket+314>  000055cc0e324300 
    00007f048fffe7f0:  0000000000000000  000055cc0e316cc0 
    00007f048fffe800:  000000c000404c60  000000c000404c70 
    00007f048fffe810:  000055cc0d3f5228 <runtime.goexit1+56>  000055cc0e2f44d8 
    00007f048fffe820: <0000000000000000  203a64656c696166 
    00007f048fffe830:  0000000000000000  0000000000000000 
    00007f048fffe840:  000000c000354280  000000c000427760 
    00007f048fffe850:  0000000000000000  0000000000000000 
    00007f048fffe860:  0000000000000000  0000000000000000 
    00007f048fffe870:  0000000000000000  0000000000000000 
    00007f048fffe880:  0000000000000000  0000000000000000 
    00007f048fffe890:  0000000000000000  0000000000000000 
    00007f048fffe8a0:  fffffffe7fffffff  ffffffffffffffff 
    00007f048fffe8b0:  ffffffffffffffff  ffffffffffffffff 
    00007f048fffe8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f048fffe8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f048fffe8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f048fffe8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f048fffe900:  ffffffffffffffff  ffffffffffffffff 
    00007f048fffe910:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [select]:
    github.com/snapcore/snapd/client.(*Client).do(0xc00011ea80, 0x55cc0db79ee7, 0x3, 0x55cc0db83d78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x55cc0e1d3f40, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:394 +0x2f9
    github.com/snapcore/snapd/client.(*Client).doSyncWithOpts(0xc00011ea80, 0x55cc0db79ee7, 0x3, 0x55cc0db83d78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x55cc0e16f9a0, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:492 +0xf6
    github.com/snapcore/snapd/client.(*Client).SysInfo(0xc00011ea80, 0x0, 0x55cc0e30b820, 0xc00042c400)
    	/build/snapd/parts/snapd-deb/build/client/client.go:727 +0xd4
    main.maybeWaitForSecurityProfileRegeneration(0xc00011ea80, 0xc000354280, 0xd)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:200 +0x1aa
    main.(*cmdRun).Execute(0xc000251eb8, 0xc0000a8160, 0x2, 0x3, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:240 +0x172
    main.main()
    	/build/snapd/parts/snapd-deb/build/cmd/snap/main.go:482 +0x581
    
    goroutine 19 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 338 [runnable]:
    context.WithDeadline.func2()
    	/usr/lib/go-1.13/src/context/context.go:412
    created by time.goFunc
    	/usr/lib/go-1.13/src/time/sleep.go:168 +0x46
    
    rax    0x0
    rbx    0x7f04b317d840
    rcx    0x7f04b2dcff47
    rdx    0x0
    rdi    0x2
    rsi    0x7f048fffe820
    rbp    0x55cc0dd3fe7c
    rsp    0x7f048fffe820
    r8     0x0
    r9     0x7f048fffe820
    r10    0x8
    r11    0x246
    r12    0x7f0498000c50
    r13    0x0
    r14    0x55cc0dd25d10
    r15    0x0
    rip    0x7f04b2dcff47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
