apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: 
    -----
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f5dc223ef47 m=0 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f5dc223ef47
    stack: frame={sp:0x7ffe777bc6f0, fp:0x0} stack=[0x7ffe76fbdd30,0x7ffe777bcd70)
    00007ffe777bc5f0:  00007ffe777bc9b0  00007f5dc282775a 
    00007ffe777bc600:  000000000000000b  0000000000000000 
    00007ffe777bc610:  00007f5dbf7ed700  00000000008661c8 
    00007ffe777bc620:  00007ffe777bcb00  000000000120b3f0 
    00007ffe777bc630:  0000000000000000  0000000000593e90 
    00007ffe777bc640:  0000000000000000  00007f5dc281ff13 
    00007ffe777bc650:  0000000000000005  0000000000000000 
    00007ffe777bc660:  2525252525252525  2525252525252525 
    00007ffe777bc670:  00000000ff00ff00  0000000000000000 
    00007ffe777bc680:  00000000ff000000  0000000000000000 
    00007ffe777bc690:  0000000000000000  0000000000000000 
    00007ffe777bc6a0:  2f7273752f3a6e69  73752f3a6e696273 
    00007ffe777bc6b0:  752f3a6e69622f72  6c61636f6c2f7273 
    00007ffe777bc6c0:  73752f3a6e69622f  732f6e6962732f72 
    00007ffe777bc6d0:  2f3a656369767265  6e69622f70616e73 
    00007ffe777bc6e0:  6c6c616d00732520  656c69616620636f 
    00007ffe777bc6f0: <0000000000000000  0000000000000000 
    00007ffe777bc700:  0000000000000000  0000000000000000 
    00007ffe777bc710:  0000000000000000  0000000000000000 
    00007ffe777bc720:  0000000000000000  0000000000000000 
    00007ffe777bc730:  0000000000000000  0000000000000000 
    00007ffe777bc740:  0000000000000000  0000000000000000 
    00007ffe777bc750:  0000000000000000  0000000000000000 
    00007ffe777bc760:  0000000000000000  0000000000000000 
    00007ffe777bc770:  fffffffe7fffffff  ffffffffffffffff 
    00007ffe777bc780:  ffffffffffffffff  ffffffffffffffff 
    00007ffe777bc790:  ffffffffffffffff  ffffffffffffffff 
    00007ffe777bc7a0:  ffffffffffffffff  ffffffffffffffff 
    00007ffe777bc7b0:  ffffffffffffffff  ffffffffffffffff 
    00007ffe777bc7c0:  ffffffffffffffff  ffffffffffffffff 
    00007ffe777bc7d0:  ffffffffffffffff  ffffffffffffffff 
    00007ffe777bc7e0:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f5dc223ef47
    stack: frame={sp:0x7ffe777bc6f0, fp:0x0} stack=[0x7ffe76fbdd30,0x7ffe777bcd70)
    00007ffe777bc5f0:  00007ffe777bc9b0  00007f5dc282775a 
    00007ffe777bc600:  000000000000000b  0000000000000000 
    00007ffe777bc610:  00007f5dbf7ed700  00000000008661c8 
    00007ffe777bc620:  00007ffe777bcb00  000000000120b3f0 
    00007ffe777bc630:  0000000000000000  0000000000593e90 
    00007ffe777bc640:  0000000000000000  00007f5dc281ff13 
    00007ffe777bc650:  0000000000000005  0000000000000000 
    00007ffe777bc660:  2525252525252525  2525252525252525 
    00007ffe777bc670:  00000000ff00ff00  0000000000000000 
    00007ffe777bc680:  00000000ff000000  0000000000000000 
    00007ffe777bc690:  0000000000000000  0000000000000000 
    00007ffe777bc6a0:  2f7273752f3a6e69  73752f3a6e696273 
    00007ffe777bc6b0:  752f3a6e69622f72  6c61636f6c2f7273 
    00007ffe777bc6c0:  73752f3a6e69622f  732f6e6962732f72 
    00007ffe777bc6d0:  2f3a656369767265  6e69622f70616e73 
    00007ffe777bc6e0:  6c6c616d00732520  656c69616620636f 
    00007ffe777bc6f0: <0000000000000000  0000000000000000 
    00007ffe777bc700:  0000000000000000  0000000000000000 
    00007ffe777bc710:  0000000000000000  0000000000000000 
    00007ffe777bc720:  0000000000000000  0000000000000000 
    00007ffe777bc730:  0000000000000000  0000000000000000 
    00007ffe777bc740:  0000000000000000  0000000000000000 
    00007ffe777bc750:  0000000000000000  0000000000000000 
    00007ffe777bc760:  0000000000000000  0000000000000000 
    00007ffe777bc770:  fffffffe7fffffff  ffffffffffffffff 
    00007ffe777bc780:  ffffffffffffffff  ffffffffffffffff 
    00007ffe777bc790:  ffffffffffffffff  ffffffffffffffff 
    00007ffe777bc7a0:  ffffffffffffffff  ffffffffffffffff 
    00007ffe777bc7b0:  ffffffffffffffff  ffffffffffffffff 
    00007ffe777bc7c0:  ffffffffffffffff  ffffffffffffffff 
    00007ffe777bc7d0:  ffffffffffffffff  ffffffffffffffff 
    00007ffe777bc7e0:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [running, locked to thread]:
    runtime.systemstack_switch()
    	/usr/lib/go-1.13/src/runtime/asm_amd64.s:330 fp=0xc00003c6c8 sp=0xc00003c6c0 pc=0x456b50
    runtime.newproc(0x0, 0x57a308)
    	/usr/lib/go-1.13/src/runtime/proc.go:3255 +0x6e fp=0xc00003c710 sp=0xc00003c6c8 pc=0x437e5e
    runtime.init.5()
    	/usr/lib/go-1.13/src/runtime/proc.go:242 +0x35 fp=0xc00003c730 sp=0xc00003c710 pc=0x430745
    runtime.doInit(0x874ae0)
    	/usr/lib/go-1.13/src/runtime/proc.go:5222 +0x8a fp=0xc00003c760 sp=0xc00003c730 pc=0x43c58a
    runtime.main()
    	/usr/lib/go-1.13/src/runtime/proc.go:150 +0xc3 fp=0xc00003c7e0 sp=0xc00003c760 pc=0x430433
    runtime.goexit()
    	/usr/lib/go-1.13/src/runtime/asm_amd64.s:1357 +0x1 fp=0xc00003c7e8 sp=0xc00003c7e0 pc=0x458c21
    
    rax    0x0
    rbx    0x7f5dc25ec840
    rcx    0x7f5dc223ef47
    rdx    0x0
    rdi    0x2
    rsi    0x7ffe777bc6f0
    rbp    0x59f2ca
    rsp    0x7ffe777bc6f0
    r8     0x0
    r9     0x7ffe777bc6f0
    r10    0x8
    r11    0x246
    r12    0x120b3f0
    r13    0x0
    r14    0x593e90
    r15    0x0
    rip    0x7f5dc223ef47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    -----
    Error: bad file '-': yaml: line 11: mapping values are not allowed in this context
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 8 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    runtime: failed to create new OS thread (have 8 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc00055c000)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc00055c000)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x0, 0xc000048800, 0x6)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0xc000048800, 0x2a6cc00)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.handoffp(0xc000048800)
    	/usr/local/go/src/runtime/proc.go:2006 +0x2f4
    runtime.stoplockedm()
    	/usr/local/go/src/runtime/proc.go:2075 +0xf7
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2611 +0x48c
    runtime.preemptPark(0xc000000180)
    	/usr/local/go/src/runtime/proc.go:2913 +0xb4
    runtime.newstack()
    	/usr/local/go/src/runtime/stack.go:1043 +0x2e6
    runtime.morestack()
    	/usr/local/go/src/runtime/asm_amd64.s:449 +0x8f
    
    goroutine 1 [runnable, locked to thread]:
    k8s.io/kubernetes/vendor/github.com/go-openapi/jsonpointer.(*Pointer).parse(0xc0004cdb70, 0xc0004e9d01, 0x1c, 0x0, 0x0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/jsonpointer/pointer.go:75 +0x245
    k8s.io/kubernetes/vendor/github.com/go-openapi/jsonpointer.New(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/jsonpointer/pointer.go:64
    k8s.io/kubernetes/vendor/github.com/go-openapi/jsonreference.(*Ref).parse(0xc0004cdbc8, 0xc0004e9ce0, 0x1d, 0x4, 0xc00055b4c8)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/jsonreference/reference.go:134 +0x113
    k8s.io/kubernetes/vendor/github.com/go-openapi/jsonreference.New(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/jsonreference/reference.go:45
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Ref).fromMap(0xc0004cdd48, 0xc0005237d0, 0xb5f8, 0x1811e60)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/ref.go:182 +0xe8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00054d440, 0xc00046c808, 0x3d, 0xb5f8, 0x7f77f56ece60, 0xc00054d440)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:569 +0x1bc
    encoding/json.(*decodeState).object(0xc000544a50, 0x19ce1a0, 0xc00054d440, 0x199, 0xc000544a78, 0xc0004ce27b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc000544a50, 0x19ce1a0, 0xc00054d440, 0x199, 0xc00054d440, 0x199)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000544a50, 0x18bc100, 0xc00054d3b0, 0x195, 0xc000544a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000544a50, 0x18bc100, 0xc00054d3b0, 0x195, 0x18bc100, 0xc00054d3b0)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000544a50, 0x1815520, 0xc00054d200, 0x16, 0xc000544a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000544a50, 0x1815520, 0xc00054d200, 0x16, 0xc0004ce888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc000544a50, 0x1815520, 0xc00054d200, 0xc000544a78, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc00046c7b5, 0x9e1, 0xb64b, 0x1815520, 0xc00054d200, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00049d440, 0xc00046c7b5, 0x9e1, 0xb64b, 0x7f77f56ece60, 0xc00049d440)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e4b00, 0x19ce1a0, 0xc00049d440, 0x199, 0xc0000e4b28, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e4b00, 0x19ce1a0, 0xc00049d440, 0x199, 0xc00054cfc0, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e4b00, 0x18e59a0, 0xc00042b3c8, 0x195, 0xc0000e4b28, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e4b00, 0x18e59a0, 0xc00042b3c8, 0x195, 0x18e59a0, 0xc00042b3c8)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e4b00, 0x1815520, 0xc00042b200, 0x16, 0xc0000e4b28, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e4b00, 0x1815520, 0xc00042b200, 0x16, 0xc0001a3548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e4b00, 0x1815520, 0xc00042b200, 0xc0000e4b28, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000468000, 0x9d38, 0xfe00, 0x1815520, 0xc00042b200, 0x2aa0130, 0x7f77f56ecce0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00042afc0, 0xc000468000, 0x9d38, 0xfe00, 0x7f77f56ece60, 0xc00042afc0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e4a50, 0x1a89300, 0xc00042afc0, 0x16, 0xc0000e4a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e4a50, 0x1a89300, 0xc00042afc0, 0x16, 0xc0001a3c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e4a50, 0x1a89300, 0xc00042afc0, 0xc0000e4a78, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000468000, 0x9d39, 0xfe00, 0x1a89300, 0xc00042afc0, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc00041db30, 0xc0001a3d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc00041da70, 0xc00041da40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 18 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000580000)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000580000)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc000050000, 0x7)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc000073f01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc000550480)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
