apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f584d0c7f47 m=3 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f584d0c7f47
    stack: frame={sp:0x7f584a675830, fp:0x0} stack=[0x7f5849e76288,0x7f584a675e88)
    00007f584a675730:  00007f584a675af0  00007f584d6b075a 
    00007f584a675740:  000000000000000b  0000000000000000 
    00007f584a675750:  00007f583bfff700  000055688be59148 
    00007f584a675760:  00007f584a675c40  00007f583c000c50 
    00007f584a675770:  0000000000000000  000055688b335d10 
    00007f584a675780:  0000000000000000  00007f584d6a8f13 
    00007f584a675790:  0000000000000005  0000000000000000 
    00007f584a6757a0:  2525252525252525  2525252525252525 
    00007f584a6757b0:  00000000000000ff  0000000000000000 
    00007f584a6757c0:  00000000000000ff  0000000000000000 
    00007f584a6757d0:  00007f583c000010  00007f583c000010 
    00007f584a6757e0:  000000000000000e  000000000000000e 
    00007f584a6757f0:  0000000000000000  0000000000000000 
    00007f584a675800:  ffffffffffffffff  ffffffffffffffff 
    00007f584a675810:  0000000400000004  0000000400000004 
    00007f584a675820:  20636f6c6c616d00  203a64656c696166 
    00007f584a675830: <0000000000000000  0000000000000000 
    00007f584a675840:  0000000000000000  0000000000000000 
    00007f584a675850:  0000000000000000  0000000000000000 
    00007f584a675860:  0000000000000000  0000000000000000 
    00007f584a675870:  0000000000000000  0000000000000000 
    00007f584a675880:  0000000000000000  0000000000000000 
    00007f584a675890:  0000000000000000  0000000000000000 
    00007f584a6758a0:  0000000000000000  0000000000000000 
    00007f584a6758b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f584a6758c0:  ffffffffffffffff  ffffffffffffffff 
    00007f584a6758d0:  ffffffffffffffff  ffffffffffffffff 
    00007f584a6758e0:  ffffffffffffffff  ffffffffffffffff 
    00007f584a6758f0:  ffffffffffffffff  ffffffffffffffff 
    00007f584a675900:  ffffffffffffffff  ffffffffffffffff 
    00007f584a675910:  ffffffffffffffff  ffffffffffffffff 
    00007f584a675920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f584d0c7f47
    stack: frame={sp:0x7f584a675830, fp:0x0} stack=[0x7f5849e76288,0x7f584a675e88)
    00007f584a675730:  00007f584a675af0  00007f584d6b075a 
    00007f584a675740:  000000000000000b  0000000000000000 
    00007f584a675750:  00007f583bfff700  000055688be59148 
    00007f584a675760:  00007f584a675c40  00007f583c000c50 
    00007f584a675770:  0000000000000000  000055688b335d10 
    00007f584a675780:  0000000000000000  00007f584d6a8f13 
    00007f584a675790:  0000000000000005  0000000000000000 
    00007f584a6757a0:  2525252525252525  2525252525252525 
    00007f584a6757b0:  00000000000000ff  0000000000000000 
    00007f584a6757c0:  00000000000000ff  0000000000000000 
    00007f584a6757d0:  00007f583c000010  00007f583c000010 
    00007f584a6757e0:  000000000000000e  000000000000000e 
    00007f584a6757f0:  0000000000000000  0000000000000000 
    00007f584a675800:  ffffffffffffffff  ffffffffffffffff 
    00007f584a675810:  0000000400000004  0000000400000004 
    00007f584a675820:  20636f6c6c616d00  203a64656c696166 
    00007f584a675830: <0000000000000000  0000000000000000 
    00007f584a675840:  0000000000000000  0000000000000000 
    00007f584a675850:  0000000000000000  0000000000000000 
    00007f584a675860:  0000000000000000  0000000000000000 
    00007f584a675870:  0000000000000000  0000000000000000 
    00007f584a675880:  0000000000000000  0000000000000000 
    00007f584a675890:  0000000000000000  0000000000000000 
    00007f584a6758a0:  0000000000000000  0000000000000000 
    00007f584a6758b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f584a6758c0:  ffffffffffffffff  ffffffffffffffff 
    00007f584a6758d0:  ffffffffffffffff  ffffffffffffffff 
    00007f584a6758e0:  ffffffffffffffff  ffffffffffffffff 
    00007f584a6758f0:  ffffffffffffffff  ffffffffffffffff 
    00007f584a675900:  ffffffffffffffff  ffffffffffffffff 
    00007f584a675910:  ffffffffffffffff  ffffffffffffffff 
    00007f584a675920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).parse(0xc00011c500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:277 +0xbc6
    text/template/parse.(*Tree).Parse(0xc00011c500, 0x55688b1e5440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001c4720, 0xc000142350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x55688b18a9b7, 0x4, 0x55688b1e5440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000142350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc00003d840, 0x55688b1e5440, 0x16c, 0x4, 0xc0001095e8, 0x55688be74760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 6 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 7 [runnable]:
    text/template/parse.(*lexer).run(0xc00014a630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:228
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7f584d475840
    rcx    0x7f584d0c7f47
    rdx    0x0
    rdi    0x2
    rsi    0x7f584a675830
    rbp    0x55688b34fe7c
    rsp    0x7f584a675830
    r8     0x0
    r9     0x7f584a675830
    r10    0x8
    r11    0x246
    r12    0x7f583c000c50
    r13    0x0
    r14    0x55688b335d10
    r15    0x0
    rip    0x7f584d0c7f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000062c00)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000062c00)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc00004b000, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc000073f01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc00008a300)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [syscall, locked to thread]:
    reflect.MakeSlice(0x1d4e220, 0x181c100, 0x0, 0x4, 0x181c100, 0x0, 0x0)
    	/usr/local/go/src/reflect/value.go:2299 +0x85
    encoding/json.(*decodeState).array(0xc0004454a0, 0x181c100, 0xc000453548, 0x197, 0xc0004454c8, 0x5b)
    	/usr/local/go/src/encoding/json/decode.go:547 +0x716
    encoding/json.(*decodeState).value(0xc0004454a0, 0x181c100, 0xc000453548, 0x197, 0x181c100, 0xc000453548)
    	/usr/local/go/src/encoding/json/decode.go:360 +0x105
    encoding/json.(*decodeState).object(0xc0004454a0, 0x1815520, 0xc000453440, 0x16, 0xc0004454c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004454a0, 0x1815520, 0xc000453440, 0x16, 0xc0003cdbc8, 0x6fa34b)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0004454a0, 0x1815520, 0xc000453440, 0xc0004454c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc00036cbd6, 0xc9, 0xb22a, 0x1815520, 0xc000453440, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000450fc0, 0xc00036cbd6, 0xc9, 0xb22a, 0x7ff09827a540, 0xc000450fc0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc000444840, 0x19ce1a0, 0xc000450fc0, 0x199, 0xc000444868, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc000444840, 0x19ce1a0, 0xc000450fc0, 0x199, 0xc000453200, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000444840, 0x18bc100, 0xc000450860, 0x195, 0xc000444868, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000444840, 0x18bc100, 0xc000450860, 0x195, 0x18bc100, 0xc000450860)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000444840, 0x1815520, 0xc0004506c0, 0x16, 0xc000444868, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000444840, 0x1815520, 0xc0004506c0, 0x16, 0xc0003ce888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc000444840, 0x1815520, 0xc0004506c0, 0xc000444868, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc00036c7b5, 0x9e1, 0xb64b, 0x1815520, 0xc0004506c0, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00039e900, 0xc00036c7b5, 0x9e1, 0xb64b, 0x7ff09827a540, 0xc00039e900)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e48f0, 0x19ce1a0, 0xc00039e900, 0x199, 0xc0000e4918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e48f0, 0x19ce1a0, 0xc00039e900, 0x199, 0xc000450480, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e48f0, 0x18e59a0, 0xc000332888, 0x195, 0xc0000e4918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e48f0, 0x18e59a0, 0xc000332888, 0x195, 0x18e59a0, 0xc000332888)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e48f0, 0x1815520, 0xc0003326c0, 0x16, 0xc0000e4918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e48f0, 0x1815520, 0xc0003326c0, 0x16, 0xc000123548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e48f0, 0x1815520, 0xc0003326c0, 0xc0000e4918, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000368000, 0x9d38, 0xfe00, 0x1815520, 0xc0003326c0, 0x7ff09843c920, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000332480, 0xc000368000, 0x9d38, 0xfe00, 0x7ff09827a540, 0xc000332480)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e4840, 0x1a89300, 0xc000332480, 0x16, 0xc0000e4868, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e4840, 0x1a89300, 0xc000332480, 0x16, 0xc000123c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e4840, 0x1a89300, 0xc000332480, 0xc0000e4868, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000368000, 0x9d39, 0xfe00, 0x1a89300, 0xc000332480, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc00031bb30, 0xc000123d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc00031ba70, 0xc00031ba40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 18 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7fe5cd5f5f47 m=5 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7fe5cd5f5f47
    stack: frame={sp:0x7fe5ca3a2830, fp:0x0} stack=[0x7fe5c9ba3288,0x7fe5ca3a2e88)
    00007fe5ca3a2730:  00007fe5ca3a2af0  00007fe5cdbde75a 
    00007fe5ca3a2740:  000000000000000b  0000000000000000 
    00007fe5ca3a2750:  00007fe5c9241700  000056071b694148 
    00007fe5ca3a2760:  00007fe5ca3a2c40  000056071c0453f0 
    00007fe5ca3a2770:  0000000000000000  000056071ab70d10 
    00007fe5ca3a2780:  0000000000000000  00007fe5cdbd6f13 
    00007fe5ca3a2790:  0000000000000005  0000000000000000 
    00007fe5ca3a27a0:  2525252525252525  2525252525252525 
    00007fe5ca3a27b0:  00000000000000ff  0000000000000000 
    00007fe5ca3a27c0:  00000000000000ff  0000000000000000 
    00007fe5ca3a27d0:  00007fe5b8000010  00007fe5b8000010 
    00007fe5ca3a27e0:  000000000000000e  000000000000000e 
    00007fe5ca3a27f0:  0000000000000000  0000000000000000 
    00007fe5ca3a2800:  ffffffffffffffff  ffffffffffffffff 
    00007fe5ca3a2810:  0000000400000004  0000000400000004 
    00007fe5ca3a2820:  20636f6c6c616d00  203a64656c696166 
    00007fe5ca3a2830: <0000000000000000  0000000000000000 
    00007fe5ca3a2840:  0000000000000000  0000000000000000 
    00007fe5ca3a2850:  0000000000000000  0000000000000000 
    00007fe5ca3a2860:  0000000000000000  0000000000000000 
    00007fe5ca3a2870:  0000000000000000  0000000000000000 
    00007fe5ca3a2880:  0000000000000000  0000000000000000 
    00007fe5ca3a2890:  0000000000000000  0000000000000000 
    00007fe5ca3a28a0:  0000000000000000  0000000000000000 
    00007fe5ca3a28b0:  fffffffe7fffffff  ffffffffffffffff 
    00007fe5ca3a28c0:  ffffffffffffffff  ffffffffffffffff 
    00007fe5ca3a28d0:  ffffffffffffffff  ffffffffffffffff 
    00007fe5ca3a28e0:  ffffffffffffffff  ffffffffffffffff 
    00007fe5ca3a28f0:  ffffffffffffffff  ffffffffffffffff 
    00007fe5ca3a2900:  ffffffffffffffff  ffffffffffffffff 
    00007fe5ca3a2910:  ffffffffffffffff  ffffffffffffffff 
    00007fe5ca3a2920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7fe5cd5f5f47
    stack: frame={sp:0x7fe5ca3a2830, fp:0x0} stack=[0x7fe5c9ba3288,0x7fe5ca3a2e88)
    00007fe5ca3a2730:  00007fe5ca3a2af0  00007fe5cdbde75a 
    00007fe5ca3a2740:  000000000000000b  0000000000000000 
    00007fe5ca3a2750:  00007fe5c9241700  000056071b694148 
    00007fe5ca3a2760:  00007fe5ca3a2c40  000056071c0453f0 
    00007fe5ca3a2770:  0000000000000000  000056071ab70d10 
    00007fe5ca3a2780:  0000000000000000  00007fe5cdbd6f13 
    00007fe5ca3a2790:  0000000000000005  0000000000000000 
    00007fe5ca3a27a0:  2525252525252525  2525252525252525 
    00007fe5ca3a27b0:  00000000000000ff  0000000000000000 
    00007fe5ca3a27c0:  00000000000000ff  0000000000000000 
    00007fe5ca3a27d0:  00007fe5b8000010  00007fe5b8000010 
    00007fe5ca3a27e0:  000000000000000e  000000000000000e 
    00007fe5ca3a27f0:  0000000000000000  0000000000000000 
    00007fe5ca3a2800:  ffffffffffffffff  ffffffffffffffff 
    00007fe5ca3a2810:  0000000400000004  0000000400000004 
    00007fe5ca3a2820:  20636f6c6c616d00  203a64656c696166 
    00007fe5ca3a2830: <0000000000000000  0000000000000000 
    00007fe5ca3a2840:  0000000000000000  0000000000000000 
    00007fe5ca3a2850:  0000000000000000  0000000000000000 
    00007fe5ca3a2860:  0000000000000000  0000000000000000 
    00007fe5ca3a2870:  0000000000000000  0000000000000000 
    00007fe5ca3a2880:  0000000000000000  0000000000000000 
    00007fe5ca3a2890:  0000000000000000  0000000000000000 
    00007fe5ca3a28a0:  0000000000000000  0000000000000000 
    00007fe5ca3a28b0:  fffffffe7fffffff  ffffffffffffffff 
    00007fe5ca3a28c0:  ffffffffffffffff  ffffffffffffffff 
    00007fe5ca3a28d0:  ffffffffffffffff  ffffffffffffffff 
    00007fe5ca3a28e0:  ffffffffffffffff  ffffffffffffffff 
    00007fe5ca3a28f0:  ffffffffffffffff  ffffffffffffffff 
    00007fe5ca3a2900:  ffffffffffffffff  ffffffffffffffff 
    00007fe5ca3a2910:  ffffffffffffffff  ffffffffffffffff 
    00007fe5ca3a2920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).parse(0xc00012c500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:277 +0xbc6
    text/template/parse.(*Tree).Parse(0xc00012c500, 0x56071aa20440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001d66f0, 0xc000152340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x56071a9c59b7, 0x4, 0x56071aa20440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000152340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc0000cd780, 0x56071aa20440, 0x16c, 0x4, 0xc0001195e8, 0x56071b6af760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 19 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 20 [runnable]:
    text/template/parse.(*lexer).run(0xc00015a630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:228
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7fe5cd9a3840
    rcx    0x7fe5cd5f5f47
    rdx    0x0
    rdi    0x2
    rsi    0x7fe5ca3a2830
    rbp    0x56071ab8ae7c
    rsp    0x7fe5ca3a2830
    r8     0x0
    r9     0x7fe5ca3a2830
    r10    0x8
    r11    0x246
    r12    0x56071c0453f0
    r13    0x0
    r14    0x56071ab70d10
    r15    0x0
    rip    0x7fe5cd5f5f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
