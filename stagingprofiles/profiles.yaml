apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f71e6310f47 m=0 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f71e6310f47
    stack: frame={sp:0x7ffd47010eb0, fp:0x0} stack=[0x7ffd468124f0,0x7ffd47011530)
    00007ffd47010db0:  00007ffd47011170  00007f71e68f975a 
    00007ffd47010dc0:  000000000000000b  0000000000000000 
    00007ffd47010dd0:  00007f71e38bf700  000055bdd225b148 
    00007ffd47010de0:  00007ffd470112c0  000055bdd2f1a3f0 
    00007ffd47010df0:  0000000000000000  000055bdd1737d10 
    00007ffd47010e00:  0000000000000000  00007f71e68f1f13 
    00007ffd47010e10:  0000000000000005  0000000000000000 
    00007ffd47010e20:  2525252525252525  2525252525252525 
    00007ffd47010e30:  00000000000000ff  0000000000000000 
    00007ffd47010e40:  00000000000000ff  0000000000000000 
    00007ffd47010e50:  0000000000000000  0000000000000000 
    00007ffd47010e60:  2f7273752f3a6e69  73752f3a6e696273 
    00007ffd47010e70:  752f3a6e69622f72  6c61636f6c2f7273 
    00007ffd47010e80:  73752f3a6e69622f  732f6e6962732f72 
    00007ffd47010e90:  2f3a656369767265  6e69622f70616e73 
    00007ffd47010ea0:  20636f6c6c616d00  203a64656c696166 
    00007ffd47010eb0: <0000000000000000  0000000000000000 
    00007ffd47010ec0:  0000000000000000  0000000000000000 
    00007ffd47010ed0:  0000000000000000  0000000000000000 
    00007ffd47010ee0:  0000000000000000  0000000000000000 
    00007ffd47010ef0:  0000000000000000  0000000000000000 
    00007ffd47010f00:  0000000000000000  0000000000000000 
    00007ffd47010f10:  0000000000000000  0000000000000000 
    00007ffd47010f20:  0000000000000000  0000000000000000 
    00007ffd47010f30:  fffffffe7fffffff  ffffffffffffffff 
    00007ffd47010f40:  ffffffffffffffff  ffffffffffffffff 
    00007ffd47010f50:  ffffffffffffffff  ffffffffffffffff 
    00007ffd47010f60:  ffffffffffffffff  ffffffffffffffff 
    00007ffd47010f70:  ffffffffffffffff  ffffffffffffffff 
    00007ffd47010f80:  ffffffffffffffff  ffffffffffffffff 
    00007ffd47010f90:  ffffffffffffffff  ffffffffffffffff 
    00007ffd47010fa0:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f71e6310f47
    stack: frame={sp:0x7ffd47010eb0, fp:0x0} stack=[0x7ffd468124f0,0x7ffd47011530)
    00007ffd47010db0:  00007ffd47011170  00007f71e68f975a 
    00007ffd47010dc0:  000000000000000b  0000000000000000 
    00007ffd47010dd0:  00007f71e38bf700  000055bdd225b148 
    00007ffd47010de0:  00007ffd470112c0  000055bdd2f1a3f0 
    00007ffd47010df0:  0000000000000000  000055bdd1737d10 
    00007ffd47010e00:  0000000000000000  00007f71e68f1f13 
    00007ffd47010e10:  0000000000000005  0000000000000000 
    00007ffd47010e20:  2525252525252525  2525252525252525 
    00007ffd47010e30:  00000000000000ff  0000000000000000 
    00007ffd47010e40:  00000000000000ff  0000000000000000 
    00007ffd47010e50:  0000000000000000  0000000000000000 
    00007ffd47010e60:  2f7273752f3a6e69  73752f3a6e696273 
    00007ffd47010e70:  752f3a6e69622f72  6c61636f6c2f7273 
    00007ffd47010e80:  73752f3a6e69622f  732f6e6962732f72 
    00007ffd47010e90:  2f3a656369767265  6e69622f70616e73 
    00007ffd47010ea0:  20636f6c6c616d00  203a64656c696166 
    00007ffd47010eb0: <0000000000000000  0000000000000000 
    00007ffd47010ec0:  0000000000000000  0000000000000000 
    00007ffd47010ed0:  0000000000000000  0000000000000000 
    00007ffd47010ee0:  0000000000000000  0000000000000000 
    00007ffd47010ef0:  0000000000000000  0000000000000000 
    00007ffd47010f00:  0000000000000000  0000000000000000 
    00007ffd47010f10:  0000000000000000  0000000000000000 
    00007ffd47010f20:  0000000000000000  0000000000000000 
    00007ffd47010f30:  fffffffe7fffffff  ffffffffffffffff 
    00007ffd47010f40:  ffffffffffffffff  ffffffffffffffff 
    00007ffd47010f50:  ffffffffffffffff  ffffffffffffffff 
    00007ffd47010f60:  ffffffffffffffff  ffffffffffffffff 
    00007ffd47010f70:  ffffffffffffffff  ffffffffffffffff 
    00007ffd47010f80:  ffffffffffffffff  ffffffffffffffff 
    00007ffd47010f90:  ffffffffffffffff  ffffffffffffffff 
    00007ffd47010fa0:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [running, locked to thread]:
    runtime.systemstack_switch()
    	/usr/lib/go-1.13/src/runtime/asm_amd64.s:330 fp=0xc00005e6c8 sp=0xc00005e6c0 pc=0x55bdd0e2ab20
    runtime.newproc(0x55bd00000000, 0x55bdd1d06470)
    	/usr/lib/go-1.13/src/runtime/proc.go:3255 +0x70 fp=0xc00005e710 sp=0xc00005e6c8 pc=0x55bdd0e08680
    runtime.init.5()
    	/usr/lib/go-1.13/src/runtime/proc.go:242 +0x37 fp=0xc00005e730 sp=0xc00005e710 pc=0x55bdd0e00ba7
    runtime.doInit(0x55bdd2277cc0)
    	/usr/lib/go-1.13/src/runtime/proc.go:5222 +0x8c fp=0xc00005e760 sp=0xc00005e730 pc=0x55bdd0e0cfdc
    runtime.main()
    	/usr/lib/go-1.13/src/runtime/proc.go:150 +0xcb fp=0xc00005e7e0 sp=0xc00005e760 pc=0x55bdd0e0088b
    runtime.goexit()
    	/usr/lib/go-1.13/src/runtime/asm_amd64.s:1357 +0x1 fp=0xc00005e7e8 sp=0xc00005e7e0 pc=0x55bdd0e2cc21
    
    rax    0x0
    rbx    0x7f71e66be840
    rcx    0x7f71e6310f47
    rdx    0x0
    rdi    0x2
    rsi    0x7ffd47010eb0
    rbp    0x55bdd1751e7c
    rsp    0x7ffd47010eb0
    r8     0x0
    r9     0x7ffd47010eb0
    r10    0x8
    r11    0x246
    r12    0x55bdd2f1a3f0
    r13    0x0
    r14    0x55bdd1737d10
    r15    0x0
    rip    0x7f71e6310f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc00045a000)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc00045a000)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc000046000, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc000099f01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc00008a300)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [syscall, locked to thread]:
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000454fc0, 0xc0003729e7, 0xb2, 0xb419, 0x7f6e9f1aa400, 0xc000454fc0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:551 +0x45
    encoding/json.(*decodeState).object(0xc000446b00, 0x19ce1a0, 0xc000454fc0, 0x199, 0xc000446b28, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc000446b00, 0x19ce1a0, 0xc000454fc0, 0x199, 0xc000455d40, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000446b00, 0x18bc100, 0xc000454860, 0x195, 0xc000446b28, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000446b00, 0x18bc100, 0xc000454860, 0x195, 0x18bc100, 0xc000454860)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000446b00, 0x1815520, 0xc0004546c0, 0x16, 0xc000446b28, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000446b00, 0x1815520, 0xc0004546c0, 0x16, 0xc0003d0888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc000446b00, 0x1815520, 0xc0004546c0, 0xc000446b28, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003727b5, 0x9e1, 0xb64b, 0x1815520, 0xc0004546c0, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0003a0900, 0xc0003727b5, 0x9e1, 0xb64b, 0x7f6e9f1aa400, 0xc0003a0900)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e4bb0, 0x19ce1a0, 0xc0003a0900, 0x199, 0xc0000e4bd8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e4bb0, 0x19ce1a0, 0xc0003a0900, 0x199, 0xc000454480, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e4bb0, 0x18e59a0, 0xc000334888, 0x195, 0xc0000e4bd8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e4bb0, 0x18e59a0, 0xc000334888, 0x195, 0x18e59a0, 0xc000334888)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e4bb0, 0x1815520, 0xc0003346c0, 0x16, 0xc0000e4bd8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e4bb0, 0x1815520, 0xc0003346c0, 0x16, 0xc000123548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e4bb0, 0x1815520, 0xc0003346c0, 0xc0000e4bd8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc00036e000, 0x9d38, 0xfe00, 0x1815520, 0xc0003346c0, 0x7f6e9f36c760, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000334480, 0xc00036e000, 0x9d38, 0xfe00, 0x7f6e9f1aa400, 0xc000334480)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e4b00, 0x1a89300, 0xc000334480, 0x16, 0xc0000e4b28, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e4b00, 0x1a89300, 0xc000334480, 0x16, 0xc000123c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e4b00, 0x1a89300, 0xc000334480, 0xc0000e4b28, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc00036e000, 0x9d39, 0xfe00, 0x1a89300, 0xc000334480, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc00031fb30, 0xc000123d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc00031fa70, 0xc00031fa40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 18 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
