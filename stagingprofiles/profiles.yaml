apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f970bb1df47 m=3 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f970bb1df47
    stack: frame={sp:0x7f97090cb840, fp:0x0} stack=[0x7f97088cc288,0x7f97090cbe88)
    00007f97090cb740:  00007f97090cbb20  00007f970c0fef13 
    00007f97090cb750:  0000000000000005  000055f1e4709148 
    00007f97090cb760:  00007f97090cbc50  000055f1e48593f0 
    00007f97090cb770:  0000000000000000  000055f1e3be5d10 
    00007f97090cb780:  0000000000000000  00007f970c0fef13 
    00007f97090cb790:  0000000000000005  0000000000000000 
    00007f97090cb7a0:  2525252525252525  2525252525252525 
    00007f97090cb7b0:  00000000000000ff  0000000000000000 
    00007f97090cb7c0:  00000000000000ff  0000000000000000 
    00007f97090cb7d0:  00007f96fc000010  00007f96fc000010 
    00007f97090cb7e0:  000000000000000e  000000000000000e 
    00007f97090cb7f0:  0000000000000000  0000000000000000 
    00007f97090cb800:  ffffffffffffffff  ffffffffffffffff 
    00007f97090cb810:  0000000400000004  0000000400000004 
    00007f97090cb820:  20636f6c6c616d00  203a64656c696166 
    00007f97090cb830:  0000000000000000  0000000000000000 
    00007f97090cb840: <0000000000000000  0000000000000000 
    00007f97090cb850:  0000000000000000  0000000000000000 
    00007f97090cb860:  0000000000000000  0000000000000000 
    00007f97090cb870:  0000000000000000  0000000000000000 
    00007f97090cb880:  0000000000000000  0000000000000000 
    00007f97090cb890:  0000000000000000  0000000000000000 
    00007f97090cb8a0:  0000000000000000  0000000000000000 
    00007f97090cb8b0:  00007f970becb560  00007f970becebc0 
    00007f97090cb8c0:  fffffffe7fffffff  ffffffffffffffff 
    00007f97090cb8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f97090cb8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f97090cb8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f97090cb900:  ffffffffffffffff  ffffffffffffffff 
    00007f97090cb910:  ffffffffffffffff  ffffffffffffffff 
    00007f97090cb920:  ffffffffffffffff  ffffffffffffffff 
    00007f97090cb930:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f970bb1df47
    stack: frame={sp:0x7f97090cb840, fp:0x0} stack=[0x7f97088cc288,0x7f97090cbe88)
    00007f97090cb740:  00007f97090cbb20  00007f970c0fef13 
    00007f97090cb750:  0000000000000005  000055f1e4709148 
    00007f97090cb760:  00007f97090cbc50  000055f1e48593f0 
    00007f97090cb770:  0000000000000000  000055f1e3be5d10 
    00007f97090cb780:  0000000000000000  00007f970c0fef13 
    00007f97090cb790:  0000000000000005  0000000000000000 
    00007f97090cb7a0:  2525252525252525  2525252525252525 
    00007f97090cb7b0:  00000000000000ff  0000000000000000 
    00007f97090cb7c0:  00000000000000ff  0000000000000000 
    00007f97090cb7d0:  00007f96fc000010  00007f96fc000010 
    00007f97090cb7e0:  000000000000000e  000000000000000e 
    00007f97090cb7f0:  0000000000000000  0000000000000000 
    00007f97090cb800:  ffffffffffffffff  ffffffffffffffff 
    00007f97090cb810:  0000000400000004  0000000400000004 
    00007f97090cb820:  20636f6c6c616d00  203a64656c696166 
    00007f97090cb830:  0000000000000000  0000000000000000 
    00007f97090cb840: <0000000000000000  0000000000000000 
    00007f97090cb850:  0000000000000000  0000000000000000 
    00007f97090cb860:  0000000000000000  0000000000000000 
    00007f97090cb870:  0000000000000000  0000000000000000 
    00007f97090cb880:  0000000000000000  0000000000000000 
    00007f97090cb890:  0000000000000000  0000000000000000 
    00007f97090cb8a0:  0000000000000000  0000000000000000 
    00007f97090cb8b0:  00007f970becb560  00007f970becebc0 
    00007f97090cb8c0:  fffffffe7fffffff  ffffffffffffffff 
    00007f97090cb8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f97090cb8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f97090cb8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f97090cb900:  ffffffffffffffff  ffffffffffffffff 
    00007f97090cb910:  ffffffffffffffff  ffffffffffffffff 
    00007f97090cb920:  ffffffffffffffff  ffffffffffffffff 
    00007f97090cb930:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [running, locked to thread]:
    	goroutine running on other thread; stack unavailable
    
    rax    0x0
    rbx    0x7f970becb840
    rcx    0x7f970bb1df47
    rdx    0x0
    rdi    0x2
    rsi    0x7f97090cb840
    rbp    0x55f1e3bffe7c
    rsp    0x7f97090cb840
    r8     0x0
    r9     0x7f97090cb840
    r10    0x8
    r11    0x246
    r12    0x55f1e48593f0
    r13    0x0
    r14    0x55f1e3be5d10
    r15    0x0
    rip    0x7f970bb1df47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 7 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    runtime: failed to create new OS thread (have 8 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000308000)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000308000)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc000050000, 0x6)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc00006df01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc000000c00)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [runnable, locked to thread]:
    reflect.Value.Set(0x19ce1a0, 0xc0005a0000, 0x199, 0x19ce1a0, 0xc0005b6240, 0x99)
    	/usr/local/go/src/reflect/value.go:1557 +0x139
    encoding/json.(*decodeState).object(0xc00058bd90, 0x18bc100, 0xc00059d820, 0x195, 0xc00058bdb8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:691 +0x49d
    encoding/json.(*decodeState).value(0xc00058bd90, 0x18bc100, 0xc00059d820, 0x195, 0x18bc100, 0xc00059d820)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc00058bd90, 0x1815520, 0xc00059d680, 0x16, 0xc00058bdb8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc00058bd90, 0x1815520, 0xc00059d680, 0x16, 0xc000554888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc00058bd90, 0x1815520, 0xc00059d680, 0xc00058bdb8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0004ed4a0, 0x906, 0xc960, 0x1815520, 0xc00059d680, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000522000, 0xc0004ed4a0, 0x906, 0xc960, 0x7f6596b14d80, 0xc000522000)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000de8f0, 0x19ce1a0, 0xc000522000, 0x199, 0xc0000de918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000de8f0, 0x19ce1a0, 0xc000522000, 0x199, 0xc00059d440, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000de8f0, 0x18e59a0, 0xc0004a3f08, 0x195, 0xc0000de918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000de8f0, 0x18e59a0, 0xc0004a3f08, 0x195, 0x18e59a0, 0xc0004a3f08)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000de8f0, 0x1815520, 0xc0004a3d40, 0x16, 0xc0000de918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000de8f0, 0x1815520, 0xc0004a3d40, 0x16, 0xc000227548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000de8f0, 0x1815520, 0xc0004a3d40, 0xc0000de918, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0004ea000, 0x9d38, 0xfe00, 0x1815520, 0xc0004a3d40, 0x7f6596d14800, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0004a3b00, 0xc0004ea000, 0x9d38, 0xfe00, 0x7f6596b14d80, 0xc0004a3b00)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000de840, 0x1a89300, 0xc0004a3b00, 0x16, 0xc0000de868, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000de840, 0x1a89300, 0xc0004a3b00, 0x16, 0xc000227c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000de840, 0x1a89300, 0xc0004a3b00, 0xc0000de868, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0004ea000, 0x9d39, 0xfe00, 0x1a89300, 0xc0004a3b00, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc00049f9e0, 0xc000227d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc00049f920, 0xc00049f8f0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 33 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc0004b4400)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc0004b4400)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x0, 0xc000048800, 0x7)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0xc000048800, 0x2a6cc00)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.handoffp(0xc000048800)
    	/usr/local/go/src/runtime/proc.go:2001 +0x52
    runtime.stoplockedm()
    	/usr/local/go/src/runtime/proc.go:2075 +0xf7
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2611 +0x48c
    runtime.goschedImpl(0xc000000180)
    	/usr/local/go/src/runtime/proc.go:2860 +0xda
    runtime.gopreempt_m(0xc000000180)
    	/usr/local/go/src/runtime/proc.go:2888 +0x34
    runtime.newstack()
    	/usr/local/go/src/runtime/stack.go:1047 +0x1bc
    runtime.morestack()
    	/usr/local/go/src/runtime/asm_amd64.s:449 +0x8f
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
