apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7efc15245f47 m=0 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7efc15245f47
    stack: frame={sp:0x7ffc88acffd0, fp:0x0} stack=[0x7ffc882d1650,0x7ffc88ad0690)
    00007ffc88acfed0:  0000000000000005  0000ffff00001fa0 
    00007ffc88acfee0:  00007ffc88ad03e0  000055a130b03930 
    00007ffc88acfef0:  0000000000000000  000055a12e417d10 
    00007ffc88acff00:  0000000000000000  00007efc15826f13 
    00007ffc88acff10:  0000000000000005  0000000000000000 
    00007ffc88acff20:  0000000000000000  00007efc15217ce0 
    00007ffc88acff30:  00007ffc88ad02f0  00007efc1582e75a 
    00007ffc88acff40:  0000000000000000  0000000000000000 
    00007ffc88acff50:  0000000000000000  00007ffc88ad03e0 
    00007ffc88acff60:  2525252525252525  2525252525252525 
    00007ffc88acff70:  00000000000000ff  0000000000000000 
    00007ffc88acff80:  00000000000000ff  0000000000000000 
    00007ffc88acff90:  0000000000000001  0000000000000003 
    00007ffc88acffa0:  0000000000000005  0000000000000000 
    00007ffc88acffb0:  0000000000000004  0000000c00000000 
    00007ffc88acffc0:  000000000000000e  0000000000000000 
    00007ffc88acffd0: <0000000000000000  0000000000000000 
    00007ffc88acffe0:  20636f6c6c616d00  203a64656c696166 
    00007ffc88acfff0:  0000000000000000  0000000000000000 
    00007ffc88ad0000:  0000000000000000  0000000200000000 
    00007ffc88ad0010:  000000000000000b  0000000000000000 
    00007ffc88ad0020:  0000000000000000  0000000000000000 
    00007ffc88ad0030:  0000000000000000  000000000000000a 
    00007ffc88ad0040:  0000000000000000  000055a12ef51380 
    00007ffc88ad0050:  fffffffe7fffffff  ffffffffffffffff 
    00007ffc88ad0060:  ffffffffffffffff  ffffffffffffffff 
    00007ffc88ad0070:  ffffffffffffffff  ffffffffffffffff 
    00007ffc88ad0080:  ffffffffffffffff  ffffffffffffffff 
    00007ffc88ad0090:  ffffffffffffffff  ffffffffffffffff 
    00007ffc88ad00a0:  ffffffffffffffff  ffffffffffffffff 
    00007ffc88ad00b0:  ffffffffffffffff  ffffffffffffffff 
    00007ffc88ad00c0:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7efc15245f47
    stack: frame={sp:0x7ffc88acffd0, fp:0x0} stack=[0x7ffc882d1650,0x7ffc88ad0690)
    00007ffc88acfed0:  0000000000000005  0000ffff00001fa0 
    00007ffc88acfee0:  00007ffc88ad03e0  000055a130b03930 
    00007ffc88acfef0:  0000000000000000  000055a12e417d10 
    00007ffc88acff00:  0000000000000000  00007efc15826f13 
    00007ffc88acff10:  0000000000000005  0000000000000000 
    00007ffc88acff20:  0000000000000000  00007efc15217ce0 
    00007ffc88acff30:  00007ffc88ad02f0  00007efc1582e75a 
    00007ffc88acff40:  0000000000000000  0000000000000000 
    00007ffc88acff50:  0000000000000000  00007ffc88ad03e0 
    00007ffc88acff60:  2525252525252525  2525252525252525 
    00007ffc88acff70:  00000000000000ff  0000000000000000 
    00007ffc88acff80:  00000000000000ff  0000000000000000 
    00007ffc88acff90:  0000000000000001  0000000000000003 
    00007ffc88acffa0:  0000000000000005  0000000000000000 
    00007ffc88acffb0:  0000000000000004  0000000c00000000 
    00007ffc88acffc0:  000000000000000e  0000000000000000 
    00007ffc88acffd0: <0000000000000000  0000000000000000 
    00007ffc88acffe0:  20636f6c6c616d00  203a64656c696166 
    00007ffc88acfff0:  0000000000000000  0000000000000000 
    00007ffc88ad0000:  0000000000000000  0000000200000000 
    00007ffc88ad0010:  000000000000000b  0000000000000000 
    00007ffc88ad0020:  0000000000000000  0000000000000000 
    00007ffc88ad0030:  0000000000000000  000000000000000a 
    00007ffc88ad0040:  0000000000000000  000055a12ef51380 
    00007ffc88ad0050:  fffffffe7fffffff  ffffffffffffffff 
    00007ffc88ad0060:  ffffffffffffffff  ffffffffffffffff 
    00007ffc88ad0070:  ffffffffffffffff  ffffffffffffffff 
    00007ffc88ad0080:  ffffffffffffffff  ffffffffffffffff 
    00007ffc88ad0090:  ffffffffffffffff  ffffffffffffffff 
    00007ffc88ad00a0:  ffffffffffffffff  ffffffffffffffff 
    00007ffc88ad00b0:  ffffffffffffffff  ffffffffffffffff 
    00007ffc88ad00c0:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [runnable, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).operand(0xc00012c500, 0x17, 0x51)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:632 +0xc54
    text/template/parse.(*Tree).command(0xc00012c500, 0x17)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:599 +0xdb
    text/template/parse.(*Tree).pipeline(0xc00012c500, 0x55a12e26e760, 0x7, 0x55a12e2c7491)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:433 +0x5e8
    text/template/parse.(*Tree).action(0xc00012c500, 0xa, 0x4f)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:377 +0x16e
    text/template/parse.(*Tree).textOrAction(0xc00012c500, 0xa, 0x4f)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:345 +0x295
    text/template/parse.(*Tree).itemList(0xc00012c500, 0x55a12e26c9eb, 0x4, 0xc000034120)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:327 +0xfb
    text/template/parse.(*Tree).parseControl(0xc00012c500, 0x55a12ef96000, 0x55a12e26c9eb, 0x4, 0x0, 0x0, 0xc000034120, 0x0, 0x0)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:459 +0x102
    text/template/parse.(*Tree).withControl(0xc00012c500, 0x1f, 0x34)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:509 +0x4e
    text/template/parse.(*Tree).action(0xc00012c500, 0xa, 0x30)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:372 +0x55f
    text/template/parse.(*Tree).textOrAction(0xc00012c500, 0x1f, 0x34)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:345 +0x295
    text/template/parse.(*Tree).parse(0xc00012c500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:291 +0x383
    text/template/parse.(*Tree).Parse(0xc00012c500, 0x55a12e2c7440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001d66f0, 0xc000152340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x55a12e26c9b7, 0x4, 0x55a12e2c7440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000152340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc0000cd780, 0x55a12e2c7440, 0x16c, 0x4, 0xc0001195e8, 0x55a12ef56760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 19 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 20 [chan send]:
    text/template/parse.(*lexer).emit(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:157
    text/template/parse.lexLeftDelim(0xc00015a630, 0x55a12e9e6888)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:307 +0x1e0
    text/template/parse.(*lexer).run(0xc00015a630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:230 +0x39
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7efc155f3840
    rcx    0x7efc15245f47
    rdx    0x0
    rdi    0x2
    rsi    0x7ffc88acffd0
    rbp    0x55a12e431e7c
    rsp    0x7ffc88acffd0
    r8     0x0
    r9     0x7ffc88acffd0
    r10    0x8
    r11    0x246
    r12    0x55a130b03930
    r13    0x0
    r14    0x55a12e417d10
    r15    0x0
    rip    0x7efc15245f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000088400)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000088400)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc00004b000, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc000099f01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc000001080)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [syscall, locked to thread]:
    reflect.mapassign(0x18bc100, 0xc000475830, 0xc00048f030, 0xc0004a4fc0)
    	/usr/local/go/src/runtime/map.go:1319 +0x3f
    reflect.Value.SetMapIndex(0x18bc100, 0xc0004a4860, 0x195, 0x1858200, 0xc00048f030, 0x98, 0x19ce1a0, 0xc0004a4fc0, 0x199)
    	/usr/local/go/src/reflect/value.go:1706 +0x27c
    encoding/json.(*decodeState).object(0xc0004989a0, 0x18bc100, 0xc0004a4860, 0x195, 0xc0004989c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:807 +0x8da
    encoding/json.(*decodeState).value(0xc0004989a0, 0x18bc100, 0xc0004a4860, 0x195, 0x18bc100, 0xc0004a4860)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004989a0, 0x1815520, 0xc0004a46c0, 0x16, 0xc0004989c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004989a0, 0x1815520, 0xc0004a46c0, 0x16, 0xc000422888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0004989a0, 0x1815520, 0xc0004a46c0, 0xc0004989c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003c27b5, 0x9e1, 0xb64b, 0x1815520, 0xc0004a46c0, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0003f2900, 0xc0003c27b5, 0x9e1, 0xb64b, 0x7f9181d90b00, 0xc0003f2900)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc000136a50, 0x19ce1a0, 0xc0003f2900, 0x199, 0xc000136a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc000136a50, 0x19ce1a0, 0xc0003f2900, 0x199, 0xc0004a4480, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000136a50, 0x18e59a0, 0xc000384888, 0x195, 0xc000136a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000136a50, 0x18e59a0, 0xc000384888, 0x195, 0x18e59a0, 0xc000384888)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000136a50, 0x1815520, 0xc0003846c0, 0x16, 0xc000136a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000136a50, 0x1815520, 0xc0003846c0, 0x16, 0xc000173548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc000136a50, 0x1815520, 0xc0003846c0, 0xc000136a78, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003be000, 0x9d38, 0xfe00, 0x1815520, 0xc0003846c0, 0x7f9181df1810, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000384480, 0xc0003be000, 0x9d38, 0xfe00, 0x7f9181d90b00, 0xc000384480)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0001369a0, 0x1a89300, 0xc000384480, 0x16, 0xc0001369c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0001369a0, 0x1a89300, 0xc000384480, 0x16, 0xc000173c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0001369a0, 0x1a89300, 0xc000384480, 0xc0001369c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003be000, 0x9d39, 0xfe00, 0x1a89300, 0xc000384480, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc000371b30, 0xc000173d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc000371a70, 0xc000371a40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 6 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
