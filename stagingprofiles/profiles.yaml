apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f3fef028f47 m=3 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f3fef028f47
    stack: frame={sp:0x7f3fec5d6830, fp:0x0} stack=[0x7f3febdd7288,0x7f3fec5d6e88)
    00007f3fec5d6730:  00007f3fec5d6af0  00007f3fef61175a 
    00007f3fec5d6740:  000000000000000b  0000000000000000 
    00007f3fec5d6750:  00007f3fe9d91700  000055ad5255e148 
    00007f3fec5d6760:  00007f3fec5d6c40  00007f3fdc000c50 
    00007f3fec5d6770:  0000000000000000  000055ad51a3ad10 
    00007f3fec5d6780:  0000000000000000  00007f3fef609f13 
    00007f3fec5d6790:  0000000000000005  0000000000000000 
    00007f3fec5d67a0:  2525252525252525  2525252525252525 
    00007f3fec5d67b0:  00000000000000ff  0000000000000000 
    00007f3fec5d67c0:  00000000000000ff  0000000000000000 
    00007f3fec5d67d0:  00007f3fdc000010  00007f3fdc000010 
    00007f3fec5d67e0:  000000000000000e  000000000000000e 
    00007f3fec5d67f0:  0000000000000000  0000000000000000 
    00007f3fec5d6800:  ffffffffffffffff  ffffffffffffffff 
    00007f3fec5d6810:  0000000400000004  0000000400000004 
    00007f3fec5d6820:  20636f6c6c616d00  203a64656c696166 
    00007f3fec5d6830: <0000000000000000  0000000000000000 
    00007f3fec5d6840:  0000000000000000  0000000000000000 
    00007f3fec5d6850:  0000000000000000  0000000000000000 
    00007f3fec5d6860:  0000000000000000  0000000000000000 
    00007f3fec5d6870:  0000000000000000  0000000000000000 
    00007f3fec5d6880:  0000000000000000  0000000000000000 
    00007f3fec5d6890:  0000000000000000  0000000000000000 
    00007f3fec5d68a0:  0000000000000000  0000000000000000 
    00007f3fec5d68b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f3fec5d68c0:  ffffffffffffffff  ffffffffffffffff 
    00007f3fec5d68d0:  ffffffffffffffff  ffffffffffffffff 
    00007f3fec5d68e0:  ffffffffffffffff  ffffffffffffffff 
    00007f3fec5d68f0:  ffffffffffffffff  ffffffffffffffff 
    00007f3fec5d6900:  ffffffffffffffff  ffffffffffffffff 
    00007f3fec5d6910:  ffffffffffffffff  ffffffffffffffff 
    00007f3fec5d6920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f3fef028f47
    stack: frame={sp:0x7f3fec5d6830, fp:0x0} stack=[0x7f3febdd7288,0x7f3fec5d6e88)
    00007f3fec5d6730:  00007f3fec5d6af0  00007f3fef61175a 
    00007f3fec5d6740:  000000000000000b  0000000000000000 
    00007f3fec5d6750:  00007f3fe9d91700  000055ad5255e148 
    00007f3fec5d6760:  00007f3fec5d6c40  00007f3fdc000c50 
    00007f3fec5d6770:  0000000000000000  000055ad51a3ad10 
    00007f3fec5d6780:  0000000000000000  00007f3fef609f13 
    00007f3fec5d6790:  0000000000000005  0000000000000000 
    00007f3fec5d67a0:  2525252525252525  2525252525252525 
    00007f3fec5d67b0:  00000000000000ff  0000000000000000 
    00007f3fec5d67c0:  00000000000000ff  0000000000000000 
    00007f3fec5d67d0:  00007f3fdc000010  00007f3fdc000010 
    00007f3fec5d67e0:  000000000000000e  000000000000000e 
    00007f3fec5d67f0:  0000000000000000  0000000000000000 
    00007f3fec5d6800:  ffffffffffffffff  ffffffffffffffff 
    00007f3fec5d6810:  0000000400000004  0000000400000004 
    00007f3fec5d6820:  20636f6c6c616d00  203a64656c696166 
    00007f3fec5d6830: <0000000000000000  0000000000000000 
    00007f3fec5d6840:  0000000000000000  0000000000000000 
    00007f3fec5d6850:  0000000000000000  0000000000000000 
    00007f3fec5d6860:  0000000000000000  0000000000000000 
    00007f3fec5d6870:  0000000000000000  0000000000000000 
    00007f3fec5d6880:  0000000000000000  0000000000000000 
    00007f3fec5d6890:  0000000000000000  0000000000000000 
    00007f3fec5d68a0:  0000000000000000  0000000000000000 
    00007f3fec5d68b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f3fec5d68c0:  ffffffffffffffff  ffffffffffffffff 
    00007f3fec5d68d0:  ffffffffffffffff  ffffffffffffffff 
    00007f3fec5d68e0:  ffffffffffffffff  ffffffffffffffff 
    00007f3fec5d68f0:  ffffffffffffffff  ffffffffffffffff 
    00007f3fec5d6900:  ffffffffffffffff  ffffffffffffffff 
    00007f3fec5d6910:  ffffffffffffffff  ffffffffffffffff 
    00007f3fec5d6920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [runnable]:
    github.com/snapcore/snapd/client.(*Client).do(0xc00010ea80, 0x55ad5188eee7, 0x3, 0x55ad51898d78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x55ad51ee8f40, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:394 +0x2f9
    github.com/snapcore/snapd/client.(*Client).doSyncWithOpts(0xc00010ea80, 0x55ad5188eee7, 0x3, 0x55ad51898d78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x55ad51e849a0, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:492 +0xf6
    github.com/snapcore/snapd/client.(*Client).SysInfo(0xc00010ea80, 0x46, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/client/client.go:727 +0xd4
    main.maybeWaitForSecurityProfileRegeneration(0xc00010ea80, 0xc000306280, 0xd)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:200 +0x1aa
    main.(*cmdRun).Execute(0xc00023feb8, 0xc000032190, 0x2, 0x3, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:240 +0x172
    main.main()
    	/build/snapd/parts/snapd-deb/build/cmd/snap/main.go:482 +0x581
    
    goroutine 6 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    rax    0x0
    rbx    0x7f3fef3d6840
    rcx    0x7f3fef028f47
    rdx    0x0
    rdi    0x2
    rsi    0x7f3fec5d6830
    rbp    0x55ad51a54e7c
    rsp    0x7f3fec5d6830
    r8     0x0
    r9     0x7f3fec5d6830
    r10    0x8
    r11    0x246
    r12    0x7f3fdc000c50
    r13    0x0
    r14    0x55ad51a3ad10
    r15    0x0
    rip    0x7f3fef028f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000100000)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000100000)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc00004d800, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc000099f01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.mstart1()
    	/usr/local/go/src/runtime/proc.go:1179 +0x93
    runtime.mstart()
    	/usr/local/go/src/runtime/proc.go:1137 +0x6e
    
    goroutine 1 [chan receive, locked to thread]:
    runtime.gopark(0x1bb7a80, 0xc0000420c8, 0x170e, 0x2)
    	/usr/local/go/src/runtime/proc.go:306 +0xe5
    runtime.chanrecv(0xc000042070, 0x0, 0xc000000101, 0x410101)
    	/usr/local/go/src/runtime/chan.go:577 +0x36f
    runtime.chanrecv1(0xc000042070, 0x0)
    	/usr/local/go/src/runtime/chan.go:439 +0x2b
    runtime.gcenable()
    	/usr/local/go/src/runtime/mgc.go:220 +0xac
    runtime.main()
    	/usr/local/go/src/runtime/proc.go:167 +0x11e
    runtime.goexit()
    	/usr/local/go/src/runtime/asm_amd64.s:1374 +0x1
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7fb7320a7f47 m=5 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7fb7320a7f47
    stack: frame={sp:0x7fb72e653830, fp:0x0} stack=[0x7fb72de54288,0x7fb72e653e88)
    00007fb72e653730:  00007fb72e653af0  00007fb73269075a 
    00007fb72e653740:  000000000000000b  0000000000000000 
    00007fb72e653750:  00007fb72d652700  00005628a5e52148 
    00007fb72e653760:  00007fb72e653c40  00005628a6a0d3f0 
    00007fb72e653770:  0000000000000000  00005628a532ed10 
    00007fb72e653780:  0000000000000000  00007fb732688f13 
    00007fb72e653790:  0000000000000005  0000000000000000 
    00007fb72e6537a0:  2525252525252525  2525252525252525 
    00007fb72e6537b0:  00000000000000ff  0000000000000000 
    00007fb72e6537c0:  00000000000000ff  0000000000000000 
    00007fb72e6537d0:  00007fb718000010  00007fb718000010 
    00007fb72e6537e0:  000000000000000e  000000000000000e 
    00007fb72e6537f0:  0000000000000000  0000000000000000 
    00007fb72e653800:  ffffffffffffffff  ffffffffffffffff 
    00007fb72e653810:  0000000400000004  0000000400000004 
    00007fb72e653820:  20636f6c6c616d00  203a64656c696166 
    00007fb72e653830: <0000000000000000  0000000000000000 
    00007fb72e653840:  0000000000000000  0000000000000000 
    00007fb72e653850:  0000000000000000  0000000000000000 
    00007fb72e653860:  0000000000000000  0000000000000000 
    00007fb72e653870:  0000000000000000  0000000000000000 
    00007fb72e653880:  0000000000000000  0000000000000000 
    00007fb72e653890:  0000000000000000  0000000000000000 
    00007fb72e6538a0:  0000000000000000  0000000000000000 
    00007fb72e6538b0:  fffffffe7fffffff  ffffffffffffffff 
    00007fb72e6538c0:  ffffffffffffffff  ffffffffffffffff 
    00007fb72e6538d0:  ffffffffffffffff  ffffffffffffffff 
    00007fb72e6538e0:  ffffffffffffffff  ffffffffffffffff 
    00007fb72e6538f0:  ffffffffffffffff  ffffffffffffffff 
    00007fb72e653900:  ffffffffffffffff  ffffffffffffffff 
    00007fb72e653910:  ffffffffffffffff  ffffffffffffffff 
    00007fb72e653920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7fb7320a7f47
    stack: frame={sp:0x7fb72e653830, fp:0x0} stack=[0x7fb72de54288,0x7fb72e653e88)
    00007fb72e653730:  00007fb72e653af0  00007fb73269075a 
    00007fb72e653740:  000000000000000b  0000000000000000 
    00007fb72e653750:  00007fb72d652700  00005628a5e52148 
    00007fb72e653760:  00007fb72e653c40  00005628a6a0d3f0 
    00007fb72e653770:  0000000000000000  00005628a532ed10 
    00007fb72e653780:  0000000000000000  00007fb732688f13 
    00007fb72e653790:  0000000000000005  0000000000000000 
    00007fb72e6537a0:  2525252525252525  2525252525252525 
    00007fb72e6537b0:  00000000000000ff  0000000000000000 
    00007fb72e6537c0:  00000000000000ff  0000000000000000 
    00007fb72e6537d0:  00007fb718000010  00007fb718000010 
    00007fb72e6537e0:  000000000000000e  000000000000000e 
    00007fb72e6537f0:  0000000000000000  0000000000000000 
    00007fb72e653800:  ffffffffffffffff  ffffffffffffffff 
    00007fb72e653810:  0000000400000004  0000000400000004 
    00007fb72e653820:  20636f6c6c616d00  203a64656c696166 
    00007fb72e653830: <0000000000000000  0000000000000000 
    00007fb72e653840:  0000000000000000  0000000000000000 
    00007fb72e653850:  0000000000000000  0000000000000000 
    00007fb72e653860:  0000000000000000  0000000000000000 
    00007fb72e653870:  0000000000000000  0000000000000000 
    00007fb72e653880:  0000000000000000  0000000000000000 
    00007fb72e653890:  0000000000000000  0000000000000000 
    00007fb72e6538a0:  0000000000000000  0000000000000000 
    00007fb72e6538b0:  fffffffe7fffffff  ffffffffffffffff 
    00007fb72e6538c0:  ffffffffffffffff  ffffffffffffffff 
    00007fb72e6538d0:  ffffffffffffffff  ffffffffffffffff 
    00007fb72e6538e0:  ffffffffffffffff  ffffffffffffffff 
    00007fb72e6538f0:  ffffffffffffffff  ffffffffffffffff 
    00007fb72e653900:  ffffffffffffffff  ffffffffffffffff 
    00007fb72e653910:  ffffffffffffffff  ffffffffffffffff 
    00007fb72e653920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).parse(0xc00011c500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:277 +0xbc6
    text/template/parse.(*Tree).Parse(0xc00011c500, 0x5628a51de440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001c4720, 0xc000142350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x5628a51839b7, 0x4, 0x5628a51de440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000142350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc00003d840, 0x5628a51de440, 0x16c, 0x4, 0xc0001095e8, 0x5628a5e6d760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 6 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 7 [runnable]:
    text/template/parse.(*lexer).run(0xc00014a630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:228
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7fb732455840
    rcx    0x7fb7320a7f47
    rdx    0x0
    rdi    0x2
    rsi    0x7fb72e653830
    rbp    0x5628a5348e7c
    rsp    0x7fb72e653830
    r8     0x0
    r9     0x7fb72e653830
    r10    0x8
    r11    0x246
    r12    0x5628a6a0d3f0
    r13    0x0
    r14    0x5628a532ed10
    r15    0x0
    rip    0x7fb7320a7f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
