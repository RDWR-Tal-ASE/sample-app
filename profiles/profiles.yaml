apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
    Error: bad file '-': yaml: line 11: mapping values are not allowed in this context
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000104000)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000104000)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc000046000, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc000073f01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc0002ffb00)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [syscall, locked to thread]:
    reflect.unsafe_New(0x19ce1a0, 0x93a)
    	/usr/local/go/src/runtime/malloc.go:1200 +0x38
    reflect.New(0x1d4e220, 0x19ce1a0, 0x19ce1a0, 0xc0003ec802, 0x3)
    	/usr/local/go/src/reflect/value.go:2385 +0x45
    encoding/json.(*decodeState).object(0xc0004c68f0, 0x18bc100, 0xc0004cbef0, 0x195, 0xc0004c6918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:689 +0x13a5
    encoding/json.(*decodeState).value(0xc0004c68f0, 0x18bc100, 0xc0004cbef0, 0x195, 0x18bc100, 0xc0004cbef0)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004c68f0, 0x1815520, 0xc0004cbd40, 0x16, 0xc0004c6918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004c68f0, 0x1815520, 0xc0004cbd40, 0x16, 0xc00044e888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0004c68f0, 0x1815520, 0xc0004cbd40, 0xc0004c6918, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003ec7b5, 0x9e1, 0xb64b, 0x1815520, 0xc0004cbd40, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00041c000, 0xc0003ec7b5, 0x9e1, 0xb64b, 0x7f7e6067a680, 0xc00041c000)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e49a0, 0x19ce1a0, 0xc00041c000, 0x199, 0xc0000e49c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e49a0, 0x19ce1a0, 0xc00041c000, 0x199, 0xc0004cbb00, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e49a0, 0x18e59a0, 0xc0003a1f08, 0x195, 0xc0000e49c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e49a0, 0x18e59a0, 0xc0003a1f08, 0x195, 0x18e59a0, 0xc0003a1f08)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e49a0, 0x1815520, 0xc0003a1d40, 0x16, 0xc0000e49c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e49a0, 0x1815520, 0xc0003a1d40, 0x16, 0xc0001a3548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e49a0, 0x1815520, 0xc0003a1d40, 0xc0000e49c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003e8000, 0x9d38, 0xfe00, 0x1815520, 0xc0003a1d40, 0x7f7e60670430, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0003a1b00, 0xc0003e8000, 0x9d38, 0xfe00, 0x7f7e6067a680, 0xc0003a1b00)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e48f0, 0x1a89300, 0xc0003a1b00, 0x16, 0xc0000e4918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e48f0, 0x1a89300, 0xc0003a1b00, 0x16, 0xc0001a3c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e48f0, 0x1a89300, 0xc0003a1b00, 0xc0000e4918, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003e8000, 0x9d39, 0xfe00, 0x1a89300, 0xc0003a1b00, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc00039bb30, 0xc0001a3d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc00039ba70, 0xc00039ba40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 18 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7fe438fccf47 m=3 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7fe438fccf47
    stack: frame={sp:0x7fe42e57a830, fp:0x0} stack=[0x7fe42dd7b288,0x7fe42e57ae88)
    00007fe42e57a730:  00007fe42e57aaf0  00007fe4395b575a 
    00007fe42e57a740:  000000000000000b  0000000000000000 
    00007fe42e57a750:  00007fe42fbd3700  000055df320da148 
    00007fe42e57a760:  00007fe42e57ac40  00007fe428000c50 
    00007fe42e57a770:  0000000000000000  000055df315b6d10 
    00007fe42e57a780:  0000000000000000  00007fe4395adf13 
    00007fe42e57a790:  0000000000000005  0000000000000000 
    00007fe42e57a7a0:  2525252525252525  2525252525252525 
    00007fe42e57a7b0:  00000000000000ff  0000000000000000 
    00007fe42e57a7c0:  00000000000000ff  0000000000000000 
    00007fe42e57a7d0:  0000000000000001  0000000000000012 
    00007fe42e57a7e0:  000000000000000e  000000000000000e 
    00007fe42e57a7f0:  0000000000000000  0000000000000000 
    00007fe42e57a800:  ffffffffffffffff  ffffffffffffffff 
    00007fe42e57a810:  0000000400000004  0000000400000004 
    00007fe42e57a820:  20636f6c6c616d00  203a64656c696166 
    00007fe42e57a830: <0000000000000000  0000000000000000 
    00007fe42e57a840:  0000000000000000  0000000000000000 
    00007fe42e57a850:  0000000000000000  0000000000000000 
    00007fe42e57a860:  0000000000000000  0000000000000000 
    00007fe42e57a870:  0000000000000000  0000000000000000 
    00007fe42e57a880:  0000000000000000  0000000000000000 
    00007fe42e57a890:  0000000000000000  0000000000000000 
    00007fe42e57a8a0:  0000000000000000  0000000000000000 
    00007fe42e57a8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007fe42e57a8c0:  ffffffffffffffff  ffffffffffffffff 
    00007fe42e57a8d0:  ffffffffffffffff  ffffffffffffffff 
    00007fe42e57a8e0:  ffffffffffffffff  ffffffffffffffff 
    00007fe42e57a8f0:  ffffffffffffffff  ffffffffffffffff 
    00007fe42e57a900:  ffffffffffffffff  ffffffffffffffff 
    00007fe42e57a910:  ffffffffffffffff  ffffffffffffffff 
    00007fe42e57a920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7fe438fccf47
    stack: frame={sp:0x7fe42e57a830, fp:0x0} stack=[0x7fe42dd7b288,0x7fe42e57ae88)
    00007fe42e57a730:  00007fe42e57aaf0  00007fe4395b575a 
    00007fe42e57a740:  000000000000000b  0000000000000000 
    00007fe42e57a750:  00007fe42fbd3700  000055df320da148 
    00007fe42e57a760:  00007fe42e57ac40  00007fe428000c50 
    00007fe42e57a770:  0000000000000000  000055df315b6d10 
    00007fe42e57a780:  0000000000000000  00007fe4395adf13 
    00007fe42e57a790:  0000000000000005  0000000000000000 
    00007fe42e57a7a0:  2525252525252525  2525252525252525 
    00007fe42e57a7b0:  00000000000000ff  0000000000000000 
    00007fe42e57a7c0:  00000000000000ff  0000000000000000 
    00007fe42e57a7d0:  0000000000000001  0000000000000012 
    00007fe42e57a7e0:  000000000000000e  000000000000000e 
    00007fe42e57a7f0:  0000000000000000  0000000000000000 
    00007fe42e57a800:  ffffffffffffffff  ffffffffffffffff 
    00007fe42e57a810:  0000000400000004  0000000400000004 
    00007fe42e57a820:  20636f6c6c616d00  203a64656c696166 
    00007fe42e57a830: <0000000000000000  0000000000000000 
    00007fe42e57a840:  0000000000000000  0000000000000000 
    00007fe42e57a850:  0000000000000000  0000000000000000 
    00007fe42e57a860:  0000000000000000  0000000000000000 
    00007fe42e57a870:  0000000000000000  0000000000000000 
    00007fe42e57a880:  0000000000000000  0000000000000000 
    00007fe42e57a890:  0000000000000000  0000000000000000 
    00007fe42e57a8a0:  0000000000000000  0000000000000000 
    00007fe42e57a8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007fe42e57a8c0:  ffffffffffffffff  ffffffffffffffff 
    00007fe42e57a8d0:  ffffffffffffffff  ffffffffffffffff 
    00007fe42e57a8e0:  ffffffffffffffff  ffffffffffffffff 
    00007fe42e57a8f0:  ffffffffffffffff  ffffffffffffffff 
    00007fe42e57a900:  ffffffffffffffff  ffffffffffffffff 
    00007fe42e57a910:  ffffffffffffffff  ffffffffffffffff 
    00007fe42e57a920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive]:
    net/http.(*persistConn).readLoop.func4(0x55df31b9c820, 0xc0000b6050, 0x400, 0x400)
    	/usr/lib/go-1.13/src/net/http/transport.go:2004 +0xe5
    net/http.(*bodyEOFSignal).condfn(...)
    	/usr/lib/go-1.13/src/net/http/transport.go:2613
    net/http.(*bodyEOFSignal).Read(0xc0002a1c80, 0xc0003c8e00, 0x400, 0x400, 0x348, 0x55df31b9c820, 0xc0000b6050)
    	/usr/lib/go-1.13/src/net/http/transport.go:2589 +0x1cd
    encoding/json.(*Decoder).refill(0xc0003751e0, 0x6d, 0x0)
    	/usr/lib/go-1.13/src/encoding/json/stream.go:161 +0xed
    encoding/json.(*Decoder).readValue(0xc0003751e0, 0x0, 0x0, 0x55df31b46dc0)
    	/usr/lib/go-1.13/src/encoding/json/stream.go:136 +0x1de
    encoding/json.(*Decoder).Decode(0xc0003751e0, 0x55df31a64f40, 0xc0003b9500, 0xc00025f808, 0x0)
    	/usr/lib/go-1.13/src/encoding/json/stream.go:63 +0x7b
    github.com/snapcore/snapd/client.decodeInto(0x55df31b9e5e0, 0xc0002a1c80, 0x55df31a64f40, 0xc0003b9500, 0xc0002a1c80, 0x55df31414d78)
    	/build/snapd/parts/snapd-deb/build/client/client.go:423 +0x92
    github.com/snapcore/snapd/client.(*Client).do(0xc0003761c0, 0x55df3140aee7, 0x3, 0x55df31414d78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x55df31a64f40, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:408 +0x410
    github.com/snapcore/snapd/client.(*Client).doSyncWithOpts(0xc0003761c0, 0x55df3140aee7, 0x3, 0x55df31414d78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x55df31a009a0, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:492 +0xf6
    github.com/snapcore/snapd/client.(*Client).SysInfo(0xc0003761c0, 0x46, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/client/client.go:727 +0xd4
    main.maybeWaitForSecurityProfileRegeneration(0xc0003761c0, 0xc0003b57c0, 0xd)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:200 +0x1aa
    main.(*cmdRun).Execute(0xc00025feb8, 0xc0000b8160, 0x2, 0x3, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:240 +0x172
    main.main()
    	/build/snapd/parts/snapd-deb/build/cmd/snap/main.go:482 +0x581
    
    goroutine 19 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 36 [runnable]:
    net/http.(*persistConn).readLoop(0xc000406360)
    	/usr/lib/go-1.13/src/net/http/transport.go:2032 +0x99b
    created by net/http.(*Transport).dialConn
    	/usr/lib/go-1.13/src/net/http/transport.go:1580 +0xb0f
    
    goroutine 37 [select]:
    net/http.(*persistConn).writeLoop(0xc000406360)
    	/usr/lib/go-1.13/src/net/http/transport.go:2210 +0x125
    created by net/http.(*Transport).dialConn
    	/usr/lib/go-1.13/src/net/http/transport.go:1581 +0xb34
    
    rax    0x0
    rbx    0x7fe43937a840
    rcx    0x7fe438fccf47
    rdx    0x0
    rdi    0x2
    rsi    0x7fe42e57a830
    rbp    0x55df315d0e7c
    rsp    0x7fe42e57a830
    r8     0x0
    r9     0x7fe42e57a830
    r10    0x8
    r11    0x246
    r12    0x7fe428000c50
    r13    0x0
    r14    0x55df315b6d10
    r15    0x0
    rip    0x7fe438fccf47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
