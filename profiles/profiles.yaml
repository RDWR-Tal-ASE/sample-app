apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f5a5a249f47 m=7 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f5a5a249f47
    stack: frame={sp:0x7f5a557f3830, fp:0x0} stack=[0x7f5a54ff4288,0x7f5a557f3e88)
    00007f5a557f3730:  00007f5a557f3af0  00007f5a5a83275a 
    00007f5a557f3740:  000000000000000b  0000000000000000 
    00007f5a557f3750:  00007f5a4fded700  000055a36a95d148 
    00007f5a557f3760:  00007f5a557f3c40  000055a36b6b3540 
    00007f5a557f3770:  0000000000000000  000055a369e39d10 
    00007f5a557f3780:  0000000000000000  00007f5a5a82af13 
    00007f5a557f3790:  0000000000000005  0000000000000000 
    00007f5a557f37a0:  2525252525252525  2525252525252525 
    00007f5a557f37b0:  00000000000000ff  0000000000000000 
    00007f5a557f37c0:  00000000000000ff  0000000000000000 
    00007f5a557f37d0:  0000000000000006  000000000000000a 
    00007f5a557f37e0:  000000000000000e  000000000000000e 
    00007f5a557f37f0:  0000000000000000  0000000000000000 
    00007f5a557f3800:  ffffffffffffffff  ffffffffffffffff 
    00007f5a557f3810:  0000000400000004  0000000400000004 
    00007f5a557f3820:  20636f6c6c616d00  203a64656c696166 
    00007f5a557f3830: <0000000000000000  0000000000000000 
    00007f5a557f3840:  0000000000000000  0000000000000000 
    00007f5a557f3850:  0000000000000000  0000000000000000 
    00007f5a557f3860:  0000000000000000  0000000000000000 
    00007f5a557f3870:  0000000000000000  0000000000000000 
    00007f5a557f3880:  0000000000000000  0000000000000000 
    00007f5a557f3890:  0000000000000000  0000000000000000 
    00007f5a557f38a0:  0000000000000000  0000000000000000 
    00007f5a557f38b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f5a557f38c0:  ffffffffffffffff  ffffffffffffffff 
    00007f5a557f38d0:  ffffffffffffffff  ffffffffffffffff 
    00007f5a557f38e0:  ffffffffffffffff  ffffffffffffffff 
    00007f5a557f38f0:  ffffffffffffffff  ffffffffffffffff 
    00007f5a557f3900:  ffffffffffffffff  ffffffffffffffff 
    00007f5a557f3910:  ffffffffffffffff  ffffffffffffffff 
    00007f5a557f3920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f5a5a249f47
    stack: frame={sp:0x7f5a557f3830, fp:0x0} stack=[0x7f5a54ff4288,0x7f5a557f3e88)
    00007f5a557f3730:  00007f5a557f3af0  00007f5a5a83275a 
    00007f5a557f3740:  000000000000000b  0000000000000000 
    00007f5a557f3750:  00007f5a4fded700  000055a36a95d148 
    00007f5a557f3760:  00007f5a557f3c40  000055a36b6b3540 
    00007f5a557f3770:  0000000000000000  000055a369e39d10 
    00007f5a557f3780:  0000000000000000  00007f5a5a82af13 
    00007f5a557f3790:  0000000000000005  0000000000000000 
    00007f5a557f37a0:  2525252525252525  2525252525252525 
    00007f5a557f37b0:  00000000000000ff  0000000000000000 
    00007f5a557f37c0:  00000000000000ff  0000000000000000 
    00007f5a557f37d0:  0000000000000006  000000000000000a 
    00007f5a557f37e0:  000000000000000e  000000000000000e 
    00007f5a557f37f0:  0000000000000000  0000000000000000 
    00007f5a557f3800:  ffffffffffffffff  ffffffffffffffff 
    00007f5a557f3810:  0000000400000004  0000000400000004 
    00007f5a557f3820:  20636f6c6c616d00  203a64656c696166 
    00007f5a557f3830: <0000000000000000  0000000000000000 
    00007f5a557f3840:  0000000000000000  0000000000000000 
    00007f5a557f3850:  0000000000000000  0000000000000000 
    00007f5a557f3860:  0000000000000000  0000000000000000 
    00007f5a557f3870:  0000000000000000  0000000000000000 
    00007f5a557f3880:  0000000000000000  0000000000000000 
    00007f5a557f3890:  0000000000000000  0000000000000000 
    00007f5a557f38a0:  0000000000000000  0000000000000000 
    00007f5a557f38b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f5a557f38c0:  ffffffffffffffff  ffffffffffffffff 
    00007f5a557f38d0:  ffffffffffffffff  ffffffffffffffff 
    00007f5a557f38e0:  ffffffffffffffff  ffffffffffffffff 
    00007f5a557f38f0:  ffffffffffffffff  ffffffffffffffff 
    00007f5a557f3900:  ffffffffffffffff  ffffffffffffffff 
    00007f5a557f3910:  ffffffffffffffff  ffffffffffffffff 
    00007f5a557f3920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [runnable]:
    github.com/snapcore/snapd/client.(*Client).do(0xc0003721c0, 0x55a369c8dee7, 0x3, 0x55a369c97d78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x55a36a2e7f40, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:394 +0x2f9
    github.com/snapcore/snapd/client.(*Client).doSyncWithOpts(0xc0003721c0, 0x55a369c8dee7, 0x3, 0x55a369c97d78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x55a36a2839a0, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:492 +0xf6
    github.com/snapcore/snapd/client.(*Client).SysInfo(0xc0003721c0, 0x46, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/client/client.go:727 +0xd4
    main.maybeWaitForSecurityProfileRegeneration(0xc0003721c0, 0xc0003af7c0, 0xd)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:200 +0x1aa
    main.(*cmdRun).Execute(0xc00023feb8, 0xc000032190, 0x2, 0x3, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:240 +0x172
    main.main()
    	/build/snapd/parts/snapd-deb/build/cmd/snap/main.go:482 +0x581
    
    goroutine 6 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    rax    0x0
    rbx    0x7f5a5a5f7840
    rcx    0x7f5a5a249f47
    rdx    0x0
    rdi    0x2
    rsi    0x7f5a557f3830
    rbp    0x55a369e53e7c
    rsp    0x7f5a557f3830
    r8     0x0
    r9     0x7f5a557f3830
    r10    0x8
    r11    0x246
    r12    0x55a36b6b3540
    r13    0x0
    r14    0x55a369e39d10
    r15    0x0
    rip    0x7f5a5a249f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 7 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000203c00)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000203c00)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc000050000, 0x6)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc000073f01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc00018a000)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [runnable, locked to thread]:
    net/url.parse(0xc0004cf9e0, 0x0, 0x100, 0xc0004cf9e0, 0x0, 0xc0004cf9e1)
    	/usr/local/go/src/net/url/url.go:519 +0x85
    net/url.Parse(0xc0004cf9e0, 0x12, 0xc0004cf9e0, 0x12, 0x0)
    	/usr/local/go/src/net/url/url.go:478 +0x85
    k8s.io/kubernetes/vendor/github.com/go-openapi/jsonreference.(*Ref).parse(0xc0004b5bc8, 0xc0004cf9c0, 0x12, 0x4, 0xc00051d948)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/jsonreference/reference.go:117 +0x7d
    k8s.io/kubernetes/vendor/github.com/go-openapi/jsonreference.New(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/jsonreference/reference.go:45
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Ref).fromMap(0xc0004b5d48, 0xc000509200, 0xb6ff, 0x1811e60)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/ref.go:182 +0xe8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00051e900, 0xc000454701, 0x32, 0xb6ff, 0x7fc4f848bc80, 0xc00051e900)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:569 +0x1bc
    encoding/json.(*decodeState).object(0xc00051a210, 0x19ce1a0, 0xc00051e900, 0x199, 0xc00051a238, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc00051a210, 0x19ce1a0, 0xc00051e900, 0x199, 0xc000531200, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc00051a210, 0x18bc100, 0xc00051e1a0, 0x195, 0xc00051a238, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc00051a210, 0x18bc100, 0xc00051e1a0, 0x195, 0x18bc100, 0xc00051e1a0)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc00051a210, 0x1815520, 0xc00051e000, 0x16, 0xc00051a238, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc00051a210, 0x1815520, 0xc00051e000, 0x16, 0xc0004b6888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc00051a210, 0x1815520, 0xc00051e000, 0xc00051a238, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000453dc7, 0x9ca, 0xc039, 0x1815520, 0xc00051e000, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000486900, 0xc000453dc7, 0x9ca, 0xc039, 0x7fc4f848bc80, 0xc000486900)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc00014a8f0, 0x19ce1a0, 0xc000486900, 0x199, 0xc00014a918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc00014a8f0, 0x19ce1a0, 0xc000486900, 0x199, 0xc000515d40, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc00014a8f0, 0x18e59a0, 0xc00041a888, 0x195, 0xc00014a918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc00014a8f0, 0x18e59a0, 0xc00041a888, 0x195, 0x18e59a0, 0xc00041a888)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc00014a8f0, 0x1815520, 0xc00041a6c0, 0x16, 0xc00014a918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc00014a8f0, 0x1815520, 0xc00041a6c0, 0x16, 0xc00020b548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc00014a8f0, 0x1815520, 0xc00041a6c0, 0xc00014a918, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000450000, 0x9d38, 0xfe00, 0x1815520, 0xc00041a6c0, 0x7fc4f868dc80, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00041a480, 0xc000450000, 0x9d38, 0xfe00, 0x7fc4f848bc80, 0xc00041a480)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc00014a840, 0x1a89300, 0xc00041a480, 0x16, 0xc00014a868, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc00014a840, 0x1a89300, 0xc00041a480, 0x16, 0xc00020bc18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc00014a840, 0x1a89300, 0xc00041a480, 0xc00014a868, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000450000, 0x9d39, 0xfe00, 0x1a89300, 0xc00041a480, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc000403b30, 0xc00020bd68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc000403a70, 0xc000403a40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 18 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f567921ef47 m=7 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f567921ef47
    stack: frame={sp:0x7f565fffe830, fp:0x0} stack=[0x7f565f7ff288,0x7f565fffee88)
    00007f565fffe730:  00007f565fffeaf0  00007f567980775a 
    00007f565fffe740:  000000000000000b  0000000000000000 
    00007f565fffe750:  00007f565edeb700  0000556d6fce1148 
    00007f565fffe760:  00007f565fffec40  0000556d71919540 
    00007f565fffe770:  0000000000000000  0000556d6f1bdd10 
    00007f565fffe780:  0000000000000000  00007f56797fff13 
    00007f565fffe790:  0000000000000005  0000000000000000 
    00007f565fffe7a0:  2525252525252525  2525252525252525 
    00007f565fffe7b0:  00000000000000ff  0000000000000000 
    00007f565fffe7c0:  00000000000000ff  0000000000000000 
    00007f565fffe7d0:  00ffff0000000000  00000000ffff0000 
    00007f565fffe7e0:  000000000000000e  000000000000000e 
    00007f565fffe7f0:  0000000000000000  0000000000000000 
    00007f565fffe800:  ffffffffffffffff  ffffffffffffffff 
    00007f565fffe810:  0000000400000004  0000000400000004 
    00007f565fffe820:  20636f6c6c616d00  203a64656c696166 
    00007f565fffe830: <0000000000000000  0000000000000000 
    00007f565fffe840:  0000000000000000  0000000000000000 
    00007f565fffe850:  0000000000000000  0000000000000000 
    00007f565fffe860:  0000000000000000  0000000000000000 
    00007f565fffe870:  0000000000000000  0000000000000000 
    00007f565fffe880:  0000000000000000  0000000000000000 
    00007f565fffe890:  0000000000000000  0000000000000000 
    00007f565fffe8a0:  0000000000000000  0000000000000000 
    00007f565fffe8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f565fffe8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f565fffe8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f565fffe8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f565fffe8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f565fffe900:  ffffffffffffffff  ffffffffffffffff 
    00007f565fffe910:  ffffffffffffffff  ffffffffffffffff 
    00007f565fffe920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f567921ef47
    stack: frame={sp:0x7f565fffe830, fp:0x0} stack=[0x7f565f7ff288,0x7f565fffee88)
    00007f565fffe730:  00007f565fffeaf0  00007f567980775a 
    00007f565fffe740:  000000000000000b  0000000000000000 
    00007f565fffe750:  00007f565edeb700  0000556d6fce1148 
    00007f565fffe760:  00007f565fffec40  0000556d71919540 
    00007f565fffe770:  0000000000000000  0000556d6f1bdd10 
    00007f565fffe780:  0000000000000000  00007f56797fff13 
    00007f565fffe790:  0000000000000005  0000000000000000 
    00007f565fffe7a0:  2525252525252525  2525252525252525 
    00007f565fffe7b0:  00000000000000ff  0000000000000000 
    00007f565fffe7c0:  00000000000000ff  0000000000000000 
    00007f565fffe7d0:  00ffff0000000000  00000000ffff0000 
    00007f565fffe7e0:  000000000000000e  000000000000000e 
    00007f565fffe7f0:  0000000000000000  0000000000000000 
    00007f565fffe800:  ffffffffffffffff  ffffffffffffffff 
    00007f565fffe810:  0000000400000004  0000000400000004 
    00007f565fffe820:  20636f6c6c616d00  203a64656c696166 
    00007f565fffe830: <0000000000000000  0000000000000000 
    00007f565fffe840:  0000000000000000  0000000000000000 
    00007f565fffe850:  0000000000000000  0000000000000000 
    00007f565fffe860:  0000000000000000  0000000000000000 
    00007f565fffe870:  0000000000000000  0000000000000000 
    00007f565fffe880:  0000000000000000  0000000000000000 
    00007f565fffe890:  0000000000000000  0000000000000000 
    00007f565fffe8a0:  0000000000000000  0000000000000000 
    00007f565fffe8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f565fffe8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f565fffe8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f565fffe8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f565fffe8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f565fffe900:  ffffffffffffffff  ffffffffffffffff 
    00007f565fffe910:  ffffffffffffffff  ffffffffffffffff 
    00007f565fffe920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [runnable]:
    github.com/snapcore/snapd/client.(*Client).do(0xc00010ea80, 0x556d6f011ee7, 0x3, 0x556d6f01bd78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x556d6f66bf40, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:394 +0x2f9
    github.com/snapcore/snapd/client.(*Client).doSyncWithOpts(0xc00010ea80, 0x556d6f011ee7, 0x3, 0x556d6f01bd78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x556d6f6079a0, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:492 +0xf6
    github.com/snapcore/snapd/client.(*Client).SysInfo(0xc00010ea80, 0x46, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/client/client.go:727 +0xd4
    main.maybeWaitForSecurityProfileRegeneration(0xc00010ea80, 0xc00033c280, 0xd)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:200 +0x1aa
    main.(*cmdRun).Execute(0xc00023feb8, 0xc000032190, 0x2, 0x3, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:240 +0x172
    main.main()
    	/build/snapd/parts/snapd-deb/build/cmd/snap/main.go:482 +0x581
    
    goroutine 6 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    rax    0x0
    rbx    0x7f56795cc840
    rcx    0x7f567921ef47
    rdx    0x0
    rdi    0x2
    rsi    0x7f565fffe830
    rbp    0x556d6f1d7e7c
    rsp    0x7f565fffe830
    r8     0x0
    r9     0x7f565fffe830
    r10    0x8
    r11    0x246
    r12    0x556d71919540
    r13    0x0
    r14    0x556d6f1bdd10
    r15    0x0
    rip    0x7f567921ef47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
