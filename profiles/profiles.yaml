apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f956965cf47 m=3 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f956965cf47
    stack: frame={sp:0x7f9566c0a830, fp:0x0} stack=[0x7f956640b288,0x7f9566c0ae88)
    00007f9566c0a730:  00007f9566c0aaf0  00007f9569c4575a 
    00007f9566c0a740:  000000000000000b  0000000000000000 
    00007f9566c0a750:  00007f95652a8700  00005608636dd148 
    00007f9566c0a760:  00007f9566c0ac40  00007f9558000c50 
    00007f9566c0a770:  0000000000000000  0000560862bb9d10 
    00007f9566c0a780:  0000000000000000  00007f9569c3df13 
    00007f9566c0a790:  0000000000000005  0000000000000000 
    00007f9566c0a7a0:  2525252525252525  2525252525252525 
    00007f9566c0a7b0:  00000000000000ff  0000000000000000 
    00007f9566c0a7c0:  00000000000000ff  0000000000000000 
    00007f9566c0a7d0:  00007f9558000010  00007f9558000010 
    00007f9566c0a7e0:  000000000000000e  000000000000000e 
    00007f9566c0a7f0:  0000000000000000  0000000000000000 
    00007f9566c0a800:  ffffffffffffffff  ffffffffffffffff 
    00007f9566c0a810:  0000000400000004  0000000400000004 
    00007f9566c0a820:  20636f6c6c616d00  203a64656c696166 
    00007f9566c0a830: <0000000000000000  0000000000000000 
    00007f9566c0a840:  0000000000000000  0000000000000000 
    00007f9566c0a850:  0000000000000000  0000000000000000 
    00007f9566c0a860:  0000000000000000  0000000000000000 
    00007f9566c0a870:  0000000000000000  0000000000000000 
    00007f9566c0a880:  0000000000000000  0000000000000000 
    00007f9566c0a890:  0000000000000000  0000000000000000 
    00007f9566c0a8a0:  0000000000000000  0000000000000000 
    00007f9566c0a8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f9566c0a8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f9566c0a8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f9566c0a8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f9566c0a8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f9566c0a900:  ffffffffffffffff  ffffffffffffffff 
    00007f9566c0a910:  ffffffffffffffff  ffffffffffffffff 
    00007f9566c0a920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f956965cf47
    stack: frame={sp:0x7f9566c0a830, fp:0x0} stack=[0x7f956640b288,0x7f9566c0ae88)
    00007f9566c0a730:  00007f9566c0aaf0  00007f9569c4575a 
    00007f9566c0a740:  000000000000000b  0000000000000000 
    00007f9566c0a750:  00007f95652a8700  00005608636dd148 
    00007f9566c0a760:  00007f9566c0ac40  00007f9558000c50 
    00007f9566c0a770:  0000000000000000  0000560862bb9d10 
    00007f9566c0a780:  0000000000000000  00007f9569c3df13 
    00007f9566c0a790:  0000000000000005  0000000000000000 
    00007f9566c0a7a0:  2525252525252525  2525252525252525 
    00007f9566c0a7b0:  00000000000000ff  0000000000000000 
    00007f9566c0a7c0:  00000000000000ff  0000000000000000 
    00007f9566c0a7d0:  00007f9558000010  00007f9558000010 
    00007f9566c0a7e0:  000000000000000e  000000000000000e 
    00007f9566c0a7f0:  0000000000000000  0000000000000000 
    00007f9566c0a800:  ffffffffffffffff  ffffffffffffffff 
    00007f9566c0a810:  0000000400000004  0000000400000004 
    00007f9566c0a820:  20636f6c6c616d00  203a64656c696166 
    00007f9566c0a830: <0000000000000000  0000000000000000 
    00007f9566c0a840:  0000000000000000  0000000000000000 
    00007f9566c0a850:  0000000000000000  0000000000000000 
    00007f9566c0a860:  0000000000000000  0000000000000000 
    00007f9566c0a870:  0000000000000000  0000000000000000 
    00007f9566c0a880:  0000000000000000  0000000000000000 
    00007f9566c0a890:  0000000000000000  0000000000000000 
    00007f9566c0a8a0:  0000000000000000  0000000000000000 
    00007f9566c0a8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f9566c0a8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f9566c0a8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f9566c0a8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f9566c0a8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f9566c0a900:  ffffffffffffffff  ffffffffffffffff 
    00007f9566c0a910:  ffffffffffffffff  ffffffffffffffff 
    00007f9566c0a920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).parse(0xc00012c500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:277 +0xbc6
    text/template/parse.(*Tree).Parse(0xc00012c500, 0x560862a69440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001d66f0, 0xc000152340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x560862a0e9b7, 0x4, 0x560862a69440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000152340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc0000cd780, 0x560862a69440, 0x16c, 0x4, 0xc0001195e8, 0x5608636f8760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 19 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 20 [runnable]:
    text/template/parse.(*lexer).run(0xc00015a630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:228
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7f9569a0a840
    rcx    0x7f956965cf47
    rdx    0x0
    rdi    0x2
    rsi    0x7f9566c0a830
    rbp    0x560862bd3e7c
    rsp    0x7f9566c0a830
    r8     0x0
    r9     0x7f9566c0a830
    r10    0x8
    r11    0x246
    r12    0x7f9558000c50
    r13    0x0
    r14    0x560862bb9d10
    r15    0x0
    rip    0x7f956965cf47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000062c00)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000062c00)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc00004b000, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc000099f01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc00008a300)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [syscall, locked to thread]:
    reflect.MakeSlice(0x1d4e220, 0x181c100, 0x0, 0x4, 0x181c100, 0x0, 0x0)
    	/usr/local/go/src/reflect/value.go:2299 +0x85
    encoding/json.(*decodeState).array(0xc000445550, 0x181c100, 0xc000455788, 0x197, 0xc000445578, 0x5b)
    	/usr/local/go/src/encoding/json/decode.go:547 +0x716
    encoding/json.(*decodeState).value(0xc000445550, 0x181c100, 0xc000455788, 0x197, 0x181c100, 0xc000455788)
    	/usr/local/go/src/encoding/json/decode.go:360 +0x105
    encoding/json.(*decodeState).object(0xc000445550, 0x1815520, 0xc000455680, 0x16, 0xc000445578, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000445550, 0x1815520, 0xc000455680, 0x16, 0xc0003cdbc8, 0x6fa34b)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc000445550, 0x1815520, 0xc000455680, 0xc000445578, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc00036cbd6, 0xc9, 0xb22a, 0x1815520, 0xc000455680, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00044f200, 0xc00036cbd6, 0xc9, 0xb22a, 0x7f97555dc580, 0xc00044f200)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0004448f0, 0x19ce1a0, 0xc00044f200, 0x199, 0xc000444918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0004448f0, 0x19ce1a0, 0xc00044f200, 0x199, 0xc000455440, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004448f0, 0x18bc100, 0xc00044eaa0, 0x195, 0xc000444918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004448f0, 0x18bc100, 0xc00044eaa0, 0x195, 0x18bc100, 0xc00044eaa0)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004448f0, 0x1815520, 0xc00044e900, 0x16, 0xc000444918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004448f0, 0x1815520, 0xc00044e900, 0x16, 0xc0003ce888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0004448f0, 0x1815520, 0xc00044e900, 0xc000444918, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc00036c7b5, 0x9e1, 0xb64b, 0x1815520, 0xc00044e900, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00039cb40, 0xc00036c7b5, 0x9e1, 0xb64b, 0x7f97555dc580, 0xc00039cb40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e49a0, 0x19ce1a0, 0xc00039cb40, 0x199, 0xc0000e49c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e49a0, 0x19ce1a0, 0xc00039cb40, 0x199, 0xc00044e6c0, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e49a0, 0x18e59a0, 0xc000332ac8, 0x195, 0xc0000e49c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e49a0, 0x18e59a0, 0xc000332ac8, 0x195, 0x18e59a0, 0xc000332ac8)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e49a0, 0x1815520, 0xc000332900, 0x16, 0xc0000e49c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e49a0, 0x1815520, 0xc000332900, 0x16, 0xc000123548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e49a0, 0x1815520, 0xc000332900, 0xc0000e49c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000368000, 0x9d38, 0xfe00, 0x1815520, 0xc000332900, 0x2aa0130, 0x7f97555dc400)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0003326c0, 0xc000368000, 0x9d38, 0xfe00, 0x7f97555dc580, 0xc0003326c0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e48f0, 0x1a89300, 0xc0003326c0, 0x16, 0xc0000e4918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e48f0, 0x1a89300, 0xc0003326c0, 0x16, 0xc000123c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e48f0, 0x1a89300, 0xc0003326c0, 0xc0000e4918, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000368000, 0x9d39, 0xfe00, 0x1a89300, 0xc0003326c0, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc00031db30, 0xc000123d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc00031da70, 0xc00031da40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 18 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7fcea9bebf47 m=5 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7fcea9bebf47
    stack: frame={sp:0x7fcea6998830, fp:0x0} stack=[0x7fcea6199288,0x7fcea6998e88)
    00007fcea6998730:  00007fcea6998af0  00007fceaa1d475a 
    00007fcea6998740:  000000000000000b  0000000000000000 
    00007fcea6998750:  00007fcea5837700  0000556b7d370148 
    00007fcea6998760:  00007fcea6998c40  0000556b7ef463f0 
    00007fcea6998770:  0000000000000000  0000556b7c84cd10 
    00007fcea6998780:  0000000000000000  00007fceaa1ccf13 
    00007fcea6998790:  0000000000000005  0000000000000000 
    00007fcea69987a0:  2525252525252525  2525252525252525 
    00007fcea69987b0:  00000000000000ff  0000000000000000 
    00007fcea69987c0:  00000000000000ff  0000000000000000 
    00007fcea69987d0:  00007fce8c000010  00007fce8c000010 
    00007fcea69987e0:  000000000000000e  000000000000000e 
    00007fcea69987f0:  0000000000000000  0000000000000000 
    00007fcea6998800:  ffffffffffffffff  ffffffffffffffff 
    00007fcea6998810:  0000000400000004  0000000400000004 
    00007fcea6998820:  20636f6c6c616d00  203a64656c696166 
    00007fcea6998830: <0000000000000000  0000000000000000 
    00007fcea6998840:  0000000000000000  0000000000000000 
    00007fcea6998850:  0000000000000000  0000000000000000 
    00007fcea6998860:  0000000000000000  0000000000000000 
    00007fcea6998870:  0000000000000000  0000000000000000 
    00007fcea6998880:  0000000000000000  0000000000000000 
    00007fcea6998890:  0000000000000000  0000000000000000 
    00007fcea69988a0:  0000000000000000  0000000000000000 
    00007fcea69988b0:  fffffffe7fffffff  ffffffffffffffff 
    00007fcea69988c0:  ffffffffffffffff  ffffffffffffffff 
    00007fcea69988d0:  ffffffffffffffff  ffffffffffffffff 
    00007fcea69988e0:  ffffffffffffffff  ffffffffffffffff 
    00007fcea69988f0:  ffffffffffffffff  ffffffffffffffff 
    00007fcea6998900:  ffffffffffffffff  ffffffffffffffff 
    00007fcea6998910:  ffffffffffffffff  ffffffffffffffff 
    00007fcea6998920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7fcea9bebf47
    stack: frame={sp:0x7fcea6998830, fp:0x0} stack=[0x7fcea6199288,0x7fcea6998e88)
    00007fcea6998730:  00007fcea6998af0  00007fceaa1d475a 
    00007fcea6998740:  000000000000000b  0000000000000000 
    00007fcea6998750:  00007fcea5837700  0000556b7d370148 
    00007fcea6998760:  00007fcea6998c40  0000556b7ef463f0 
    00007fcea6998770:  0000000000000000  0000556b7c84cd10 
    00007fcea6998780:  0000000000000000  00007fceaa1ccf13 
    00007fcea6998790:  0000000000000005  0000000000000000 
    00007fcea69987a0:  2525252525252525  2525252525252525 
    00007fcea69987b0:  00000000000000ff  0000000000000000 
    00007fcea69987c0:  00000000000000ff  0000000000000000 
    00007fcea69987d0:  00007fce8c000010  00007fce8c000010 
    00007fcea69987e0:  000000000000000e  000000000000000e 
    00007fcea69987f0:  0000000000000000  0000000000000000 
    00007fcea6998800:  ffffffffffffffff  ffffffffffffffff 
    00007fcea6998810:  0000000400000004  0000000400000004 
    00007fcea6998820:  20636f6c6c616d00  203a64656c696166 
    00007fcea6998830: <0000000000000000  0000000000000000 
    00007fcea6998840:  0000000000000000  0000000000000000 
    00007fcea6998850:  0000000000000000  0000000000000000 
    00007fcea6998860:  0000000000000000  0000000000000000 
    00007fcea6998870:  0000000000000000  0000000000000000 
    00007fcea6998880:  0000000000000000  0000000000000000 
    00007fcea6998890:  0000000000000000  0000000000000000 
    00007fcea69988a0:  0000000000000000  0000000000000000 
    00007fcea69988b0:  fffffffe7fffffff  ffffffffffffffff 
    00007fcea69988c0:  ffffffffffffffff  ffffffffffffffff 
    00007fcea69988d0:  ffffffffffffffff  ffffffffffffffff 
    00007fcea69988e0:  ffffffffffffffff  ffffffffffffffff 
    00007fcea69988f0:  ffffffffffffffff  ffffffffffffffff 
    00007fcea6998900:  ffffffffffffffff  ffffffffffffffff 
    00007fcea6998910:  ffffffffffffffff  ffffffffffffffff 
    00007fcea6998920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).parse(0xc00012c500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:277 +0xbc6
    text/template/parse.(*Tree).Parse(0xc00012c500, 0x556b7c6fc440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001d66f0, 0xc000152340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x556b7c6a19b7, 0x4, 0x556b7c6fc440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000152340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc0000cd780, 0x556b7c6fc440, 0x16c, 0x4, 0xc000119828, 0x556b7d38b760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 19 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 20 [runnable]:
    text/template/parse.(*lexer).run(0xc00015a630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:228
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7fcea9f99840
    rcx    0x7fcea9bebf47
    rdx    0x0
    rdi    0x2
    rsi    0x7fcea6998830
    rbp    0x556b7c866e7c
    rsp    0x7fcea6998830
    r8     0x0
    r9     0x7fcea6998830
    r10    0x8
    r11    0x246
    r12    0x556b7ef463f0
    r13    0x0
    r14    0x556b7c84cd10
    r15    0x0
    rip    0x7fcea9bebf47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
