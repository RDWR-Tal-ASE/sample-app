apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f5420340f47 m=5 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f5420340f47
    stack: frame={sp:0x7f541c8ec830, fp:0x0} stack=[0x7f541c0ed288,0x7f541c8ece88)
    00007f541c8ec730:  00007f541c8ecaf0  00007f542092975a 
    00007f541c8ec740:  000000000000000b  0000000000000000 
    00007f541c8ec750:  00007f540ee9d700  0000564c2baf8148 
    00007f541c8ec760:  00007f541c8ecc40  00007f5408000c50 
    00007f541c8ec770:  0000000000000000  0000564c2afd4d10 
    00007f541c8ec780:  0000000000000000  00007f5420921f13 
    00007f541c8ec790:  0000000000000005  0000000000000000 
    00007f541c8ec7a0:  2525252525252525  2525252525252525 
    00007f541c8ec7b0:  00000000000000ff  0000000000000000 
    00007f541c8ec7c0:  00000000000000ff  0000000000000000 
    00007f541c8ec7d0:  0000000000000007  0000000000000009 
    00007f541c8ec7e0:  000000000000000e  000000000000000e 
    00007f541c8ec7f0:  0000000000000000  0000000000000000 
    00007f541c8ec800:  ffffffffffffffff  ffffffffffffffff 
    00007f541c8ec810:  0000000400000004  0000000400000004 
    00007f541c8ec820:  20636f6c6c616d00  203a64656c696166 
    00007f541c8ec830: <0000000000000000  0000000000000000 
    00007f541c8ec840:  0000000000000000  0000000000000000 
    00007f541c8ec850:  0000000000000000  0000000000000000 
    00007f541c8ec860:  0000000000000000  0000000000000000 
    00007f541c8ec870:  0000000000000000  0000000000000000 
    00007f541c8ec880:  0000000000000000  0000000000000000 
    00007f541c8ec890:  0000000000000000  0000000000000000 
    00007f541c8ec8a0:  0000000000000000  0000000000000000 
    00007f541c8ec8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f541c8ec8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f541c8ec8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f541c8ec8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f541c8ec8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f541c8ec900:  ffffffffffffffff  ffffffffffffffff 
    00007f541c8ec910:  ffffffffffffffff  ffffffffffffffff 
    00007f541c8ec920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f5420340f47
    stack: frame={sp:0x7f541c8ec830, fp:0x0} stack=[0x7f541c0ed288,0x7f541c8ece88)
    00007f541c8ec730:  00007f541c8ecaf0  00007f542092975a 
    00007f541c8ec740:  000000000000000b  0000000000000000 
    00007f541c8ec750:  00007f540ee9d700  0000564c2baf8148 
    00007f541c8ec760:  00007f541c8ecc40  00007f5408000c50 
    00007f541c8ec770:  0000000000000000  0000564c2afd4d10 
    00007f541c8ec780:  0000000000000000  00007f5420921f13 
    00007f541c8ec790:  0000000000000005  0000000000000000 
    00007f541c8ec7a0:  2525252525252525  2525252525252525 
    00007f541c8ec7b0:  00000000000000ff  0000000000000000 
    00007f541c8ec7c0:  00000000000000ff  0000000000000000 
    00007f541c8ec7d0:  0000000000000007  0000000000000009 
    00007f541c8ec7e0:  000000000000000e  000000000000000e 
    00007f541c8ec7f0:  0000000000000000  0000000000000000 
    00007f541c8ec800:  ffffffffffffffff  ffffffffffffffff 
    00007f541c8ec810:  0000000400000004  0000000400000004 
    00007f541c8ec820:  20636f6c6c616d00  203a64656c696166 
    00007f541c8ec830: <0000000000000000  0000000000000000 
    00007f541c8ec840:  0000000000000000  0000000000000000 
    00007f541c8ec850:  0000000000000000  0000000000000000 
    00007f541c8ec860:  0000000000000000  0000000000000000 
    00007f541c8ec870:  0000000000000000  0000000000000000 
    00007f541c8ec880:  0000000000000000  0000000000000000 
    00007f541c8ec890:  0000000000000000  0000000000000000 
    00007f541c8ec8a0:  0000000000000000  0000000000000000 
    00007f541c8ec8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f541c8ec8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f541c8ec8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f541c8ec8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f541c8ec8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f541c8ec900:  ffffffffffffffff  ffffffffffffffff 
    00007f541c8ec910:  ffffffffffffffff  ffffffffffffffff 
    00007f541c8ec920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).next(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:64
    text/template/parse.(*Tree).nextNonSpace(0xc00012c500, 0x0, 0x0, 0x0, 0x0, 0x0)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:102 +0x14e
    text/template/parse.(*Tree).parse(0xc00012c500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:281 +0x2f6
    text/template/parse.(*Tree).Parse(0xc00012c500, 0x564c2ae84440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001d66f0, 0xc000152340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x564c2ae299b7, 0x4, 0x564c2ae84440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000152340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc0000cd780, 0x564c2ae84440, 0x16c, 0x4, 0xc0001195e8, 0x564c2bb13760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 19 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 20 [runnable]:
    text/template/parse.(*lexer).emit(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:157
    text/template/parse.lexLeftDelim(0xc00015a630, 0x564c2b5a3888)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:307 +0x1e0
    text/template/parse.(*lexer).run(0xc00015a630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:230 +0x39
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7f54206ee840
    rcx    0x7f5420340f47
    rdx    0x0
    rdi    0x2
    rsi    0x7f541c8ec830
    rbp    0x564c2afeee7c
    rsp    0x7f541c8ec830
    r8     0x0
    r9     0x7f541c8ec830
    r10    0x8
    r11    0x246
    r12    0x7f5408000c50
    r13    0x0
    r14    0x564c2afd4d10
    r15    0x0
    rip    0x7f5420340f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000188000)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000188000)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc000048800, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc000073f01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc000000a80)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [syscall, locked to thread]:
    reflect.mapassign(0x18bc100, 0xc0004f3830, 0xc00050d080, 0xc000522900)
    	/usr/local/go/src/runtime/map.go:1319 +0x3f
    reflect.Value.SetMapIndex(0x18bc100, 0xc0005221a0, 0x195, 0x1858200, 0xc00050d080, 0x98, 0x19ce1a0, 0xc000522900, 0x199)
    	/usr/local/go/src/reflect/value.go:1706 +0x27c
    encoding/json.(*decodeState).object(0xc0005168f0, 0x18bc100, 0xc0005221a0, 0x195, 0xc000516918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:807 +0x8da
    encoding/json.(*decodeState).value(0xc0005168f0, 0x18bc100, 0xc0005221a0, 0x195, 0x18bc100, 0xc0005221a0)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0005168f0, 0x1815520, 0xc000522000, 0x16, 0xc000516918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0005168f0, 0x1815520, 0xc000522000, 0x16, 0xc0004a0888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0005168f0, 0x1815520, 0xc000522000, 0xc000516918, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc00043c7b5, 0x9e1, 0xb64b, 0x1815520, 0xc000522000, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000470240, 0xc00043c7b5, 0x9e1, 0xb64b, 0x7f58067a8b00, 0xc000470240)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0001369a0, 0x19ce1a0, 0xc000470240, 0x199, 0xc0001369c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0001369a0, 0x19ce1a0, 0xc000470240, 0x199, 0xc00051bd40, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0001369a0, 0x18e59a0, 0xc0004481c8, 0x195, 0xc0001369c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0001369a0, 0x18e59a0, 0xc0004481c8, 0x195, 0x18e59a0, 0xc0004481c8)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0001369a0, 0x1815520, 0xc000448000, 0x16, 0xc0001369c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0001369a0, 0x1815520, 0xc000448000, 0x16, 0xc000173548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0001369a0, 0x1815520, 0xc000448000, 0xc0001369c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000438000, 0x9d38, 0xfe00, 0x1815520, 0xc000448000, 0x7f58067a06a0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0003f3d40, 0xc000438000, 0x9d38, 0xfe00, 0x7f58067a8b00, 0xc0003f3d40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0001368f0, 0x1a89300, 0xc0003f3d40, 0x16, 0xc000136918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0001368f0, 0x1a89300, 0xc0003f3d40, 0x16, 0xc000173c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0001368f0, 0x1a89300, 0xc0003f3d40, 0xc000136918, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000438000, 0x9d39, 0xfe00, 0x1a89300, 0xc0003f3d40, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc0003efb30, 0xc000173d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc0003efa70, 0xc0003efa40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 6 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f0f4c5cdf47 m=5 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f0f4c5cdf47
    stack: frame={sp:0x7f0f48b79830, fp:0x0} stack=[0x7f0f4837a288,0x7f0f48b79e88)
    00007f0f48b79730:  00007f0f48b79af0  00007f0f4cbb675a 
    00007f0f48b79740:  000000000000000b  0000000000000000 
    00007f0f48b79750:  00007f0f3affd700  00005565e1fe1148 
    00007f0f48b79760:  00007f0f48b79c40  00007f0f34000c50 
    00007f0f48b79770:  0000000000000000  00005565e14bdd10 
    00007f0f48b79780:  0000000000000000  00007f0f4cbaef13 
    00007f0f48b79790:  0000000000000005  0000000000000000 
    00007f0f48b797a0:  2525252525252525  2525252525252525 
    00007f0f48b797b0:  00000000000000ff  0000000000000000 
    00007f0f48b797c0:  00000000000000ff  0000000000000000 
    00007f0f48b797d0:  0000000000000002  0000000000000003 
    00007f0f48b797e0:  000000000000000e  000000000000000e 
    00007f0f48b797f0:  0000000000000000  0000000000000000 
    00007f0f48b79800:  ffffffffffffffff  ffffffffffffffff 
    00007f0f48b79810:  0000000400000004  0000000400000004 
    00007f0f48b79820:  20636f6c6c616d00  203a64656c696166 
    00007f0f48b79830: <0000000000000000  0000000000000000 
    00007f0f48b79840:  0000000000000000  0000000000000000 
    00007f0f48b79850:  0000000000000000  0000000000000000 
    00007f0f48b79860:  0000000000000000  0000000000000000 
    00007f0f48b79870:  0000000000000000  0000000000000000 
    00007f0f48b79880:  0000000000000000  0000000000000000 
    00007f0f48b79890:  0000000000000000  0000000000000000 
    00007f0f48b798a0:  0000000000000000  0000000000000000 
    00007f0f48b798b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f0f48b798c0:  ffffffffffffffff  ffffffffffffffff 
    00007f0f48b798d0:  ffffffffffffffff  ffffffffffffffff 
    00007f0f48b798e0:  ffffffffffffffff  ffffffffffffffff 
    00007f0f48b798f0:  ffffffffffffffff  ffffffffffffffff 
    00007f0f48b79900:  ffffffffffffffff  ffffffffffffffff 
    00007f0f48b79910:  ffffffffffffffff  ffffffffffffffff 
    00007f0f48b79920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f0f4c5cdf47
    stack: frame={sp:0x7f0f48b79830, fp:0x0} stack=[0x7f0f4837a288,0x7f0f48b79e88)
    00007f0f48b79730:  00007f0f48b79af0  00007f0f4cbb675a 
    00007f0f48b79740:  000000000000000b  0000000000000000 
    00007f0f48b79750:  00007f0f3affd700  00005565e1fe1148 
    00007f0f48b79760:  00007f0f48b79c40  00007f0f34000c50 
    00007f0f48b79770:  0000000000000000  00005565e14bdd10 
    00007f0f48b79780:  0000000000000000  00007f0f4cbaef13 
    00007f0f48b79790:  0000000000000005  0000000000000000 
    00007f0f48b797a0:  2525252525252525  2525252525252525 
    00007f0f48b797b0:  00000000000000ff  0000000000000000 
    00007f0f48b797c0:  00000000000000ff  0000000000000000 
    00007f0f48b797d0:  0000000000000002  0000000000000003 
    00007f0f48b797e0:  000000000000000e  000000000000000e 
    00007f0f48b797f0:  0000000000000000  0000000000000000 
    00007f0f48b79800:  ffffffffffffffff  ffffffffffffffff 
    00007f0f48b79810:  0000000400000004  0000000400000004 
    00007f0f48b79820:  20636f6c6c616d00  203a64656c696166 
    00007f0f48b79830: <0000000000000000  0000000000000000 
    00007f0f48b79840:  0000000000000000  0000000000000000 
    00007f0f48b79850:  0000000000000000  0000000000000000 
    00007f0f48b79860:  0000000000000000  0000000000000000 
    00007f0f48b79870:  0000000000000000  0000000000000000 
    00007f0f48b79880:  0000000000000000  0000000000000000 
    00007f0f48b79890:  0000000000000000  0000000000000000 
    00007f0f48b798a0:  0000000000000000  0000000000000000 
    00007f0f48b798b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f0f48b798c0:  ffffffffffffffff  ffffffffffffffff 
    00007f0f48b798d0:  ffffffffffffffff  ffffffffffffffff 
    00007f0f48b798e0:  ffffffffffffffff  ffffffffffffffff 
    00007f0f48b798f0:  ffffffffffffffff  ffffffffffffffff 
    00007f0f48b79900:  ffffffffffffffff  ffffffffffffffff 
    00007f0f48b79910:  ffffffffffffffff  ffffffffffffffff 
    00007f0f48b79920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).operand(0xc00012c500, 0x8, 0x39)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:632 +0xc54
    text/template/parse.(*Tree).command(0xc00012c500, 0x8)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:599 +0xdb
    text/template/parse.(*Tree).pipeline(0xc00012c500, 0x5565e13129eb, 0x4, 0xc000276088)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:433 +0x5e8
    text/template/parse.(*Tree).parseControl(0xc00012c500, 0xc000251700, 0x5565e13129eb, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:457 +0xe4
    text/template/parse.(*Tree).withControl(0xc00012c500, 0x1f, 0x34)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:509 +0x4e
    text/template/parse.(*Tree).action(0xc00012c500, 0xa, 0x30)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:372 +0x55f
    text/template/parse.(*Tree).textOrAction(0xc00012c500, 0x1f, 0x34)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:345 +0x295
    text/template/parse.(*Tree).parse(0xc00012c500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:291 +0x383
    text/template/parse.(*Tree).Parse(0xc00012c500, 0x5565e136d440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001d66f0, 0xc000152340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x5565e13129b7, 0x4, 0x5565e136d440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000152340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc0000cd780, 0x5565e136d440, 0x16c, 0x4, 0xc000119828, 0x5565e1ffc760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 19 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 20 [runnable]:
    text/template/parse.(*lexer).emit(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:157
    text/template/parse.lexFieldOrVariable(0xc00015a630, 0x8, 0x3)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:514 +0x14b
    text/template/parse.lexField(0xc00015a630, 0x5565e1a8c870)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:479 +0x36
    text/template/parse.(*lexer).run(0xc00015a630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:230 +0x39
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7f0f4c97b840
    rcx    0x7f0f4c5cdf47
    rdx    0x0
    rdi    0x2
    rsi    0x7f0f48b79830
    rbp    0x5565e14d7e7c
    rsp    0x7f0f48b79830
    r8     0x0
    r9     0x7f0f48b79830
    r10    0x8
    r11    0x246
    r12    0x7f0f34000c50
    r13    0x0
    r14    0x5565e14bdd10
    r15    0x0
    rip    0x7f0f4c5cdf47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
