apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f75e0e55f47 m=5 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f75e0e55f47
    stack: frame={sp:0x7f75dd401830, fp:0x0} stack=[0x7f75dcc02288,0x7f75dd401e88)
    00007f75dd401730:  00007f75dd401af0  00007f75e143e75a 
    00007f75dd401740:  000000000000000b  0000000000000000 
    00007f75dd401750:  00007f75c77fe700  000055b84cc41148 
    00007f75dd401760:  00007f75dd401c40  000055b84eac03f0 
    00007f75dd401770:  0000000000000000  000055b84c11dd10 
    00007f75dd401780:  0000000000000000  00007f75e1436f13 
    00007f75dd401790:  0000000000000005  0000000000000000 
    00007f75dd4017a0:  2525252525252525  2525252525252525 
    00007f75dd4017b0:  00000000000000ff  0000000000000000 
    00007f75dd4017c0:  00000000000000ff  0000000000000000 
    00007f75dd4017d0:  0000000000000003  000000000000000c 
    00007f75dd4017e0:  000000000000000e  000000000000000e 
    00007f75dd4017f0:  0000000000000000  0000000000000000 
    00007f75dd401800:  ffffffffffffffff  ffffffffffffffff 
    00007f75dd401810:  0000000400000004  0000000400000004 
    00007f75dd401820:  20636f6c6c616d00  203a64656c696166 
    00007f75dd401830: <0000000000000000  0000000000000000 
    00007f75dd401840:  0000000000000000  0000000000000000 
    00007f75dd401850:  0000000000000000  0000000000000000 
    00007f75dd401860:  0000000000000000  0000000000000000 
    00007f75dd401870:  0000000000000000  0000000000000000 
    00007f75dd401880:  0000000000000000  0000000000000000 
    00007f75dd401890:  0000000000000000  0000000000000000 
    00007f75dd4018a0:  0000000000000000  0000000000000000 
    00007f75dd4018b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f75dd4018c0:  ffffffffffffffff  ffffffffffffffff 
    00007f75dd4018d0:  ffffffffffffffff  ffffffffffffffff 
    00007f75dd4018e0:  ffffffffffffffff  ffffffffffffffff 
    00007f75dd4018f0:  ffffffffffffffff  ffffffffffffffff 
    00007f75dd401900:  ffffffffffffffff  ffffffffffffffff 
    00007f75dd401910:  ffffffffffffffff  ffffffffffffffff 
    00007f75dd401920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f75e0e55f47
    stack: frame={sp:0x7f75dd401830, fp:0x0} stack=[0x7f75dcc02288,0x7f75dd401e88)
    00007f75dd401730:  00007f75dd401af0  00007f75e143e75a 
    00007f75dd401740:  000000000000000b  0000000000000000 
    00007f75dd401750:  00007f75c77fe700  000055b84cc41148 
    00007f75dd401760:  00007f75dd401c40  000055b84eac03f0 
    00007f75dd401770:  0000000000000000  000055b84c11dd10 
    00007f75dd401780:  0000000000000000  00007f75e1436f13 
    00007f75dd401790:  0000000000000005  0000000000000000 
    00007f75dd4017a0:  2525252525252525  2525252525252525 
    00007f75dd4017b0:  00000000000000ff  0000000000000000 
    00007f75dd4017c0:  00000000000000ff  0000000000000000 
    00007f75dd4017d0:  0000000000000003  000000000000000c 
    00007f75dd4017e0:  000000000000000e  000000000000000e 
    00007f75dd4017f0:  0000000000000000  0000000000000000 
    00007f75dd401800:  ffffffffffffffff  ffffffffffffffff 
    00007f75dd401810:  0000000400000004  0000000400000004 
    00007f75dd401820:  20636f6c6c616d00  203a64656c696166 
    00007f75dd401830: <0000000000000000  0000000000000000 
    00007f75dd401840:  0000000000000000  0000000000000000 
    00007f75dd401850:  0000000000000000  0000000000000000 
    00007f75dd401860:  0000000000000000  0000000000000000 
    00007f75dd401870:  0000000000000000  0000000000000000 
    00007f75dd401880:  0000000000000000  0000000000000000 
    00007f75dd401890:  0000000000000000  0000000000000000 
    00007f75dd4018a0:  0000000000000000  0000000000000000 
    00007f75dd4018b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f75dd4018c0:  ffffffffffffffff  ffffffffffffffff 
    00007f75dd4018d0:  ffffffffffffffff  ffffffffffffffff 
    00007f75dd4018e0:  ffffffffffffffff  ffffffffffffffff 
    00007f75dd4018f0:  ffffffffffffffff  ffffffffffffffff 
    00007f75dd401900:  ffffffffffffffff  ffffffffffffffff 
    00007f75dd401910:  ffffffffffffffff  ffffffffffffffff 
    00007f75dd401920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).next(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:64
    text/template/parse.(*Tree).nextNonSpace(0xc00011c500, 0x0, 0x0, 0x0, 0x0, 0x0)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:102 +0x14e
    text/template/parse.(*Tree).action(0xc00011c500, 0xa, 0x15c)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:358 +0x45
    text/template/parse.(*Tree).textOrAction(0xc00011c500, 0xa, 0x15c)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:345 +0x295
    text/template/parse.(*Tree).itemList(0xc00011c500, 0x55b84bf729eb, 0x4, 0xc000270000)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:327 +0xfb
    text/template/parse.(*Tree).parseControl(0xc00011c500, 0x7f75dee05f00, 0x55b84bf729eb, 0x4, 0x0, 0x0, 0xc000270000, 0x0, 0x0)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:459 +0x102
    text/template/parse.(*Tree).withControl(0xc00011c500, 0x1f, 0x13f)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:509 +0x4e
    text/template/parse.(*Tree).action(0xc00011c500, 0xa, 0x13b)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:372 +0x55f
    text/template/parse.(*Tree).textOrAction(0xc00011c500, 0x1f, 0x13f)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:345 +0x295
    text/template/parse.(*Tree).parse(0xc00011c500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:291 +0x383
    text/template/parse.(*Tree).Parse(0xc00011c500, 0x55b84bfcd440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001c4720, 0xc000142350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x55b84bf729b7, 0x4, 0x55b84bfcd440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000142350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc00003d840, 0x55b84bfcd440, 0x16c, 0x4, 0xc0001095e8, 0x55b84cc5c760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 6 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 7 [runnable]:
    text/template/parse.(*lexer).emit(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:157
    text/template/parse.lexLeftDelim(0xc00014a630, 0x55b84c6ec888)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:307 +0x1e0
    text/template/parse.(*lexer).run(0xc00014a630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:230 +0x39
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7f75e1203840
    rcx    0x7f75e0e55f47
    rdx    0x0
    rdi    0x2
    rsi    0x7f75dd401830
    rbp    0x55b84c137e7c
    rsp    0x7f75dd401830
    r8     0x0
    r9     0x7f75dd401830
    r10    0x8
    r11    0x246
    r12    0x55b84eac03f0
    r13    0x0
    r14    0x55b84c11dd10
    r15    0x0
    rip    0x7f75e0e55f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000062c00)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000062c00)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc00004b000, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0x1)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc00008a300)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [runnable, locked to thread]:
    strings.genSplit(0xc00046ba21, 0x17, 0x1ac3356, 0x1, 0x0, 0xffffffffffffffff, 0x17, 0x0, 0x17)
    	/usr/local/go/src/strings/strings.go:247 +0x71
    strings.Split(...)
    	/usr/local/go/src/strings/strings.go:299
    k8s.io/kubernetes/vendor/github.com/go-openapi/jsonpointer.(*Pointer).parse(0xc00044db70, 0xc00046ba21, 0x17, 0x0, 0x0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/jsonpointer/pointer.go:83 +0xac
    k8s.io/kubernetes/vendor/github.com/go-openapi/jsonpointer.New(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/jsonpointer/pointer.go:64
    k8s.io/kubernetes/vendor/github.com/go-openapi/jsonreference.(*Ref).parse(0xc00044dbc8, 0xc00046ba00, 0x18, 0x4, 0xc0004ca3e8)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/jsonreference/reference.go:134 +0x113
    k8s.io/kubernetes/vendor/github.com/go-openapi/jsonreference.New(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/jsonreference/reference.go:45
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Ref).fromMap(0xc00044dd48, 0xc0004a3260, 0xb6b5, 0x1811e60)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/ref.go:182 +0xe8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0004b5200, 0xc0003ec74b, 0x38, 0xb6b5, 0x7fdfb9946680, 0xc0004b5200)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:569 +0x1bc
    encoding/json.(*decodeState).object(0xc0004b22c0, 0x19ce1a0, 0xc0004b5200, 0x199, 0xc0004b22e8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0004b22c0, 0x19ce1a0, 0xc0004b5200, 0x199, 0xc0004ce240, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004b22c0, 0x18bc100, 0xc0004b4aa0, 0x195, 0xc0004b22e8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004b22c0, 0x18bc100, 0xc0004b4aa0, 0x195, 0x18bc100, 0xc0004b4aa0)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004b22c0, 0x1815520, 0xc0004b4900, 0x16, 0xc0004b22e8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004b22c0, 0x1815520, 0xc0004b4900, 0x16, 0xc00044e888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0004b22c0, 0x1815520, 0xc0004b4900, 0xc0004b22e8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003ebdc7, 0x9ca, 0xc039, 0x1815520, 0xc0004b4900, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00041f200, 0xc0003ebdc7, 0x9ca, 0xc039, 0x7fdfb9946680, 0xc00041f200)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e49a0, 0x19ce1a0, 0xc00041f200, 0x199, 0xc0000e49c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e49a0, 0x19ce1a0, 0xc00041f200, 0x199, 0xc0004b46c0, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e49a0, 0x18e59a0, 0xc0003b3188, 0x195, 0xc0000e49c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e49a0, 0x18e59a0, 0xc0003b3188, 0x195, 0x18e59a0, 0xc0003b3188)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e49a0, 0x1815520, 0xc0003b2fc0, 0x16, 0xc0000e49c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e49a0, 0x1815520, 0xc0003b2fc0, 0x16, 0xc0001a3548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e49a0, 0x1815520, 0xc0003b2fc0, 0xc0000e49c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003e8000, 0x9d38, 0xfe00, 0x1815520, 0xc0003b2fc0, 0x7fdfb993c570, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0003b2d80, 0xc0003e8000, 0x9d38, 0xfe00, 0x7fdfb9946680, 0xc0003b2d80)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e48f0, 0x1a89300, 0xc0003b2d80, 0x16, 0xc0000e4918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e48f0, 0x1a89300, 0xc0003b2d80, 0x16, 0xc0001a3c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e48f0, 0x1a89300, 0xc0003b2d80, 0xc0000e4918, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003e8000, 0x9d39, 0xfe00, 0x1a89300, 0xc0003b2d80, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc00039fb30, 0xc0001a3d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc00039fa70, 0xc00039fa40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 18 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7fac9cc87f47 m=7 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7fac9cc87f47
    stack: frame={sp:0x7fac83ffe830, fp:0x0} stack=[0x7fac837ff288,0x7fac83ffee88)
    00007fac83ffe730:  00007fac83ffeaf0  00007fac9d27075a 
    00007fac83ffe740:  000000000000000b  0000000000000000 
    00007fac83ffe750:  00007fac831c6700  000055cf08842148 
    00007fac83ffe760:  00007fac83ffec40  000055cf0a3483f0 
    00007fac83ffe770:  0000000000000000  000055cf07d1ed10 
    00007fac83ffe780:  0000000000000000  00007fac9d268f13 
    00007fac83ffe790:  0000000000000005  0000000000000000 
    00007fac83ffe7a0:  2525252525252525  2525252525252525 
    00007fac83ffe7b0:  00000000000000ff  0000000000000000 
    00007fac83ffe7c0:  00000000000000ff  0000000000000000 
    00007fac83ffe7d0:  0000000000000004  000000000000000c 
    00007fac83ffe7e0:  000000000000000e  000000000000000e 
    00007fac83ffe7f0:  0000000000000000  0000000000000000 
    00007fac83ffe800:  ffffffffffffffff  ffffffffffffffff 
    00007fac83ffe810:  0000000400000004  0000000400000004 
    00007fac83ffe820:  20636f6c6c616d00  203a64656c696166 
    00007fac83ffe830: <0000000000000000  0000000000000000 
    00007fac83ffe840:  0000000000000000  0000000000000000 
    00007fac83ffe850:  0000000000000000  0000000000000000 
    00007fac83ffe860:  0000000000000000  0000000000000000 
    00007fac83ffe870:  0000000000000000  0000000000000000 
    00007fac83ffe880:  0000000000000000  0000000000000000 
    00007fac83ffe890:  0000000000000000  0000000000000000 
    00007fac83ffe8a0:  0000000000000000  0000000000000000 
    00007fac83ffe8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007fac83ffe8c0:  ffffffffffffffff  ffffffffffffffff 
    00007fac83ffe8d0:  ffffffffffffffff  ffffffffffffffff 
    00007fac83ffe8e0:  ffffffffffffffff  ffffffffffffffff 
    00007fac83ffe8f0:  ffffffffffffffff  ffffffffffffffff 
    00007fac83ffe900:  ffffffffffffffff  ffffffffffffffff 
    00007fac83ffe910:  ffffffffffffffff  ffffffffffffffff 
    00007fac83ffe920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7fac9cc87f47
    stack: frame={sp:0x7fac83ffe830, fp:0x0} stack=[0x7fac837ff288,0x7fac83ffee88)
    00007fac83ffe730:  00007fac83ffeaf0  00007fac9d27075a 
    00007fac83ffe740:  000000000000000b  0000000000000000 
    00007fac83ffe750:  00007fac831c6700  000055cf08842148 
    00007fac83ffe760:  00007fac83ffec40  000055cf0a3483f0 
    00007fac83ffe770:  0000000000000000  000055cf07d1ed10 
    00007fac83ffe780:  0000000000000000  00007fac9d268f13 
    00007fac83ffe790:  0000000000000005  0000000000000000 
    00007fac83ffe7a0:  2525252525252525  2525252525252525 
    00007fac83ffe7b0:  00000000000000ff  0000000000000000 
    00007fac83ffe7c0:  00000000000000ff  0000000000000000 
    00007fac83ffe7d0:  0000000000000004  000000000000000c 
    00007fac83ffe7e0:  000000000000000e  000000000000000e 
    00007fac83ffe7f0:  0000000000000000  0000000000000000 
    00007fac83ffe800:  ffffffffffffffff  ffffffffffffffff 
    00007fac83ffe810:  0000000400000004  0000000400000004 
    00007fac83ffe820:  20636f6c6c616d00  203a64656c696166 
    00007fac83ffe830: <0000000000000000  0000000000000000 
    00007fac83ffe840:  0000000000000000  0000000000000000 
    00007fac83ffe850:  0000000000000000  0000000000000000 
    00007fac83ffe860:  0000000000000000  0000000000000000 
    00007fac83ffe870:  0000000000000000  0000000000000000 
    00007fac83ffe880:  0000000000000000  0000000000000000 
    00007fac83ffe890:  0000000000000000  0000000000000000 
    00007fac83ffe8a0:  0000000000000000  0000000000000000 
    00007fac83ffe8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007fac83ffe8c0:  ffffffffffffffff  ffffffffffffffff 
    00007fac83ffe8d0:  ffffffffffffffff  ffffffffffffffff 
    00007fac83ffe8e0:  ffffffffffffffff  ffffffffffffffff 
    00007fac83ffe8f0:  ffffffffffffffff  ffffffffffffffff 
    00007fac83ffe900:  ffffffffffffffff  ffffffffffffffff 
    00007fac83ffe910:  ffffffffffffffff  ffffffffffffffff 
    00007fac83ffe920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [runnable]:
    github.com/snapcore/snapd/client.(*Client).do(0xc00010ea80, 0x55cf07b72ee7, 0x3, 0x55cf07b7cd78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x55cf081ccf40, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:394 +0x2f9
    github.com/snapcore/snapd/client.(*Client).doSyncWithOpts(0xc00010ea80, 0x55cf07b72ee7, 0x3, 0x55cf07b7cd78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x55cf081689a0, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:492 +0xf6
    github.com/snapcore/snapd/client.(*Client).SysInfo(0xc00010ea80, 0x46, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/client/client.go:727 +0xd4
    main.maybeWaitForSecurityProfileRegeneration(0xc00010ea80, 0xc00033e280, 0xd)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:200 +0x1aa
    main.(*cmdRun).Execute(0xc00023feb8, 0xc000032190, 0x2, 0x3, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:240 +0x172
    main.main()
    	/build/snapd/parts/snapd-deb/build/cmd/snap/main.go:482 +0x581
    
    goroutine 6 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    rax    0x0
    rbx    0x7fac9d035840
    rcx    0x7fac9cc87f47
    rdx    0x0
    rdi    0x2
    rsi    0x7fac83ffe830
    rbp    0x55cf07d38e7c
    rsp    0x7fac83ffe830
    r8     0x0
    r9     0x7fac83ffe830
    r10    0x8
    r11    0x246
    r12    0x55cf0a3483f0
    r13    0x0
    r14    0x55cf07d1ed10
    r15    0x0
    rip    0x7fac9cc87f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
