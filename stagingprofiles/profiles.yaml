apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f2ef1eacf47 m=3 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f2ef1eacf47
    stack: frame={sp:0x7f2eef45a830, fp:0x0} stack=[0x7f2eeec5b288,0x7f2eef45ae88)
    00007f2eef45a730:  00007f2eef45aaf0  00007f2ef249575a 
    00007f2eef45a740:  000000000000000b  0000000000000000 
    00007f2eef45a750:  00007f2eedc58700  000055e5e0a73148 
    00007f2eef45a760:  00007f2eef45ac40  00007f2ee0000c50 
    00007f2eef45a770:  0000000000000000  000055e5dff4fd10 
    00007f2eef45a780:  0000000000000000  00007f2ef248df13 
    00007f2eef45a790:  0000000000000005  0000000000000000 
    00007f2eef45a7a0:  2525252525252525  2525252525252525 
    00007f2eef45a7b0:  00000000000000ff  0000000000000000 
    00007f2eef45a7c0:  00000000000000ff  0000000000000000 
    00007f2eef45a7d0:  00007f2ee0000010  00007f2ee0000010 
    00007f2eef45a7e0:  000000000000000e  000000000000000e 
    00007f2eef45a7f0:  0000000000000000  0000000000000000 
    00007f2eef45a800:  ffffffffffffffff  ffffffffffffffff 
    00007f2eef45a810:  0000000400000004  0000000400000004 
    00007f2eef45a820:  20636f6c6c616d00  203a64656c696166 
    00007f2eef45a830: <0000000000000000  0000000000000000 
    00007f2eef45a840:  0000000000000000  0000000000000000 
    00007f2eef45a850:  0000000000000000  0000000000000000 
    00007f2eef45a860:  0000000000000000  0000000000000000 
    00007f2eef45a870:  0000000000000000  0000000000000000 
    00007f2eef45a880:  0000000000000000  0000000000000000 
    00007f2eef45a890:  0000000000000000  0000000000000000 
    00007f2eef45a8a0:  0000000000000000  0000000000000000 
    00007f2eef45a8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f2eef45a8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f2eef45a8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f2eef45a8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f2eef45a8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f2eef45a900:  ffffffffffffffff  ffffffffffffffff 
    00007f2eef45a910:  ffffffffffffffff  ffffffffffffffff 
    00007f2eef45a920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f2ef1eacf47
    stack: frame={sp:0x7f2eef45a830, fp:0x0} stack=[0x7f2eeec5b288,0x7f2eef45ae88)
    00007f2eef45a730:  00007f2eef45aaf0  00007f2ef249575a 
    00007f2eef45a740:  000000000000000b  0000000000000000 
    00007f2eef45a750:  00007f2eedc58700  000055e5e0a73148 
    00007f2eef45a760:  00007f2eef45ac40  00007f2ee0000c50 
    00007f2eef45a770:  0000000000000000  000055e5dff4fd10 
    00007f2eef45a780:  0000000000000000  00007f2ef248df13 
    00007f2eef45a790:  0000000000000005  0000000000000000 
    00007f2eef45a7a0:  2525252525252525  2525252525252525 
    00007f2eef45a7b0:  00000000000000ff  0000000000000000 
    00007f2eef45a7c0:  00000000000000ff  0000000000000000 
    00007f2eef45a7d0:  00007f2ee0000010  00007f2ee0000010 
    00007f2eef45a7e0:  000000000000000e  000000000000000e 
    00007f2eef45a7f0:  0000000000000000  0000000000000000 
    00007f2eef45a800:  ffffffffffffffff  ffffffffffffffff 
    00007f2eef45a810:  0000000400000004  0000000400000004 
    00007f2eef45a820:  20636f6c6c616d00  203a64656c696166 
    00007f2eef45a830: <0000000000000000  0000000000000000 
    00007f2eef45a840:  0000000000000000  0000000000000000 
    00007f2eef45a850:  0000000000000000  0000000000000000 
    00007f2eef45a860:  0000000000000000  0000000000000000 
    00007f2eef45a870:  0000000000000000  0000000000000000 
    00007f2eef45a880:  0000000000000000  0000000000000000 
    00007f2eef45a890:  0000000000000000  0000000000000000 
    00007f2eef45a8a0:  0000000000000000  0000000000000000 
    00007f2eef45a8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f2eef45a8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f2eef45a8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f2eef45a8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f2eef45a8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f2eef45a900:  ffffffffffffffff  ffffffffffffffff 
    00007f2eef45a910:  ffffffffffffffff  ffffffffffffffff 
    00007f2eef45a920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).parse(0xc00011c500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:278 +0xa5b
    text/template/parse.(*Tree).Parse(0xc00011c500, 0x55e5dfdff440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001c4720, 0xc000142350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x55e5dfda49b7, 0x4, 0x55e5dfdff440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000142350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc00003d840, 0x55e5dfdff440, 0x16c, 0x4, 0xc0001095e8, 0x55e5e0a8e760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 6 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 7 [runnable]:
    text/template/parse.(*lexer).emit(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:157
    text/template/parse.lexRightDelim(0xc00014a630, 0x55e5e051e8a8)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:345 +0x17f
    text/template/parse.(*lexer).run(0xc00014a630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:230 +0x39
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7f2ef225a840
    rcx    0x7f2ef1eacf47
    rdx    0x0
    rdi    0x2
    rsi    0x7f2eef45a830
    rbp    0x55e5dff69e7c
    rsp    0x7f2eef45a830
    r8     0x0
    r9     0x7f2eef45a830
    r10    0x8
    r11    0x246
    r12    0x7f2ee0000c50
    r13    0x0
    r14    0x55e5dff4fd10
    r15    0x0
    rip    0x7f2ef1eacf47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000088400)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000088400)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc000046000, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc000073f01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc000106000)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [syscall, locked to thread]:
    reflect.mapassign(0x18bbf80, 0xc000480ab0, 0xc000463ab0, 0xc000463a90)
    	/usr/local/go/src/runtime/map.go:1319 +0x3f
    reflect.Value.SetMapIndex(0x18bbf80, 0xc0004063b8, 0x195, 0x1858200, 0xc000463ab0, 0x98, 0x1897a80, 0xc000463a90, 0x194)
    	/usr/local/go/src/reflect/value.go:1706 +0x27c
    encoding/json.(*decodeState).object(0xc00048a840, 0x1811e60, 0xc0004063b8, 0x16, 0xc00048a868, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:807 +0x8da
    encoding/json.(*decodeState).value(0xc00048a840, 0x1811e60, 0xc0004063b8, 0x16, 0xc000427bc8, 0x6fa34b)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc00048a840, 0x1811e60, 0xc0004063b8, 0xc00048a868, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003c5f3c, 0xa1, 0xbec4, 0x1811e60, 0xc0004063b8, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00048e900, 0xc0003c5f3c, 0xa1, 0xbec4, 0x7f834df56540, 0xc00048e900)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:565 +0x18b
    encoding/json.(*decodeState).object(0xc00048a2c0, 0x19ce1a0, 0xc00048e900, 0x199, 0xc00048a2e8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc00048a2c0, 0x19ce1a0, 0xc00048e900, 0x199, 0xc00048efc0, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc00048a2c0, 0x18bc100, 0xc00048e1a0, 0x195, 0xc00048a2e8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc00048a2c0, 0x18bc100, 0xc00048e1a0, 0x195, 0x18bc100, 0xc00048e1a0)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc00048a2c0, 0x1815520, 0xc00048e000, 0x16, 0xc00048a2e8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc00048a2c0, 0x1815520, 0xc00048e000, 0x16, 0xc000428888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc00048a2c0, 0x1815520, 0xc00048e000, 0xc00048a2e8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003c5dc7, 0x9ca, 0xc039, 0x1815520, 0xc00048e000, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0003f6900, 0xc0003c5dc7, 0x9ca, 0xc039, 0x7f834df56540, 0xc0003f6900)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0001349a0, 0x19ce1a0, 0xc0003f6900, 0x199, 0xc0001349c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0001349a0, 0x19ce1a0, 0xc0003f6900, 0x199, 0xc000487d40, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0001349a0, 0x18e59a0, 0xc00038c888, 0x195, 0xc0001349c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0001349a0, 0x18e59a0, 0xc00038c888, 0x195, 0x18e59a0, 0xc00038c888)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0001349a0, 0x1815520, 0xc00038c6c0, 0x16, 0xc0001349c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0001349a0, 0x1815520, 0xc00038c6c0, 0x16, 0xc00017f548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0001349a0, 0x1815520, 0xc00038c6c0, 0xc0001349c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003c2000, 0x9d38, 0xfe00, 0x1815520, 0xc00038c6c0, 0x7f834df4e0e0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00038c480, 0xc0003c2000, 0x9d38, 0xfe00, 0x7f834df56540, 0xc00038c480)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0001348f0, 0x1a89300, 0xc00038c480, 0x16, 0xc000134918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0001348f0, 0x1a89300, 0xc00038c480, 0x16, 0xc00017fc18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0001348f0, 0x1a89300, 0xc00038c480, 0xc000134918, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003c2000, 0x9d39, 0xfe00, 0x1a89300, 0xc00038c480, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc0003799e0, 0xc00017fd68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc000379920, 0xc0003798f0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 18 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f09ce913f47 m=5 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f09ce913f47
    stack: frame={sp:0x7f09caebf830, fp:0x0} stack=[0x7f09ca6c0288,0x7f09caebfe88)
    00007f09caebf730:  00007f09caebfaf0  00007f09ceefc75a 
    00007f09caebf740:  000000000000000b  0000000000000000 
    00007f09caebf750:  00007f09c9d5e700  00005637189e3148 
    00007f09caebf760:  00007f09caebfc40  00005637193883f0 
    00007f09caebf770:  0000000000000000  0000563717ebfd10 
    00007f09caebf780:  0000000000000000  00007f09ceef4f13 
    00007f09caebf790:  0000000000000005  0000000000000000 
    00007f09caebf7a0:  2525252525252525  2525252525252525 
    00007f09caebf7b0:  00000000000000ff  0000000000000000 
    00007f09caebf7c0:  00000000000000ff  0000000000000000 
    00007f09caebf7d0:  00007f09b4000010  00007f09b4000010 
    00007f09caebf7e0:  000000000000000e  000000000000000e 
    00007f09caebf7f0:  0000000000000000  0000000000000000 
    00007f09caebf800:  ffffffffffffffff  ffffffffffffffff 
    00007f09caebf810:  0000000400000004  0000000400000004 
    00007f09caebf820:  20636f6c6c616d00  203a64656c696166 
    00007f09caebf830: <0000000000000000  0000000000000000 
    00007f09caebf840:  0000000000000000  0000000000000000 
    00007f09caebf850:  0000000000000000  0000000000000000 
    00007f09caebf860:  0000000000000000  0000000000000000 
    00007f09caebf870:  0000000000000000  0000000000000000 
    00007f09caebf880:  0000000000000000  0000000000000000 
    00007f09caebf890:  0000000000000000  0000000000000000 
    00007f09caebf8a0:  0000000000000000  0000000000000000 
    00007f09caebf8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f09caebf8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f09caebf8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f09caebf8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f09caebf8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f09caebf900:  ffffffffffffffff  ffffffffffffffff 
    00007f09caebf910:  ffffffffffffffff  ffffffffffffffff 
    00007f09caebf920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f09ce913f47
    stack: frame={sp:0x7f09caebf830, fp:0x0} stack=[0x7f09ca6c0288,0x7f09caebfe88)
    00007f09caebf730:  00007f09caebfaf0  00007f09ceefc75a 
    00007f09caebf740:  000000000000000b  0000000000000000 
    00007f09caebf750:  00007f09c9d5e700  00005637189e3148 
    00007f09caebf760:  00007f09caebfc40  00005637193883f0 
    00007f09caebf770:  0000000000000000  0000563717ebfd10 
    00007f09caebf780:  0000000000000000  00007f09ceef4f13 
    00007f09caebf790:  0000000000000005  0000000000000000 
    00007f09caebf7a0:  2525252525252525  2525252525252525 
    00007f09caebf7b0:  00000000000000ff  0000000000000000 
    00007f09caebf7c0:  00000000000000ff  0000000000000000 
    00007f09caebf7d0:  00007f09b4000010  00007f09b4000010 
    00007f09caebf7e0:  000000000000000e  000000000000000e 
    00007f09caebf7f0:  0000000000000000  0000000000000000 
    00007f09caebf800:  ffffffffffffffff  ffffffffffffffff 
    00007f09caebf810:  0000000400000004  0000000400000004 
    00007f09caebf820:  20636f6c6c616d00  203a64656c696166 
    00007f09caebf830: <0000000000000000  0000000000000000 
    00007f09caebf840:  0000000000000000  0000000000000000 
    00007f09caebf850:  0000000000000000  0000000000000000 
    00007f09caebf860:  0000000000000000  0000000000000000 
    00007f09caebf870:  0000000000000000  0000000000000000 
    00007f09caebf880:  0000000000000000  0000000000000000 
    00007f09caebf890:  0000000000000000  0000000000000000 
    00007f09caebf8a0:  0000000000000000  0000000000000000 
    00007f09caebf8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f09caebf8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f09caebf8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f09caebf8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f09caebf8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f09caebf900:  ffffffffffffffff  ffffffffffffffff 
    00007f09caebf910:  ffffffffffffffff  ffffffffffffffff 
    00007f09caebf920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).parse(0xc00012c500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:277 +0xbc6
    text/template/parse.(*Tree).Parse(0xc00012c500, 0x563717d6f440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001d66f0, 0xc000152340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x563717d149b7, 0x4, 0x563717d6f440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000152340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc0000cd780, 0x563717d6f440, 0x16c, 0x4, 0xc0001195e8, 0x5637189fe760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 19 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 20 [runnable]:
    text/template/parse.(*lexer).run(0xc00015a630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:228
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7f09cecc1840
    rcx    0x7f09ce913f47
    rdx    0x0
    rdi    0x2
    rsi    0x7f09caebf830
    rbp    0x563717ed9e7c
    rsp    0x7f09caebf830
    r8     0x0
    r9     0x7f09caebf830
    r10    0x8
    r11    0x246
    r12    0x5637193883f0
    r13    0x0
    r14    0x563717ebfd10
    r15    0x0
    rip    0x7f09ce913f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
