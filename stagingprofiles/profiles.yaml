apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    Error: bad file '-': yaml: line 11: mapping values are not allowed in this context
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 7 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000214000)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000214000)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc000050000, 0x6)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc000208001)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc000452900)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [runnable, locked to thread]:
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0005a1200, 0xc0004bee40, 0x3e, 0xafc0, 0x7f36841aeb00, 0xc0005a1200)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:551 +0x45
    encoding/json.(*decodeState).object(0xc0005969a0, 0x19ce1a0, 0xc0005a1200, 0x199, 0xc0005969c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0005969a0, 0x19ce1a0, 0xc0005a1200, 0x199, 0xc0005abd40, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0005969a0, 0x18bc100, 0xc0005a0aa0, 0x195, 0xc0005969c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0005969a0, 0x18bc100, 0xc0005a0aa0, 0x195, 0x18bc100, 0xc0005a0aa0)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0005969a0, 0x1815520, 0xc0005a0900, 0x16, 0xc0005969c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0005969a0, 0x1815520, 0xc0005a0900, 0x16, 0xc000520888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0005969a0, 0x1815520, 0xc0005a0900, 0xc0005969c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0004be7b5, 0x9e1, 0xb64b, 0x1815520, 0xc0005a0900, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0004eeb40, 0xc0004be7b5, 0x9e1, 0xb64b, 0x7f36841aeb00, 0xc0004eeb40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0001b6a50, 0x19ce1a0, 0xc0004eeb40, 0x199, 0xc0001b6a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0001b6a50, 0x19ce1a0, 0xc0004eeb40, 0x199, 0xc0005a06c0, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0001b6a50, 0x18e59a0, 0xc000482ac8, 0x195, 0xc0001b6a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0001b6a50, 0x18e59a0, 0xc000482ac8, 0x195, 0x18e59a0, 0xc000482ac8)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0001b6a50, 0x1815520, 0xc000482900, 0x16, 0xc0001b6a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0001b6a50, 0x1815520, 0xc000482900, 0x16, 0xc0001f3548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0001b6a50, 0x1815520, 0xc000482900, 0xc0001b6a78, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0004ba000, 0x9d38, 0xfe00, 0x1815520, 0xc000482900, 0x7f368424fcd8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0004826c0, 0xc0004ba000, 0x9d38, 0xfe00, 0x7f36841aeb00, 0xc0004826c0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0001b69a0, 0x1a89300, 0xc0004826c0, 0x16, 0xc0001b69c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0001b69a0, 0x1a89300, 0xc0004826c0, 0x16, 0xc0001f3c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0001b69a0, 0x1a89300, 0xc0004826c0, 0xc0001b69c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0004ba000, 0x9d39, 0xfe00, 0x1a89300, 0xc0004826c0, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc00046db30, 0xc0001f3d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc00046da70, 0xc00046da40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 6 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: 
    -----
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f3563cc7f47 m=0 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f3563cc7f47
    stack: frame={sp:0x7ffd7f783a20, fp:0x0} stack=[0x7ffd7ef85260,0x7ffd7f7842a0)
    00007ffd7f783920:  00007f35644b8358  00007ffd7f783a68 
    00007ffd7f783930:  00007f35644b8cf0  00007f35644b8000 
    00007ffd7f783940:  0000000000000000  00007f35642a423f 
    00007ffd7f783950:  0000000000000003  00000000008661c8 
    00007ffd7f783960:  00007ffd7f783e30  00000000009e9540 
    00007ffd7f783970:  0000000000000000  0000000000593e90 
    00007ffd7f783980:  0000000000000000  00007f35642a8f13 
    00007ffd7f783990:  0000000000000005  0000000000000000 
    00007ffd7f7839a0:  2525252525252525  2525252525252525 
    00007ffd7f7839b0:  00000000ff00ff00  0000000000000000 
    00007ffd7f7839c0:  00000000ff000000  0000000000000000 
    00007ffd7f7839d0:  0000000000000000  0000000000000000 
    00007ffd7f7839e0:  2f7273752f3a6e69  73752f3a6e696273 
    00007ffd7f7839f0:  752f3a6e69622f72  6c61636f6c2f7273 
    00007ffd7f783a00:  73752f3a6e69622f  732f6e6962732f72 
    00007ffd7f783a10:  2f3a656369767265  6e69622f70616e73 
    00007ffd7f783a20: <0000000000000000  656c69616620636f 
    00007ffd7f783a30:  0000000000000000  0000000000000000 
    00007ffd7f783a40:  0000000000000000  0000000000000000 
    00007ffd7f783a50:  0000000000000000  0000000000000000 
    00007ffd7f783a60:  0000000000000000  0000000000000000 
    00007ffd7f783a70:  0000000000000000  0000000000000000 
    00007ffd7f783a80:  0000000000000000  0000000000000000 
    00007ffd7f783a90:  0000000000000000  0000000000000000 
    00007ffd7f783aa0:  fffffffe7fffffff  ffffffffffffffff 
    00007ffd7f783ab0:  ffffffffffffffff  ffffffffffffffff 
    00007ffd7f783ac0:  ffffffffffffffff  ffffffffffffffff 
    00007ffd7f783ad0:  ffffffffffffffff  ffffffffffffffff 
    00007ffd7f783ae0:  ffffffffffffffff  ffffffffffffffff 
    00007ffd7f783af0:  ffffffffffffffff  ffffffffffffffff 
    00007ffd7f783b00:  ffffffffffffffff  ffffffffffffffff 
    00007ffd7f783b10:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f3563cc7f47
    stack: frame={sp:0x7ffd7f783a20, fp:0x0} stack=[0x7ffd7ef85260,0x7ffd7f7842a0)
    00007ffd7f783920:  00007f35644b8358  00007ffd7f783a68 
    00007ffd7f783930:  00007f35644b8cf0  00007f35644b8000 
    00007ffd7f783940:  0000000000000000  00007f35642a423f 
    00007ffd7f783950:  0000000000000003  00000000008661c8 
    00007ffd7f783960:  00007ffd7f783e30  00000000009e9540 
    00007ffd7f783970:  0000000000000000  0000000000593e90 
    00007ffd7f783980:  0000000000000000  00007f35642a8f13 
    00007ffd7f783990:  0000000000000005  0000000000000000 
    00007ffd7f7839a0:  2525252525252525  2525252525252525 
    00007ffd7f7839b0:  00000000ff00ff00  0000000000000000 
    00007ffd7f7839c0:  00000000ff000000  0000000000000000 
    00007ffd7f7839d0:  0000000000000000  0000000000000000 
    00007ffd7f7839e0:  2f7273752f3a6e69  73752f3a6e696273 
    00007ffd7f7839f0:  752f3a6e69622f72  6c61636f6c2f7273 
    00007ffd7f783a00:  73752f3a6e69622f  732f6e6962732f72 
    00007ffd7f783a10:  2f3a656369767265  6e69622f70616e73 
    00007ffd7f783a20: <0000000000000000  656c69616620636f 
    00007ffd7f783a30:  0000000000000000  0000000000000000 
    00007ffd7f783a40:  0000000000000000  0000000000000000 
    00007ffd7f783a50:  0000000000000000  0000000000000000 
    00007ffd7f783a60:  0000000000000000  0000000000000000 
    00007ffd7f783a70:  0000000000000000  0000000000000000 
    00007ffd7f783a80:  0000000000000000  0000000000000000 
    00007ffd7f783a90:  0000000000000000  0000000000000000 
    00007ffd7f783aa0:  fffffffe7fffffff  ffffffffffffffff 
    00007ffd7f783ab0:  ffffffffffffffff  ffffffffffffffff 
    00007ffd7f783ac0:  ffffffffffffffff  ffffffffffffffff 
    00007ffd7f783ad0:  ffffffffffffffff  ffffffffffffffff 
    00007ffd7f783ae0:  ffffffffffffffff  ffffffffffffffff 
    00007ffd7f783af0:  ffffffffffffffff  ffffffffffffffff 
    00007ffd7f783b00:  ffffffffffffffff  ffffffffffffffff 
    00007ffd7f783b10:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [runnable, locked to thread]:
    runtime.gcenable()
    	/usr/lib/go-1.13/src/runtime/mgc.go:207 +0xc2
    runtime.main()
    	/usr/lib/go-1.13/src/runtime/proc.go:166 +0x121
    runtime.goexit()
    	/usr/lib/go-1.13/src/runtime/asm_amd64.s:1357 +0x1
    
    rax    0x0
    rbx    0x7f3564075840
    rcx    0x7f3563cc7f47
    rdx    0x0
    rdi    0x2
    rsi    0x7ffd7f783a20
    rbp    0x59f2ca
    rsp    0x7ffd7f783a20
    r8     0x0
    r9     0x7ffd7f783a20
    r10    0x8
    r11    0x246
    r12    0x9e9540
    r13    0x0
    r14    0x593e90
    r15    0x0
    rip    0x7f3563cc7f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    -----
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7fb9c3dbff47 m=3 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7fb9c3dbff47
    stack: frame={sp:0x7fb9c136d830, fp:0x0} stack=[0x7fb9c0b6e288,0x7fb9c136de88)
    00007fb9c136d730:  00007fb9c136daf0  00007fb9c43a875a 
    00007fb9c136d740:  000000000000000b  0000000000000000 
    00007fb9c136d750:  00007fb996ffd700  0000556d21c97148 
    00007fb9c136d760:  00007fb9c136dc40  00007fb9b4003860 
    00007fb9c136d770:  0000000000000000  0000556d21173d10 
    00007fb9c136d780:  0000000000000000  00007fb9c43a0f13 
    00007fb9c136d790:  0000000000000005  0000000000000000 
    00007fb9c136d7a0:  2525252525252525  2525252525252525 
    00007fb9c136d7b0:  00000000000000ff  0000000000000000 
    00007fb9c136d7c0:  00000000000000ff  0000000000000000 
    00007fb9c136d7d0:  000000c0000b1620  000000c0000b1a70 
    00007fb9c136d7e0:  000000c0000b1620  000000c0000b1a70 
    00007fb9c136d7f0:  000000c0001643c0  000000c000164140 
    00007fb9c136d800:  000000c000164280  000000c0000dfea0 
    00007fb9c136d810:  000000c0000dfd60  000000c0000e1540 
    00007fb9c136d820:  20636f6c6c616d00  203a64656c696166 
    00007fb9c136d830: <0000000000000000  0000000000000000 
    00007fb9c136d840:  000000c0001a63c0  000000c00027e7e0 
    00007fb9c136d850:  000000c00027e810  000000c00027e840 
    00007fb9c136d860:  000000c00018fea0  000000c00018fd60 
    00007fb9c136d870:  6f672f62696c2f72  72732f33312e312d 
    00007fb9c136d880:  6d69746e75722f63  6d615f6d73612f65 
    00007fb9c136d890:  33313a732e343664  0a3178302b203735 
    00007fb9c136d8a0:  0000000000000000  0000000000000000 
    00007fb9c136d8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007fb9c136d8c0:  ffffffffffffffff  ffffffffffffffff 
    00007fb9c136d8d0:  ffffffffffffffff  ffffffffffffffff 
    00007fb9c136d8e0:  ffffffffffffffff  ffffffffffffffff 
    00007fb9c136d8f0:  ffffffffffffffff  ffffffffffffffff 
    00007fb9c136d900:  ffffffffffffffff  ffffffffffffffff 
    00007fb9c136d910:  ffffffffffffffff  ffffffffffffffff 
    00007fb9c136d920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7fb9c3dbff47
    stack: frame={sp:0x7fb9c136d830, fp:0x0} stack=[0x7fb9c0b6e288,0x7fb9c136de88)
    00007fb9c136d730:  00007fb9c136daf0  00007fb9c43a875a 
    00007fb9c136d740:  000000000000000b  0000000000000000 
    00007fb9c136d750:  00007fb996ffd700  0000556d21c97148 
    00007fb9c136d760:  00007fb9c136dc40  00007fb9b4003860 
    00007fb9c136d770:  0000000000000000  0000556d21173d10 
    00007fb9c136d780:  0000000000000000  00007fb9c43a0f13 
    00007fb9c136d790:  0000000000000005  0000000000000000 
    00007fb9c136d7a0:  2525252525252525  2525252525252525 
    00007fb9c136d7b0:  00000000000000ff  0000000000000000 
    00007fb9c136d7c0:  00000000000000ff  0000000000000000 
    00007fb9c136d7d0:  000000c0000b1620  000000c0000b1a70 
    00007fb9c136d7e0:  000000c0000b1620  000000c0000b1a70 
    00007fb9c136d7f0:  000000c0001643c0  000000c000164140 
    00007fb9c136d800:  000000c000164280  000000c0000dfea0 
    00007fb9c136d810:  000000c0000dfd60  000000c0000e1540 
    00007fb9c136d820:  20636f6c6c616d00  203a64656c696166 
    00007fb9c136d830: <0000000000000000  0000000000000000 
    00007fb9c136d840:  000000c0001a63c0  000000c00027e7e0 
    00007fb9c136d850:  000000c00027e810  000000c00027e840 
    00007fb9c136d860:  000000c00018fea0  000000c00018fd60 
    00007fb9c136d870:  6f672f62696c2f72  72732f33312e312d 
    00007fb9c136d880:  6d69746e75722f63  6d615f6d73612f65 
    00007fb9c136d890:  33313a732e343664  0a3178302b203735 
    00007fb9c136d8a0:  0000000000000000  0000000000000000 
    00007fb9c136d8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007fb9c136d8c0:  ffffffffffffffff  ffffffffffffffff 
    00007fb9c136d8d0:  ffffffffffffffff  ffffffffffffffff 
    00007fb9c136d8e0:  ffffffffffffffff  ffffffffffffffff 
    00007fb9c136d8f0:  ffffffffffffffff  ffffffffffffffff 
    00007fb9c136d900:  ffffffffffffffff  ffffffffffffffff 
    00007fb9c136d910:  ffffffffffffffff  ffffffffffffffff 
    00007fb9c136d920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [select]:
    github.com/snapcore/snapd/client.(*Client).do(0xc0003701c0, 0x556d20fc7ee7, 0x3, 0x556d20fd1d78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x556d21621f40, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:394 +0x2f9
    github.com/snapcore/snapd/client.(*Client).doSyncWithOpts(0xc0003701c0, 0x556d20fc7ee7, 0x3, 0x556d20fd1d78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x556d215bd9a0, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:492 +0xf6
    github.com/snapcore/snapd/client.(*Client).SysInfo(0xc0003701c0, 0x0, 0x556d21759820, 0xc00044d240)
    	/build/snapd/parts/snapd-deb/build/client/client.go:727 +0xd4
    main.maybeWaitForSecurityProfileRegeneration(0xc0003701c0, 0xc0003ad7c0, 0xd)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:200 +0x1aa
    main.(*cmdRun).Execute(0xc00057feb8, 0xc0000b0160, 0x2, 0x3, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:240 +0x172
    main.main()
    	/build/snapd/parts/snapd-deb/build/cmd/snap/main.go:482 +0x581
    
    goroutine 19 [syscall, 2 minutes]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    rax    0x0
    rbx    0x7fb9c416d840
    rcx    0x7fb9c3dbff47
    rdx    0x0
    rdi    0x2
    rsi    0x7fb9c136d830
    rbp    0x556d2118de7c
    rsp    0x7fb9c136d830
    r8     0x0
    r9     0x7fb9c136d830
    r10    0x8
    r11    0x246
    r12    0x7fb9b4003860
    r13    0x0
    r14    0x556d21173d10
    r15    0x0
    rip    0x7fb9c3dbff47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
