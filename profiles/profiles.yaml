apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f74831a8f47 m=8 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f74831a8f47
    stack: frame={sp:0x7f747df51840, fp:0x0} stack=[0x7f747d752288,0x7f747df51e88)
    00007f747df51740:  00007f747df51b20  00007f7483789f13 
    00007f747df51750:  0000000000000005  000056388ef66148 
    00007f747df51760:  00007f747df51c50  0000563890f623f0 
    00007f747df51770:  0000000000000000  000056388e442d10 
    00007f747df51780:  0000000000000000  00007f7483789f13 
    00007f747df51790:  0000000000000005  0000000000000000 
    00007f747df517a0:  2525252525252525  2525252525252525 
    00007f747df517b0:  00000000000000ff  0000000000000000 
    00007f747df517c0:  00000000000000ff  0000000000000000 
    00007f747df517d0:  00007f7464000010  00007f7464000010 
    00007f747df517e0:  000000000000000e  000000000000000e 
    00007f747df517f0:  0000000000000000  0000000000000000 
    00007f747df51800:  ffffffffffffffff  ffffffffffffffff 
    00007f747df51810:  0000000400000004  0000000400000004 
    00007f747df51820:  20636f6c6c616d00  203a64656c696166 
    00007f747df51830:  0000000000000000  0000000000000000 
    00007f747df51840: <0000000000000000  0000000000000000 
    00007f747df51850:  0000000000000000  0000000000000000 
    00007f747df51860:  0000000000000000  0000000000000000 
    00007f747df51870:  0000000000000000  0000000000000000 
    00007f747df51880:  0000000000000000  0000000000000000 
    00007f747df51890:  0000000000000000  0000000000000000 
    00007f747df518a0:  0000000000000000  0000000000000000 
    00007f747df518b0:  00007f7483556560  00007f7483559bc0 
    00007f747df518c0:  fffffffe7fffffff  ffffffffffffffff 
    00007f747df518d0:  ffffffffffffffff  ffffffffffffffff 
    00007f747df518e0:  ffffffffffffffff  ffffffffffffffff 
    00007f747df518f0:  ffffffffffffffff  ffffffffffffffff 
    00007f747df51900:  ffffffffffffffff  ffffffffffffffff 
    00007f747df51910:  ffffffffffffffff  ffffffffffffffff 
    00007f747df51920:  ffffffffffffffff  ffffffffffffffff 
    00007f747df51930:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f74831a8f47
    stack: frame={sp:0x7f747df51840, fp:0x0} stack=[0x7f747d752288,0x7f747df51e88)
    00007f747df51740:  00007f747df51b20  00007f7483789f13 
    00007f747df51750:  0000000000000005  000056388ef66148 
    00007f747df51760:  00007f747df51c50  0000563890f623f0 
    00007f747df51770:  0000000000000000  000056388e442d10 
    00007f747df51780:  0000000000000000  00007f7483789f13 
    00007f747df51790:  0000000000000005  0000000000000000 
    00007f747df517a0:  2525252525252525  2525252525252525 
    00007f747df517b0:  00000000000000ff  0000000000000000 
    00007f747df517c0:  00000000000000ff  0000000000000000 
    00007f747df517d0:  00007f7464000010  00007f7464000010 
    00007f747df517e0:  000000000000000e  000000000000000e 
    00007f747df517f0:  0000000000000000  0000000000000000 
    00007f747df51800:  ffffffffffffffff  ffffffffffffffff 
    00007f747df51810:  0000000400000004  0000000400000004 
    00007f747df51820:  20636f6c6c616d00  203a64656c696166 
    00007f747df51830:  0000000000000000  0000000000000000 
    00007f747df51840: <0000000000000000  0000000000000000 
    00007f747df51850:  0000000000000000  0000000000000000 
    00007f747df51860:  0000000000000000  0000000000000000 
    00007f747df51870:  0000000000000000  0000000000000000 
    00007f747df51880:  0000000000000000  0000000000000000 
    00007f747df51890:  0000000000000000  0000000000000000 
    00007f747df518a0:  0000000000000000  0000000000000000 
    00007f747df518b0:  00007f7483556560  00007f7483559bc0 
    00007f747df518c0:  fffffffe7fffffff  ffffffffffffffff 
    00007f747df518d0:  ffffffffffffffff  ffffffffffffffff 
    00007f747df518e0:  ffffffffffffffff  ffffffffffffffff 
    00007f747df518f0:  ffffffffffffffff  ffffffffffffffff 
    00007f747df51900:  ffffffffffffffff  ffffffffffffffff 
    00007f747df51910:  ffffffffffffffff  ffffffffffffffff 
    00007f747df51920:  ffffffffffffffff  ffffffffffffffff 
    00007f747df51930:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).operand(0xc00011c500, 0x17, 0x51)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:632 +0xc54
    text/template/parse.(*Tree).command(0xc00011c500, 0x17)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:599 +0xdb
    text/template/parse.(*Tree).pipeline(0xc00011c500, 0x56388e299760, 0x7, 0x56388e2f2491)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:433 +0x5e8
    text/template/parse.(*Tree).action(0xc00011c500, 0xa, 0x4f)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:377 +0x16e
    text/template/parse.(*Tree).textOrAction(0xc00011c500, 0xa, 0x4f)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:345 +0x295
    text/template/parse.(*Tree).itemList(0xc00011c500, 0x56388e2979eb, 0x4, 0xc0001ca3c0)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:327 +0xfb
    text/template/parse.(*Tree).parseControl(0xc00011c500, 0xc00023f700, 0x56388e2979eb, 0x4, 0x0, 0x0, 0xc0001ca3c0, 0x0, 0x0)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:459 +0x102
    text/template/parse.(*Tree).withControl(0xc00011c500, 0x1f, 0x34)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:509 +0x4e
    text/template/parse.(*Tree).action(0xc00011c500, 0xa, 0x30)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:372 +0x55f
    text/template/parse.(*Tree).textOrAction(0xc00011c500, 0x1f, 0x34)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:345 +0x295
    text/template/parse.(*Tree).parse(0xc00011c500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:291 +0x383
    text/template/parse.(*Tree).Parse(0xc00011c500, 0x56388e2f2440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001c4720, 0xc000142350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x56388e2979b7, 0x4, 0x56388e2f2440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000142350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc00003d840, 0x56388e2f2440, 0x16c, 0x4, 0xc0001095e8, 0x56388ef81760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 6 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 7 [runnable]:
    text/template/parse.(*lexer).emit(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:157
    text/template/parse.lexFieldOrVariable(0xc00014a630, 0x8, 0x3)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:499 +0x3be
    text/template/parse.lexField(0xc00014a630, 0x56388ea11870)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:479 +0x36
    text/template/parse.(*lexer).run(0xc00014a630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:230 +0x39
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7f7483556840
    rcx    0x7f74831a8f47
    rdx    0x0
    rdi    0x2
    rsi    0x7f747df51840
    rbp    0x56388e45ce7c
    rsp    0x7f747df51840
    r8     0x0
    r9     0x7f747df51840
    r10    0x8
    r11    0x246
    r12    0x563890f623f0
    r13    0x0
    r14    0x56388e442d10
    r15    0x0
    rip    0x7f74831a8f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000480000)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000480000)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc000046000, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc000099f01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc00008a300)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [syscall, locked to thread]:
    reflect.MakeSlice(0x1d4e220, 0x181c100, 0x0, 0x4, 0x181c100, 0x0, 0x0)
    	/usr/local/go/src/reflect/value.go:2299 +0x85
    encoding/json.(*decodeState).array(0xc000447600, 0x181c100, 0xc0004559c8, 0x197, 0xc000447628, 0x5b)
    	/usr/local/go/src/encoding/json/decode.go:547 +0x716
    encoding/json.(*decodeState).value(0xc000447600, 0x181c100, 0xc0004559c8, 0x197, 0x181c100, 0xc0004559c8)
    	/usr/local/go/src/encoding/json/decode.go:360 +0x105
    encoding/json.(*decodeState).object(0xc000447600, 0x1815520, 0xc0004558c0, 0x16, 0xc000447628, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000447600, 0x1815520, 0xc0004558c0, 0x16, 0xc0003cdbc8, 0x6fa34b)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc000447600, 0x1815520, 0xc0004558c0, 0xc000447628, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000370bd6, 0xc9, 0xb22a, 0x1815520, 0xc0004558c0, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00044f440, 0xc000370bd6, 0xc9, 0xb22a, 0x7f9a43265400, 0xc00044f440)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0004469a0, 0x19ce1a0, 0xc00044f440, 0x199, 0xc0004469c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0004469a0, 0x19ce1a0, 0xc00044f440, 0x199, 0xc000455680, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004469a0, 0x18bc100, 0xc00044ece0, 0x195, 0xc0004469c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004469a0, 0x18bc100, 0xc00044ece0, 0x195, 0x18bc100, 0xc00044ece0)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004469a0, 0x1815520, 0xc00044eb40, 0x16, 0xc0004469c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004469a0, 0x1815520, 0xc00044eb40, 0x16, 0xc0003ce888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0004469a0, 0x1815520, 0xc00044eb40, 0xc0004469c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003707b5, 0x9e1, 0xb64b, 0x1815520, 0xc00044eb40, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00039ed80, 0xc0003707b5, 0x9e1, 0xb64b, 0x7f9a43265400, 0xc00039ed80)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e4a50, 0x19ce1a0, 0xc00039ed80, 0x199, 0xc0000e4a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e4a50, 0x19ce1a0, 0xc00039ed80, 0x199, 0xc00044e900, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e4a50, 0x18e59a0, 0xc000332d08, 0x195, 0xc0000e4a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e4a50, 0x18e59a0, 0xc000332d08, 0x195, 0x18e59a0, 0xc000332d08)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e4a50, 0x1815520, 0xc000332b40, 0x16, 0xc0000e4a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e4a50, 0x1815520, 0xc000332b40, 0x16, 0xc000123548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e4a50, 0x1815520, 0xc000332b40, 0xc0000e4a78, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc00036c000, 0x9d38, 0xfe00, 0x1815520, 0xc000332b40, 0x7f9a434277e8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000332900, 0xc00036c000, 0x9d38, 0xfe00, 0x7f9a43265400, 0xc000332900)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e49a0, 0x1a89300, 0xc000332900, 0x16, 0xc0000e49c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e49a0, 0x1a89300, 0xc000332900, 0x16, 0xc000123c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e49a0, 0x1a89300, 0xc000332900, 0xc0000e49c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc00036c000, 0x9d39, 0xfe00, 0x1a89300, 0xc000332900, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc00031db30, 0xc000123d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc00031da70, 0xc00031da40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 18 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7ff7e8d75f47 m=7 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7ff7e8d75f47
    stack: frame={sp:0x7ff7e4b20830, fp:0x0} stack=[0x7ff7e4321288,0x7ff7e4b20e88)
    00007ff7e4b20730:  00007ff7e4b20af0  00007ff7e935e75a 
    00007ff7e4b20740:  000000000000000b  0000000000000000 
    00007ff7e4b20750:  00007ff7de7bb700  000055f6c6d07148 
    00007ff7e4b20760:  00007ff7e4b20c40  000055f6c861d540 
    00007ff7e4b20770:  0000000000000000  000055f6c61e3d10 
    00007ff7e4b20780:  0000000000000000  00007ff7e9356f13 
    00007ff7e4b20790:  0000000000000005  0000000000000000 
    00007ff7e4b207a0:  2525252525252525  2525252525252525 
    00007ff7e4b207b0:  00000000000000ff  0000000000000000 
    00007ff7e4b207c0:  00000000000000ff  0000000000000000 
    00007ff7e4b207d0:  000000000000ff00  0000000000000000 
    00007ff7e4b207e0:  000055f6c5aca49a <net.unixSocket+314>  000055f6c67e2300 
    00007ff7e4b207f0:  0000000000000000  0000000000000000 
    00007ff7e4b20800:  0000000000000000  0000000000000000 
    00007ff7e4b20810:  0000000000000000  0000000000000000 
    00007ff7e4b20820:  20636f6c6c616d00  203a64656c696166 
    00007ff7e4b20830: <0000000000000000  0000000000000000 
    00007ff7e4b20840:  000000c0003ab7c0  000000c000424160 
    00007ff7e4b20850:  0000000000000000  0000000000000000 
    00007ff7e4b20860:  0000000000000000  0000000000000000 
    00007ff7e4b20870:  0000000000000000  0000000000000000 
    00007ff7e4b20880:  0000000000000000  0000000000000000 
    00007ff7e4b20890:  0000000000000000  0000000000000000 
    00007ff7e4b208a0:  0000000000000000  0000000000000000 
    00007ff7e4b208b0:  fffffffe7fffffff  ffffffffffffffff 
    00007ff7e4b208c0:  ffffffffffffffff  ffffffffffffffff 
    00007ff7e4b208d0:  ffffffffffffffff  ffffffffffffffff 
    00007ff7e4b208e0:  ffffffffffffffff  ffffffffffffffff 
    00007ff7e4b208f0:  ffffffffffffffff  ffffffffffffffff 
    00007ff7e4b20900:  ffffffffffffffff  ffffffffffffffff 
    00007ff7e4b20910:  ffffffffffffffff  ffffffffffffffff 
    00007ff7e4b20920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7ff7e8d75f47
    stack: frame={sp:0x7ff7e4b20830, fp:0x0} stack=[0x7ff7e4321288,0x7ff7e4b20e88)
    00007ff7e4b20730:  00007ff7e4b20af0  00007ff7e935e75a 
    00007ff7e4b20740:  000000000000000b  0000000000000000 
    00007ff7e4b20750:  00007ff7de7bb700  000055f6c6d07148 
    00007ff7e4b20760:  00007ff7e4b20c40  000055f6c861d540 
    00007ff7e4b20770:  0000000000000000  000055f6c61e3d10 
    00007ff7e4b20780:  0000000000000000  00007ff7e9356f13 
    00007ff7e4b20790:  0000000000000005  0000000000000000 
    00007ff7e4b207a0:  2525252525252525  2525252525252525 
    00007ff7e4b207b0:  00000000000000ff  0000000000000000 
    00007ff7e4b207c0:  00000000000000ff  0000000000000000 
    00007ff7e4b207d0:  000000000000ff00  0000000000000000 
    00007ff7e4b207e0:  000055f6c5aca49a <net.unixSocket+314>  000055f6c67e2300 
    00007ff7e4b207f0:  0000000000000000  0000000000000000 
    00007ff7e4b20800:  0000000000000000  0000000000000000 
    00007ff7e4b20810:  0000000000000000  0000000000000000 
    00007ff7e4b20820:  20636f6c6c616d00  203a64656c696166 
    00007ff7e4b20830: <0000000000000000  0000000000000000 
    00007ff7e4b20840:  000000c0003ab7c0  000000c000424160 
    00007ff7e4b20850:  0000000000000000  0000000000000000 
    00007ff7e4b20860:  0000000000000000  0000000000000000 
    00007ff7e4b20870:  0000000000000000  0000000000000000 
    00007ff7e4b20880:  0000000000000000  0000000000000000 
    00007ff7e4b20890:  0000000000000000  0000000000000000 
    00007ff7e4b208a0:  0000000000000000  0000000000000000 
    00007ff7e4b208b0:  fffffffe7fffffff  ffffffffffffffff 
    00007ff7e4b208c0:  ffffffffffffffff  ffffffffffffffff 
    00007ff7e4b208d0:  ffffffffffffffff  ffffffffffffffff 
    00007ff7e4b208e0:  ffffffffffffffff  ffffffffffffffff 
    00007ff7e4b208f0:  ffffffffffffffff  ffffffffffffffff 
    00007ff7e4b20900:  ffffffffffffffff  ffffffffffffffff 
    00007ff7e4b20910:  ffffffffffffffff  ffffffffffffffff 
    00007ff7e4b20920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [runnable]:
    github.com/snapcore/snapd/client.(*Client).do(0xc00036e1c0, 0x55f6c6037ee7, 0x3, 0x55f6c6041d78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x55f6c6691f40, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:394 +0x2f9
    github.com/snapcore/snapd/client.(*Client).doSyncWithOpts(0xc00036e1c0, 0x55f6c6037ee7, 0x3, 0x55f6c6041d78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x55f6c662d9a0, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:492 +0xf6
    github.com/snapcore/snapd/client.(*Client).SysInfo(0xc00036e1c0, 0x46, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/client/client.go:727 +0xd4
    main.maybeWaitForSecurityProfileRegeneration(0xc00036e1c0, 0xc0003ab7c0, 0xd)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:200 +0x1aa
    main.(*cmdRun).Execute(0xc00023feb8, 0xc000032190, 0x2, 0x3, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:240 +0x172
    main.main()
    	/build/snapd/parts/snapd-deb/build/cmd/snap/main.go:482 +0x581
    
    goroutine 6 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    rax    0x0
    rbx    0x7ff7e9123840
    rcx    0x7ff7e8d75f47
    rdx    0x0
    rdi    0x2
    rsi    0x7ff7e4b20830
    rbp    0x55f6c61fde7c
    rsp    0x7ff7e4b20830
    r8     0x0
    r9     0x7ff7e4b20830
    r10    0x8
    r11    0x246
    r12    0x55f6c861d540
    r13    0x0
    r14    0x55f6c61e3d10
    r15    0x0
    rip    0x7ff7e8d75f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
