apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: 
    -----
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f0588283f47 m=0 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f0588283f47
    stack: frame={sp:0x7ffc739baf70, fp:0x0} stack=[0x7ffc731bc500,0x7ffc739bb540)
    00007ffc739bae70:  00007ffc739bb230  00007f058886c75a 
    00007ffc739bae80:  000000000000000b  0000000000000000 
    00007ffc739bae90:  00007f0586033700  00000000008661c8 
    00007ffc739baea0:  00007ffc739bb380  000000000101c2a0 
    00007ffc739baeb0:  0000000000000000  0000000000593e90 
    00007ffc739baec0:  0000000000000000  00007f0588864f13 
    00007ffc739baed0:  0000000000000001  0000000000000000 
    00007ffc739baee0:  2525252525252525  2525252525252525 
    00007ffc739baef0:  00000000ff00ff00  0000000000000000 
    00007ffc739baf00:  00000000ff000000  0000000000000000 
    00007ffc739baf10:  414fffffe0000000  0000000000000000 
    00007ffc739baf20:  2f7273752f3a6e69  73752f3a6e696273 
    00007ffc739baf30:  752f3a6e69622f72  6c61636f6c2f7273 
    00007ffc739baf40:  73752f3a6e69622f  732f6e6962732f72 
    00007ffc739baf50:  2f3a656369767265  6e69622f70616e73 
    00007ffc739baf60:  6c6c616d00732520  656c69616620636f 
    00007ffc739baf70: <0000000000000000  0000000000000000 
    00007ffc739baf80:  0000000000000000  0000000000000000 
    00007ffc739baf90:  0000000000000000  0000000000000000 
    00007ffc739bafa0:  0000000000000000  0000000000000000 
    00007ffc739bafb0:  0000000000000000  0000000000000000 
    00007ffc739bafc0:  0000000000000000  0000000000000000 
    00007ffc739bafd0:  0000000000000000  0000000000000000 
    00007ffc739bafe0:  0000000000000000  0000000000000000 
    00007ffc739baff0:  fffffffe7fffffff  ffffffffffffffff 
    00007ffc739bb000:  ffffffffffffffff  ffffffffffffffff 
    00007ffc739bb010:  ffffffffffffffff  ffffffffffffffff 
    00007ffc739bb020:  ffffffffffffffff  ffffffffffffffff 
    00007ffc739bb030:  ffffffffffffffff  ffffffffffffffff 
    00007ffc739bb040:  ffffffffffffffff  ffffffffffffffff 
    00007ffc739bb050:  ffffffffffffffff  ffffffffffffffff 
    00007ffc739bb060:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f0588283f47
    stack: frame={sp:0x7ffc739baf70, fp:0x0} stack=[0x7ffc731bc500,0x7ffc739bb540)
    00007ffc739bae70:  00007ffc739bb230  00007f058886c75a 
    00007ffc739bae80:  000000000000000b  0000000000000000 
    00007ffc739bae90:  00007f0586033700  00000000008661c8 
    00007ffc739baea0:  00007ffc739bb380  000000000101c2a0 
    00007ffc739baeb0:  0000000000000000  0000000000593e90 
    00007ffc739baec0:  0000000000000000  00007f0588864f13 
    00007ffc739baed0:  0000000000000001  0000000000000000 
    00007ffc739baee0:  2525252525252525  2525252525252525 
    00007ffc739baef0:  00000000ff00ff00  0000000000000000 
    00007ffc739baf00:  00000000ff000000  0000000000000000 
    00007ffc739baf10:  414fffffe0000000  0000000000000000 
    00007ffc739baf20:  2f7273752f3a6e69  73752f3a6e696273 
    00007ffc739baf30:  752f3a6e69622f72  6c61636f6c2f7273 
    00007ffc739baf40:  73752f3a6e69622f  732f6e6962732f72 
    00007ffc739baf50:  2f3a656369767265  6e69622f70616e73 
    00007ffc739baf60:  6c6c616d00732520  656c69616620636f 
    00007ffc739baf70: <0000000000000000  0000000000000000 
    00007ffc739baf80:  0000000000000000  0000000000000000 
    00007ffc739baf90:  0000000000000000  0000000000000000 
    00007ffc739bafa0:  0000000000000000  0000000000000000 
    00007ffc739bafb0:  0000000000000000  0000000000000000 
    00007ffc739bafc0:  0000000000000000  0000000000000000 
    00007ffc739bafd0:  0000000000000000  0000000000000000 
    00007ffc739bafe0:  0000000000000000  0000000000000000 
    00007ffc739baff0:  fffffffe7fffffff  ffffffffffffffff 
    00007ffc739bb000:  ffffffffffffffff  ffffffffffffffff 
    00007ffc739bb010:  ffffffffffffffff  ffffffffffffffff 
    00007ffc739bb020:  ffffffffffffffff  ffffffffffffffff 
    00007ffc739bb030:  ffffffffffffffff  ffffffffffffffff 
    00007ffc739bb040:  ffffffffffffffff  ffffffffffffffff 
    00007ffc739bb050:  ffffffffffffffff  ffffffffffffffff 
    00007ffc739bb060:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [running]:
    runtime.systemstack_switch()
    	/usr/lib/go-1.13/src/runtime/asm_amd64.s:330 fp=0xc00003c760 sp=0xc00003c758 pc=0x456b50
    runtime.main()
    	/usr/lib/go-1.13/src/runtime/proc.go:133 +0x63 fp=0xc00003c7e0 sp=0xc00003c760 pc=0x4303d3
    runtime.goexit()
    	/usr/lib/go-1.13/src/runtime/asm_amd64.s:1357 +0x1 fp=0xc00003c7e8 sp=0xc00003c7e0 pc=0x458c21
    
    rax    0x0
    rbx    0x7f0588631840
    rcx    0x7f0588283f47
    rdx    0x0
    rdi    0x2
    rsi    0x7ffc739baf70
    rbp    0x59f2ca
    rsp    0x7ffc739baf70
    r8     0x0
    r9     0x7ffc739baf70
    r10    0x8
    r11    0x246
    r12    0x101c2a0
    r13    0x0
    r14    0x593e90
    r15    0x0
    rip    0x7f0588283f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    -----
    Error: bad file '-': yaml: line 11: mapping values are not allowed in this context
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 7 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000188400)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000188400)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc000050000, 0x6)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc000095f01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc000102180)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [runnable, locked to thread]:
    encoding/json.checkValid(0xc00046c74b, 0x38, 0xb6b5, 0xc000110028, 0x1926940, 0xc0000c1e01)
    	/usr/local/go/src/encoding/json/scanner.go:30 +0x145
    encoding/json.Unmarshal(0xc00046c74b, 0x38, 0xb6b5, 0x1815520, 0xc00054e000, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:101 +0x66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000536d80, 0xc00046c74b, 0x38, 0xb6b5, 0x7f4ef0711540, 0xc000536d80)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0005322c0, 0x19ce1a0, 0xc000536d80, 0x199, 0xc0005322e8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0005322c0, 0x19ce1a0, 0xc000536d80, 0x199, 0xc000549d40, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0005322c0, 0x18bc100, 0xc000536620, 0x195, 0xc0005322e8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0005322c0, 0x18bc100, 0xc000536620, 0x195, 0x18bc100, 0xc000536620)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0005322c0, 0x1815520, 0xc000536480, 0x16, 0xc0005322e8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0005322c0, 0x1815520, 0xc000536480, 0x16, 0xc0004ce888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0005322c0, 0x1815520, 0xc000536480, 0xc0005322e8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc00046bdc7, 0x9ca, 0xc039, 0x1815520, 0xc000536480, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00049ed80, 0xc00046bdc7, 0x9ca, 0xc039, 0x7f4ef0711540, 0xc00049ed80)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e49a0, 0x19ce1a0, 0xc00049ed80, 0x199, 0xc0000e49c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e49a0, 0x19ce1a0, 0xc00049ed80, 0x199, 0xc000536240, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e49a0, 0x18e59a0, 0xc000432d08, 0x195, 0xc0000e49c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e49a0, 0x18e59a0, 0xc000432d08, 0x195, 0x18e59a0, 0xc000432d08)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e49a0, 0x1815520, 0xc000432b40, 0x16, 0xc0000e49c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e49a0, 0x1815520, 0xc000432b40, 0x16, 0xc000223548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e49a0, 0x1815520, 0xc000432b40, 0xc0000e49c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000468000, 0x9d38, 0xfe00, 0x1815520, 0xc000432b40, 0x7f4ef0913e90, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000432900, 0xc000468000, 0x9d38, 0xfe00, 0x7f4ef0711540, 0xc000432900)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e48f0, 0x1a89300, 0xc000432900, 0x16, 0xc0000e4918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e48f0, 0x1a89300, 0xc000432900, 0x16, 0xc000223c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e48f0, 0x1a89300, 0xc000432900, 0xc0000e4918, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000468000, 0x9d39, 0xfe00, 0x1a89300, 0xc000432900, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc00041db30, 0xc000223d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc00041da70, 0xc00041da40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 18 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
