apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7fe4ae06ff47 m=9 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7fe4ae06ff47
    stack: frame={sp:0x7fe4a37fd840, fp:0x0} stack=[0x7fe4a2ffe288,0x7fe4a37fde88)
    00007fe4a37fd740:  00007fe4a37fdb20  00007fe4ae650f13 
    00007fe4a37fd750:  0000000000000005  0000555c0261a148 
    00007fe4a37fd760:  00007fe4a37fdc50  00007fe49c000c50 
    00007fe4a37fd770:  0000000000000000  0000555c01af6d10 
    00007fe4a37fd780:  0000000000000000  00007fe4ae650f13 
    00007fe4a37fd790:  0000000000000005  0000000000000000 
    00007fe4a37fd7a0:  2525252525252525  2525252525252525 
    00007fe4a37fd7b0:  00000000000000ff  0000000000000000 
    00007fe4a37fd7c0:  00000000000000ff  0000000000000000 
    00007fe4a37fd7d0:  00007fe484000010  00007fe484000010 
    00007fe4a37fd7e0:  000000000000000e  000000000000000e 
    00007fe4a37fd7f0:  0000000000000000  0000000000000000 
    00007fe4a37fd800:  ffffffffffffffff  ffffffffffffffff 
    00007fe4a37fd810:  0000000400000004  0000000400000004 
    00007fe4a37fd820:  20636f6c6c616d00  203a64656c696166 
    00007fe4a37fd830:  0000000000000000  0000000000000000 
    00007fe4a37fd840: <0000000000000000  0000000000000000 
    00007fe4a37fd850:  0000000000000000  0000000000000000 
    00007fe4a37fd860:  0000000000000000  0000000000000000 
    00007fe4a37fd870:  0000000000000000  0000000000000000 
    00007fe4a37fd880:  0000000000000000  0000000000000000 
    00007fe4a37fd890:  0000000000000000  0000000000000000 
    00007fe4a37fd8a0:  0000000000000000  0000000000000000 
    00007fe4a37fd8b0:  00007fe4ae41d560  00007fe4ae420bc0 
    00007fe4a37fd8c0:  fffffffe7fffffff  ffffffffffffffff 
    00007fe4a37fd8d0:  ffffffffffffffff  ffffffffffffffff 
    00007fe4a37fd8e0:  ffffffffffffffff  ffffffffffffffff 
    00007fe4a37fd8f0:  ffffffffffffffff  ffffffffffffffff 
    00007fe4a37fd900:  ffffffffffffffff  ffffffffffffffff 
    00007fe4a37fd910:  ffffffffffffffff  ffffffffffffffff 
    00007fe4a37fd920:  ffffffffffffffff  ffffffffffffffff 
    00007fe4a37fd930:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7fe4ae06ff47
    stack: frame={sp:0x7fe4a37fd840, fp:0x0} stack=[0x7fe4a2ffe288,0x7fe4a37fde88)
    00007fe4a37fd740:  00007fe4a37fdb20  00007fe4ae650f13 
    00007fe4a37fd750:  0000000000000005  0000555c0261a148 
    00007fe4a37fd760:  00007fe4a37fdc50  00007fe49c000c50 
    00007fe4a37fd770:  0000000000000000  0000555c01af6d10 
    00007fe4a37fd780:  0000000000000000  00007fe4ae650f13 
    00007fe4a37fd790:  0000000000000005  0000000000000000 
    00007fe4a37fd7a0:  2525252525252525  2525252525252525 
    00007fe4a37fd7b0:  00000000000000ff  0000000000000000 
    00007fe4a37fd7c0:  00000000000000ff  0000000000000000 
    00007fe4a37fd7d0:  00007fe484000010  00007fe484000010 
    00007fe4a37fd7e0:  000000000000000e  000000000000000e 
    00007fe4a37fd7f0:  0000000000000000  0000000000000000 
    00007fe4a37fd800:  ffffffffffffffff  ffffffffffffffff 
    00007fe4a37fd810:  0000000400000004  0000000400000004 
    00007fe4a37fd820:  20636f6c6c616d00  203a64656c696166 
    00007fe4a37fd830:  0000000000000000  0000000000000000 
    00007fe4a37fd840: <0000000000000000  0000000000000000 
    00007fe4a37fd850:  0000000000000000  0000000000000000 
    00007fe4a37fd860:  0000000000000000  0000000000000000 
    00007fe4a37fd870:  0000000000000000  0000000000000000 
    00007fe4a37fd880:  0000000000000000  0000000000000000 
    00007fe4a37fd890:  0000000000000000  0000000000000000 
    00007fe4a37fd8a0:  0000000000000000  0000000000000000 
    00007fe4a37fd8b0:  00007fe4ae41d560  00007fe4ae420bc0 
    00007fe4a37fd8c0:  fffffffe7fffffff  ffffffffffffffff 
    00007fe4a37fd8d0:  ffffffffffffffff  ffffffffffffffff 
    00007fe4a37fd8e0:  ffffffffffffffff  ffffffffffffffff 
    00007fe4a37fd8f0:  ffffffffffffffff  ffffffffffffffff 
    00007fe4a37fd900:  ffffffffffffffff  ffffffffffffffff 
    00007fe4a37fd910:  ffffffffffffffff  ffffffffffffffff 
    00007fe4a37fd920:  ffffffffffffffff  ffffffffffffffff 
    00007fe4a37fd930:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [runnable]:
    github.com/snapcore/snapd/client.(*Client).do(0xc0003521c0, 0x555c0194aee7, 0x3, 0x555c01954d78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x555c01fa4f40, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:394 +0x2f9
    github.com/snapcore/snapd/client.(*Client).doSyncWithOpts(0xc0003521c0, 0x555c0194aee7, 0x3, 0x555c01954d78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x555c01f409a0, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:492 +0xf6
    github.com/snapcore/snapd/client.(*Client).SysInfo(0xc0003521c0, 0x46, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/client/client.go:727 +0xd4
    main.maybeWaitForSecurityProfileRegeneration(0xc0003521c0, 0xc0003837c0, 0xd)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:200 +0x1aa
    main.(*cmdRun).Execute(0xc000251eb8, 0xc0000a8160, 0x2, 0x3, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:240 +0x172
    main.main()
    	/build/snapd/parts/snapd-deb/build/cmd/snap/main.go:482 +0x581
    
    goroutine 19 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    rax    0x0
    rbx    0x7fe4ae41d840
    rcx    0x7fe4ae06ff47
    rdx    0x0
    rdi    0x2
    rsi    0x7fe4a37fd840
    rbp    0x555c01b10e7c
    rsp    0x7fe4a37fd840
    r8     0x0
    r9     0x7fe4a37fd840
    r10    0x8
    r11    0x246
    r12    0x7fe49c000c50
    r13    0x0
    r14    0x555c01af6d10
    r15    0x0
    rip    0x7fe4ae06ff47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    runtime: failed to create new OS thread (have 7 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000108000)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000108000)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc00004d800, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc000073f01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc0004d2900)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [runnable, locked to thread]:
    reflect.Value.Set(0x19ce1a0, 0xc00041e6c0, 0x199, 0x19ce1a0, 0xc0004d0240, 0x99)
    	/usr/local/go/src/reflect/value.go:1557 +0x139
    encoding/json.(*decodeState).object(0xc0000e6a50, 0x18e59a0, 0xc0003cc648, 0x195, 0xc0000e6a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:691 +0x49d
    encoding/json.(*decodeState).value(0xc0000e6a50, 0x18e59a0, 0xc0003cc648, 0x195, 0x18e59a0, 0xc0003cc648)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e6a50, 0x1815520, 0xc0003cc480, 0x16, 0xc0000e6a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e6a50, 0x1815520, 0xc0003cc480, 0x16, 0xc0001a3548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e6a50, 0x1815520, 0xc0003cc480, 0xc0000e6a78, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003e8000, 0x9d38, 0xfe00, 0x1815520, 0xc0003cc480, 0x2aa0130, 0x7f752f993540)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0003cc240, 0xc0003e8000, 0x9d38, 0xfe00, 0x7f752f9936c0, 0xc0003cc240)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e69a0, 0x1a89300, 0xc0003cc240, 0x16, 0xc0000e69c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e69a0, 0x1a89300, 0xc0003cc240, 0x16, 0xc0001a3c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e69a0, 0x1a89300, 0xc0003cc240, 0xc0000e69c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003e8000, 0x9d39, 0xfe00, 0x1a89300, 0xc0003cc240, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc00039bb30, 0xc0001a3d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc00039ba70, 0xc00039ba40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 20 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc0004e4000)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc0004e4000)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x0, 0xc000048800, 0x6)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0xc000048800, 0x2a6cc00)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.handoffp(0xc000048800)
    	/usr/local/go/src/runtime/proc.go:2001 +0x52
    runtime.stoplockedm()
    	/usr/local/go/src/runtime/proc.go:2075 +0xf7
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2611 +0x48c
    runtime.goschedImpl(0xc000000180)
    	/usr/local/go/src/runtime/proc.go:2860 +0xda
    runtime.gopreempt_m(0xc000000180)
    	/usr/local/go/src/runtime/proc.go:2888 +0x34
    runtime.newstack()
    	/usr/local/go/src/runtime/stack.go:1047 +0x1bc
    runtime.morestack()
    	/usr/local/go/src/runtime/asm_amd64.s:449 +0x8f
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f86dd741f47 m=0 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f86dd741f47
    stack: frame={sp:0x7ffc0441f260, fp:0x0} stack=[0x7ffc03c208b0,0x7ffc0441f8f0)
    00007ffc0441f160:  00000000001ec4ef  00000000001ec4ef 
    00007ffc0441f170:  0000012500000002  00000000001ec4ef 
    00007ffc0441f180:  00007ffc0441f228  00005655355eacaa <runtime.pcvalue+346> 
    00007ffc0441f190:  00005655365a69e7  0000565536a2a148 
    00007ffc0441f1a0:  00007ffc0441f670  000056553784afc0 
    00007ffc0441f1b0:  0000000000000000  0000565535f06d10 
    00007ffc0441f1c0:  0000000000000000  00007f86ddd22f13 
    00007ffc0441f1d0:  0000000000000005  0000000000000000 
    00007ffc0441f1e0:  2525252525252525  2525252525252525 
    00007ffc0441f1f0:  00000000000000ff  0000000000000000 
    00007ffc0441f200:  00000000000000ff  0000000000000000 
    00007ffc0441f210:  0000000000000000  0000000000000000 
    00007ffc0441f220:  00005655357ed49a <net.unixSocket+314>  0000565536505300 
    00007ffc0441f230:  0000000000000000  00005655364f7cc0 
    00007ffc0441f240:  000000c0003e41e0  000000c0003e41f0 
    00007ffc0441f250:  00005655355d6228 <runtime.goexit1+56>  00005655364d54d8 
    00007ffc0441f260: <0000000000000000  203a64656c696166 
    00007ffc0441f270:  0000000000000000  0000000000000000 
    00007ffc0441f280:  000000c0003bf7c0  000000c000450630 
    00007ffc0441f290:  0000000000000000  0000000000000000 
    00007ffc0441f2a0:  0000000000000000  0000000000000000 
    00007ffc0441f2b0:  000000c00016e180  000000c000091080 
    00007ffc0441f2c0:  000000c000091200  000000c000091380 
    00007ffc0441f2d0:  000000c00016e300  000000c00016e900 
    00007ffc0441f2e0:  fffffffe7fffffff  ffffffffffffffff 
    00007ffc0441f2f0:  ffffffffffffffff  ffffffffffffffff 
    00007ffc0441f300:  ffffffffffffffff  ffffffffffffffff 
    00007ffc0441f310:  ffffffffffffffff  ffffffffffffffff 
    00007ffc0441f320:  ffffffffffffffff  ffffffffffffffff 
    00007ffc0441f330:  ffffffffffffffff  ffffffffffffffff 
    00007ffc0441f340:  ffffffffffffffff  ffffffffffffffff 
    00007ffc0441f350:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f86dd741f47
    stack: frame={sp:0x7ffc0441f260, fp:0x0} stack=[0x7ffc03c208b0,0x7ffc0441f8f0)
    00007ffc0441f160:  00000000001ec4ef  00000000001ec4ef 
    00007ffc0441f170:  0000012500000002  00000000001ec4ef 
    00007ffc0441f180:  00007ffc0441f228  00005655355eacaa <runtime.pcvalue+346> 
    00007ffc0441f190:  00005655365a69e7  0000565536a2a148 
    00007ffc0441f1a0:  00007ffc0441f670  000056553784afc0 
    00007ffc0441f1b0:  0000000000000000  0000565535f06d10 
    00007ffc0441f1c0:  0000000000000000  00007f86ddd22f13 
    00007ffc0441f1d0:  0000000000000005  0000000000000000 
    00007ffc0441f1e0:  2525252525252525  2525252525252525 
    00007ffc0441f1f0:  00000000000000ff  0000000000000000 
    00007ffc0441f200:  00000000000000ff  0000000000000000 
    00007ffc0441f210:  0000000000000000  0000000000000000 
    00007ffc0441f220:  00005655357ed49a <net.unixSocket+314>  0000565536505300 
    00007ffc0441f230:  0000000000000000  00005655364f7cc0 
    00007ffc0441f240:  000000c0003e41e0  000000c0003e41f0 
    00007ffc0441f250:  00005655355d6228 <runtime.goexit1+56>  00005655364d54d8 
    00007ffc0441f260: <0000000000000000  203a64656c696166 
    00007ffc0441f270:  0000000000000000  0000000000000000 
    00007ffc0441f280:  000000c0003bf7c0  000000c000450630 
    00007ffc0441f290:  0000000000000000  0000000000000000 
    00007ffc0441f2a0:  0000000000000000  0000000000000000 
    00007ffc0441f2b0:  000000c00016e180  000000c000091080 
    00007ffc0441f2c0:  000000c000091200  000000c000091380 
    00007ffc0441f2d0:  000000c00016e300  000000c00016e900 
    00007ffc0441f2e0:  fffffffe7fffffff  ffffffffffffffff 
    00007ffc0441f2f0:  ffffffffffffffff  ffffffffffffffff 
    00007ffc0441f300:  ffffffffffffffff  ffffffffffffffff 
    00007ffc0441f310:  ffffffffffffffff  ffffffffffffffff 
    00007ffc0441f320:  ffffffffffffffff  ffffffffffffffff 
    00007ffc0441f330:  ffffffffffffffff  ffffffffffffffff 
    00007ffc0441f340:  ffffffffffffffff  ffffffffffffffff 
    00007ffc0441f350:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [select]:
    github.com/snapcore/snapd/client.(*Client).do(0xc0003801c0, 0x565535d5aee7, 0x3, 0x565535d64d78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x5655363b4f40, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:394 +0x2f9
    github.com/snapcore/snapd/client.(*Client).doSyncWithOpts(0xc0003801c0, 0x565535d5aee7, 0x3, 0x565535d64d78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x5655363509a0, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:492 +0xf6
    github.com/snapcore/snapd/client.(*Client).SysInfo(0xc0003801c0, 0x0, 0x5655364ec820, 0xc0003fee60)
    	/build/snapd/parts/snapd-deb/build/client/client.go:727 +0xd4
    main.maybeWaitForSecurityProfileRegeneration(0xc0003801c0, 0xc0003bf7c0, 0xd)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:200 +0x1aa
    main.(*cmdRun).Execute(0xc00055feb8, 0xc000032190, 0x2, 0x3, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:240 +0x172
    main.main()
    	/build/snapd/parts/snapd-deb/build/cmd/snap/main.go:482 +0x581
    
    goroutine 6 [syscall, 2 minutes]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    rax    0x0
    rbx    0x7f86ddaef840
    rcx    0x7f86dd741f47
    rdx    0x0
    rdi    0x2
    rsi    0x7ffc0441f260
    rbp    0x565535f20e7c
    rsp    0x7ffc0441f260
    r8     0x0
    r9     0x7ffc0441f260
    r10    0x8
    r11    0x246
    r12    0x56553784afc0
    r13    0x0
    r14    0x565535f06d10
    r15    0x0
    rip    0x7f86dd741f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
