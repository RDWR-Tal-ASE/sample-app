apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f265e6c2f47 m=5 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f265e6c2f47
    stack: frame={sp:0x7f265b46f830, fp:0x0} stack=[0x7f265ac70288,0x7f265b46fe88)
    00007f265b46f730:  00007f265b46faf0  00007f265ecab75a 
    00007f265b46f740:  000000000000000b  0000000000000000 
    00007f265b46f750:  00007f265a30e700  0000560bbf9ca148 
    00007f265b46f760:  00007f265b46fc40  0000560bc04123f0 
    00007f265b46f770:  0000000000000000  0000560bbeea6d10 
    00007f265b46f780:  0000000000000000  00007f265eca3f13 
    00007f265b46f790:  0000000000000005  0000000000000000 
    00007f265b46f7a0:  2525252525252525  2525252525252525 
    00007f265b46f7b0:  00000000000000ff  0000000000000000 
    00007f265b46f7c0:  00000000000000ff  0000000000000000 
    00007f265b46f7d0:  00007f2648000010  00007f2648000010 
    00007f265b46f7e0:  000000000000000e  000000000000000e 
    00007f265b46f7f0:  0000000000000000  0000000000000000 
    00007f265b46f800:  ffffffffffffffff  ffffffffffffffff 
    00007f265b46f810:  0000000400000004  0000000400000004 
    00007f265b46f820:  20636f6c6c616d00  203a64656c696166 
    00007f265b46f830: <0000000000000000  0000000000000000 
    00007f265b46f840:  0000000000000000  0000000000000000 
    00007f265b46f850:  0000000000000000  0000000000000000 
    00007f265b46f860:  0000000000000000  0000000000000000 
    00007f265b46f870:  0000000000000000  0000000000000000 
    00007f265b46f880:  0000000000000000  0000000000000000 
    00007f265b46f890:  0000000000000000  0000000000000000 
    00007f265b46f8a0:  0000000000000000  0000000000000000 
    00007f265b46f8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f265b46f8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f265b46f8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f265b46f8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f265b46f8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f265b46f900:  ffffffffffffffff  ffffffffffffffff 
    00007f265b46f910:  ffffffffffffffff  ffffffffffffffff 
    00007f265b46f920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f265e6c2f47
    stack: frame={sp:0x7f265b46f830, fp:0x0} stack=[0x7f265ac70288,0x7f265b46fe88)
    00007f265b46f730:  00007f265b46faf0  00007f265ecab75a 
    00007f265b46f740:  000000000000000b  0000000000000000 
    00007f265b46f750:  00007f265a30e700  0000560bbf9ca148 
    00007f265b46f760:  00007f265b46fc40  0000560bc04123f0 
    00007f265b46f770:  0000000000000000  0000560bbeea6d10 
    00007f265b46f780:  0000000000000000  00007f265eca3f13 
    00007f265b46f790:  0000000000000005  0000000000000000 
    00007f265b46f7a0:  2525252525252525  2525252525252525 
    00007f265b46f7b0:  00000000000000ff  0000000000000000 
    00007f265b46f7c0:  00000000000000ff  0000000000000000 
    00007f265b46f7d0:  00007f2648000010  00007f2648000010 
    00007f265b46f7e0:  000000000000000e  000000000000000e 
    00007f265b46f7f0:  0000000000000000  0000000000000000 
    00007f265b46f800:  ffffffffffffffff  ffffffffffffffff 
    00007f265b46f810:  0000000400000004  0000000400000004 
    00007f265b46f820:  20636f6c6c616d00  203a64656c696166 
    00007f265b46f830: <0000000000000000  0000000000000000 
    00007f265b46f840:  0000000000000000  0000000000000000 
    00007f265b46f850:  0000000000000000  0000000000000000 
    00007f265b46f860:  0000000000000000  0000000000000000 
    00007f265b46f870:  0000000000000000  0000000000000000 
    00007f265b46f880:  0000000000000000  0000000000000000 
    00007f265b46f890:  0000000000000000  0000000000000000 
    00007f265b46f8a0:  0000000000000000  0000000000000000 
    00007f265b46f8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f265b46f8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f265b46f8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f265b46f8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f265b46f8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f265b46f900:  ffffffffffffffff  ffffffffffffffff 
    00007f265b46f910:  ffffffffffffffff  ffffffffffffffff 
    00007f265b46f920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).parse(0xc00012c500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:277 +0xbc6
    text/template/parse.(*Tree).Parse(0xc00012c500, 0x560bbed56440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001d66f0, 0xc000152340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x560bbecfb9b7, 0x4, 0x560bbed56440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000152340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc0000cd780, 0x560bbed56440, 0x16c, 0x4, 0xc0001195e8, 0x560bbf9e5760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 19 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 20 [runnable]:
    text/template/parse.(*lexer).run(0xc00015a630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:228
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7f265ea70840
    rcx    0x7f265e6c2f47
    rdx    0x0
    rdi    0x2
    rsi    0x7f265b46f830
    rbp    0x560bbeec0e7c
    rsp    0x7f265b46f830
    r8     0x0
    r9     0x7f265b46f830
    r10    0x8
    r11    0x246
    r12    0x560bc04123f0
    r13    0x0
    r14    0x560bbeea6d10
    r15    0x0
    rip    0x7f265e6c2f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000108000)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000108000)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc000046000, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc00006df01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc00008a300)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [syscall, locked to thread]:
    net/url.parse(0xc000469a00, 0x0, 0x100, 0xc000469a00, 0x0, 0xc000469a01)
    	/usr/local/go/src/net/url/url.go:519 +0x85
    net/url.Parse(0xc000469a00, 0x18, 0x0, 0x38, 0x0)
    	/usr/local/go/src/net/url/url.go:478 +0x85
    k8s.io/kubernetes/vendor/github.com/go-openapi/jsonreference.(*Ref).parse(0xc00044dbc8, 0xc000469a00, 0x18, 0x4, 0xc0004b5a68)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/jsonreference/reference.go:112 +0x39
    k8s.io/kubernetes/vendor/github.com/go-openapi/jsonreference.New(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/jsonreference/reference.go:45
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Ref).fromMap(0xc00044dd48, 0xc0004a1260, 0xb6b5, 0x1811e60)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/ref.go:182 +0xe8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0004b6d80, 0xc0003ee74b, 0x38, 0xb6b5, 0x7f483d4e47c0, 0xc0004b6d80)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:569 +0x1bc
    encoding/json.(*decodeState).object(0xc0004b2210, 0x19ce1a0, 0xc0004b6d80, 0x199, 0xc0004b2238, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0004b2210, 0x19ce1a0, 0xc0004b6d80, 0x199, 0xc0004c9d40, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004b2210, 0x18bc100, 0xc0004b6620, 0x195, 0xc0004b2238, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004b2210, 0x18bc100, 0xc0004b6620, 0x195, 0x18bc100, 0xc0004b6620)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004b2210, 0x1815520, 0xc0004b6480, 0x16, 0xc0004b2238, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004b2210, 0x1815520, 0xc0004b6480, 0x16, 0xc00044e888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0004b2210, 0x1815520, 0xc0004b6480, 0xc0004b2238, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003eddc7, 0x9ca, 0xc039, 0x1815520, 0xc0004b6480, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00041ed80, 0xc0003eddc7, 0x9ca, 0xc039, 0x7f483d4e47c0, 0xc00041ed80)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e48f0, 0x19ce1a0, 0xc00041ed80, 0x199, 0xc0000e4918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e48f0, 0x19ce1a0, 0xc00041ed80, 0x199, 0xc0004b6240, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e48f0, 0x18e59a0, 0xc0003b0d08, 0x195, 0xc0000e4918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e48f0, 0x18e59a0, 0xc0003b0d08, 0x195, 0x18e59a0, 0xc0003b0d08)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e48f0, 0x1815520, 0xc0003b0b40, 0x16, 0xc0000e4918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e48f0, 0x1815520, 0xc0003b0b40, 0x16, 0xc0001a3548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e48f0, 0x1815520, 0xc0003b0b40, 0xc0000e4918, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003ea000, 0x9d38, 0xfe00, 0x1815520, 0xc0003b0b40, 0x7f483d4da628, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0003b0900, 0xc0003ea000, 0x9d38, 0xfe00, 0x7f483d4e47c0, 0xc0003b0900)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e4840, 0x1a89300, 0xc0003b0900, 0x16, 0xc0000e4868, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e4840, 0x1a89300, 0xc0003b0900, 0x16, 0xc0001a3c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e4840, 0x1a89300, 0xc0003b0900, 0xc0000e4868, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003ea000, 0x9d39, 0xfe00, 0x1a89300, 0xc0003b0900, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc00039bb30, 0xc0001a3d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc00039ba70, 0xc00039ba40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 18 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f091718ef47 m=4 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f091718ef47
    stack: frame={sp:0x7f0913f3b830, fp:0x0} stack=[0x7f091373c288,0x7f0913f3be88)
    00007f0913f3b730:  00007f0913f3baf0  00007f091777775a 
    00007f0913f3b740:  000000000000000b  0000000000000000 
    00007f0913f3b750:  00007f09125d9700  000055d08f208148 
    00007f0913f3b760:  00007f0913f3bc40  000055d08f8b4540 
    00007f0913f3b770:  0000000000000000  000055d08e6e4d10 
    00007f0913f3b780:  0000000000000000  00007f091776ff13 
    00007f0913f3b790:  0000000000000005  0000000000000000 
    00007f0913f3b7a0:  2525252525252525  2525252525252525 
    00007f0913f3b7b0:  00000000000000ff  0000000000000000 
    00007f0913f3b7c0:  00000000000000ff  0000000000000000 
    00007f0913f3b7d0:  00007f08fc000010  00007f08fc000010 
    00007f0913f3b7e0:  000000000000000e  000000000000000e 
    00007f0913f3b7f0:  0000000000000000  0000000000000000 
    00007f0913f3b800:  ffffffffffffffff  ffffffffffffffff 
    00007f0913f3b810:  0000000400000004  0000000400000004 
    00007f0913f3b820:  20636f6c6c616d00  203a64656c696166 
    00007f0913f3b830: <0000000000000000  0000000000000000 
    00007f0913f3b840:  0000000000000000  0000000000000000 
    00007f0913f3b850:  0000000000000000  0000000000000000 
    00007f0913f3b860:  0000000000000000  0000000000000000 
    00007f0913f3b870:  0000000000000000  0000000000000000 
    00007f0913f3b880:  0000000000000000  0000000000000000 
    00007f0913f3b890:  0000000000000000  0000000000000000 
    00007f0913f3b8a0:  0000000000000000  0000000000000000 
    00007f0913f3b8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f0913f3b8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f0913f3b8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f0913f3b8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f0913f3b8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f0913f3b900:  ffffffffffffffff  ffffffffffffffff 
    00007f0913f3b910:  ffffffffffffffff  ffffffffffffffff 
    00007f0913f3b920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f091718ef47
    stack: frame={sp:0x7f0913f3b830, fp:0x0} stack=[0x7f091373c288,0x7f0913f3be88)
    00007f0913f3b730:  00007f0913f3baf0  00007f091777775a 
    00007f0913f3b740:  000000000000000b  0000000000000000 
    00007f0913f3b750:  00007f09125d9700  000055d08f208148 
    00007f0913f3b760:  00007f0913f3bc40  000055d08f8b4540 
    00007f0913f3b770:  0000000000000000  000055d08e6e4d10 
    00007f0913f3b780:  0000000000000000  00007f091776ff13 
    00007f0913f3b790:  0000000000000005  0000000000000000 
    00007f0913f3b7a0:  2525252525252525  2525252525252525 
    00007f0913f3b7b0:  00000000000000ff  0000000000000000 
    00007f0913f3b7c0:  00000000000000ff  0000000000000000 
    00007f0913f3b7d0:  00007f08fc000010  00007f08fc000010 
    00007f0913f3b7e0:  000000000000000e  000000000000000e 
    00007f0913f3b7f0:  0000000000000000  0000000000000000 
    00007f0913f3b800:  ffffffffffffffff  ffffffffffffffff 
    00007f0913f3b810:  0000000400000004  0000000400000004 
    00007f0913f3b820:  20636f6c6c616d00  203a64656c696166 
    00007f0913f3b830: <0000000000000000  0000000000000000 
    00007f0913f3b840:  0000000000000000  0000000000000000 
    00007f0913f3b850:  0000000000000000  0000000000000000 
    00007f0913f3b860:  0000000000000000  0000000000000000 
    00007f0913f3b870:  0000000000000000  0000000000000000 
    00007f0913f3b880:  0000000000000000  0000000000000000 
    00007f0913f3b890:  0000000000000000  0000000000000000 
    00007f0913f3b8a0:  0000000000000000  0000000000000000 
    00007f0913f3b8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f0913f3b8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f0913f3b8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f0913f3b8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f0913f3b8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f0913f3b900:  ffffffffffffffff  ffffffffffffffff 
    00007f0913f3b910:  ffffffffffffffff  ffffffffffffffff 
    00007f0913f3b920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).parse(0xc000130500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:277 +0xbc6
    text/template/parse.(*Tree).Parse(0xc000130500, 0x55d08e594440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001d86f0, 0xc000154340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x55d08e5399b7, 0x4, 0x55d08e594440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000154340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc0000cf780, 0x55d08e594440, 0x16c, 0x4, 0xc00011d708, 0x55d08f223760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 19 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 20 [runnable]:
    text/template/parse.(*lexer).run(0xc00015c630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:228
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7f091753c840
    rcx    0x7f091718ef47
    rdx    0x0
    rdi    0x2
    rsi    0x7f0913f3b830
    rbp    0x55d08e6fee7c
    rsp    0x7f0913f3b830
    r8     0x0
    r9     0x7f0913f3b830
    r10    0x8
    r11    0x246
    r12    0x55d08f8b4540
    r13    0x0
    r14    0x55d08e6e4d10
    r15    0x0
    rip    0x7f091718ef47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
