apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7fd79afd3f47 m=5 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7fd79afd3f47
    stack: frame={sp:0x7fd79757f830, fp:0x0} stack=[0x7fd796d80288,0x7fd79757fe88)
    00007fd79757f730:  00007fd79757faf0  00007fd79b5bc75a 
    00007fd79757f740:  000000000000000b  0000000000000000 
    00007fd79757f750:  00007fd79657e700  0000555fabd46148 
    00007fd79757f760:  00007fd79757fc40  0000555fadd983f0 
    00007fd79757f770:  0000000000000000  0000555fab222d10 
    00007fd79757f780:  0000000000000000  00007fd79b5b4f13 
    00007fd79757f790:  0000000000000005  0000000000000000 
    00007fd79757f7a0:  2525252525252525  2525252525252525 
    00007fd79757f7b0:  00000000000000ff  0000000000000000 
    00007fd79757f7c0:  00000000000000ff  0000000000000000 
    00007fd79757f7d0:  00007fd780000010  00007fd780000010 
    00007fd79757f7e0:  000000000000000e  000000000000000e 
    00007fd79757f7f0:  0000000000000000  0000000000000000 
    00007fd79757f800:  ffffffffffffffff  ffffffffffffffff 
    00007fd79757f810:  0000000400000004  0000000400000004 
    00007fd79757f820:  20636f6c6c616d00  203a64656c696166 
    00007fd79757f830: <0000000000000000  0000000000000000 
    00007fd79757f840:  0000000000000000  0000000000000000 
    00007fd79757f850:  0000000000000000  0000000000000000 
    00007fd79757f860:  0000000000000000  0000000000000000 
    00007fd79757f870:  0000000000000000  0000000000000000 
    00007fd79757f880:  0000000000000000  0000000000000000 
    00007fd79757f890:  0000000000000000  0000000000000000 
    00007fd79757f8a0:  0000000000000000  0000000000000000 
    00007fd79757f8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007fd79757f8c0:  ffffffffffffffff  ffffffffffffffff 
    00007fd79757f8d0:  ffffffffffffffff  ffffffffffffffff 
    00007fd79757f8e0:  ffffffffffffffff  ffffffffffffffff 
    00007fd79757f8f0:  ffffffffffffffff  ffffffffffffffff 
    00007fd79757f900:  ffffffffffffffff  ffffffffffffffff 
    00007fd79757f910:  ffffffffffffffff  ffffffffffffffff 
    00007fd79757f920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7fd79afd3f47
    stack: frame={sp:0x7fd79757f830, fp:0x0} stack=[0x7fd796d80288,0x7fd79757fe88)
    00007fd79757f730:  00007fd79757faf0  00007fd79b5bc75a 
    00007fd79757f740:  000000000000000b  0000000000000000 
    00007fd79757f750:  00007fd79657e700  0000555fabd46148 
    00007fd79757f760:  00007fd79757fc40  0000555fadd983f0 
    00007fd79757f770:  0000000000000000  0000555fab222d10 
    00007fd79757f780:  0000000000000000  00007fd79b5b4f13 
    00007fd79757f790:  0000000000000005  0000000000000000 
    00007fd79757f7a0:  2525252525252525  2525252525252525 
    00007fd79757f7b0:  00000000000000ff  0000000000000000 
    00007fd79757f7c0:  00000000000000ff  0000000000000000 
    00007fd79757f7d0:  00007fd780000010  00007fd780000010 
    00007fd79757f7e0:  000000000000000e  000000000000000e 
    00007fd79757f7f0:  0000000000000000  0000000000000000 
    00007fd79757f800:  ffffffffffffffff  ffffffffffffffff 
    00007fd79757f810:  0000000400000004  0000000400000004 
    00007fd79757f820:  20636f6c6c616d00  203a64656c696166 
    00007fd79757f830: <0000000000000000  0000000000000000 
    00007fd79757f840:  0000000000000000  0000000000000000 
    00007fd79757f850:  0000000000000000  0000000000000000 
    00007fd79757f860:  0000000000000000  0000000000000000 
    00007fd79757f870:  0000000000000000  0000000000000000 
    00007fd79757f880:  0000000000000000  0000000000000000 
    00007fd79757f890:  0000000000000000  0000000000000000 
    00007fd79757f8a0:  0000000000000000  0000000000000000 
    00007fd79757f8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007fd79757f8c0:  ffffffffffffffff  ffffffffffffffff 
    00007fd79757f8d0:  ffffffffffffffff  ffffffffffffffff 
    00007fd79757f8e0:  ffffffffffffffff  ffffffffffffffff 
    00007fd79757f8f0:  ffffffffffffffff  ffffffffffffffff 
    00007fd79757f900:  ffffffffffffffff  ffffffffffffffff 
    00007fd79757f910:  ffffffffffffffff  ffffffffffffffff 
    00007fd79757f920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).parse(0xc00011c500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:277 +0xbc6
    text/template/parse.(*Tree).Parse(0xc00011c500, 0x555fab0d2440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001c4720, 0xc000142350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x555fab0779b7, 0x4, 0x555fab0d2440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000142350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc00003d840, 0x555fab0d2440, 0x16c, 0x4, 0xc0001095e8, 0x555fabd61760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 6 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 7 [runnable]:
    text/template/parse.(*lexer).run(0xc00014a630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:228
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7fd79b381840
    rcx    0x7fd79afd3f47
    rdx    0x0
    rdi    0x2
    rsi    0x7fd79757f830
    rbp    0x555fab23ce7c
    rsp    0x7fd79757f830
    r8     0x0
    r9     0x7fd79757f830
    r10    0x8
    r11    0x246
    r12    0x555fadd983f0
    r13    0x0
    r14    0x555fab222d10
    r15    0x0
    rip    0x7fd79afd3f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000062c00)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000062c00)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc00004b000, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc00006df01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc00008a300)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [syscall, locked to thread]:
    reflect.mapassign(0x18bbf80, 0xc0004a18f0, 0xc0004bab90, 0xc0004bab70)
    	/usr/local/go/src/runtime/map.go:1319 +0x3f
    reflect.Value.SetMapIndex(0x18bbf80, 0xc00042c490, 0x195, 0x1858200, 0xc0004bab90, 0x98, 0x1897a80, 0xc0004bab70, 0x194)
    	/usr/local/go/src/reflect/value.go:1706 +0x27c
    encoding/json.(*decodeState).object(0xc0004c53f0, 0x1811e60, 0xc00042c490, 0x16, 0xc0004c5418, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:807 +0x8da
    encoding/json.(*decodeState).value(0xc0004c53f0, 0x1811e60, 0xc00042c490, 0x16, 0xc00044dbc8, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0004c53f0, 0x1811e60, 0xc00042c490, 0xc0004c5418, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003eaaab, 0x5d, 0xb355, 0x1811e60, 0xc00042c490, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0004d0b40, 0xc0003eaaab, 0x5d, 0xb355, 0x7f6e38bb7940, 0xc0004d0b40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:565 +0x18b
    encoding/json.(*decodeState).object(0xc0004c4a50, 0x19ce1a0, 0xc0004d0b40, 0x199, 0xc0004c4a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0004c4a50, 0x19ce1a0, 0xc0004d0b40, 0x199, 0xc0004d2000, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004c4a50, 0x18bc100, 0xc0004d03e0, 0x195, 0xc0004c4a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004c4a50, 0x18bc100, 0xc0004d03e0, 0x195, 0x18bc100, 0xc0004d03e0)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004c4a50, 0x1815520, 0xc0004d0240, 0x16, 0xc0004c4a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004c4a50, 0x1815520, 0xc0004d0240, 0x16, 0xc00044e888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0004c4a50, 0x1815520, 0xc0004d0240, 0xc0004c4a78, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003ea7b5, 0x9e1, 0xb64b, 0x1815520, 0xc0004d0240, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00041e480, 0xc0003ea7b5, 0x9e1, 0xb64b, 0x7f6e38bb7940, 0xc00041e480)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e4b00, 0x19ce1a0, 0xc00041e480, 0x199, 0xc0000e4b28, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e4b00, 0x19ce1a0, 0xc00041e480, 0x199, 0xc0004d0000, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e4b00, 0x18e59a0, 0xc0003f6408, 0x195, 0xc0000e4b28, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e4b00, 0x18e59a0, 0xc0003f6408, 0x195, 0x18e59a0, 0xc0003f6408)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e4b00, 0x1815520, 0xc0003f6240, 0x16, 0xc0000e4b28, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e4b00, 0x1815520, 0xc0003f6240, 0x16, 0xc0001a3548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e4b00, 0x1815520, 0xc0003f6240, 0xc0000e4b28, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003e6000, 0x9d38, 0xfe00, 0x1815520, 0xc0003f6240, 0x2aa0130, 0x7f6e38bb77c0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0003f6000, 0xc0003e6000, 0x9d38, 0xfe00, 0x7f6e38bb7940, 0xc0003f6000)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e4a50, 0x1a89300, 0xc0003f6000, 0x16, 0xc0000e4a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e4a50, 0x1a89300, 0xc0003f6000, 0x16, 0xc0001a3c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e4a50, 0x1a89300, 0xc0003f6000, 0xc0000e4a78, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003e6000, 0x9d39, 0xfe00, 0x1a89300, 0xc0003f6000, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc00039bb30, 0xc0001a3d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc00039ba70, 0xc00039ba40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 18 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f8785408f47 m=5 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f8785408f47
    stack: frame={sp:0x7f87819b4830, fp:0x0} stack=[0x7f87811b5288,0x7f87819b4e88)
    00007f87819b4730:  00007f87819b4af0  00007f87859f175a 
    00007f87819b4740:  000000000000000b  0000000000000000 
    00007f87819b4750:  00007f8780853700  000055ef55359148 
    00007f87819b4760:  00007f87819b4c40  000055ef570d73f0 
    00007f87819b4770:  0000000000000000  000055ef54835d10 
    00007f87819b4780:  0000000000000000  00007f87859e9f13 
    00007f87819b4790:  0000000000000005  0000000000000000 
    00007f87819b47a0:  2525252525252525  2525252525252525 
    00007f87819b47b0:  00000000000000ff  0000000000000000 
    00007f87819b47c0:  00000000000000ff  0000000000000000 
    00007f87819b47d0:  00007f8768000010  00007f8768000010 
    00007f87819b47e0:  000000000000000e  000000000000000e 
    00007f87819b47f0:  0000000000000000  0000000000000000 
    00007f87819b4800:  ffffffffffffffff  ffffffffffffffff 
    00007f87819b4810:  0000000400000004  0000000400000004 
    00007f87819b4820:  20636f6c6c616d00  203a64656c696166 
    00007f87819b4830: <0000000000000000  0000000000000000 
    00007f87819b4840:  0000000000000000  0000000000000000 
    00007f87819b4850:  0000000000000000  0000000000000000 
    00007f87819b4860:  0000000000000000  0000000000000000 
    00007f87819b4870:  0000000000000000  0000000000000000 
    00007f87819b4880:  0000000000000000  0000000000000000 
    00007f87819b4890:  0000000000000000  0000000000000000 
    00007f87819b48a0:  0000000000000000  0000000000000000 
    00007f87819b48b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f87819b48c0:  ffffffffffffffff  ffffffffffffffff 
    00007f87819b48d0:  ffffffffffffffff  ffffffffffffffff 
    00007f87819b48e0:  ffffffffffffffff  ffffffffffffffff 
    00007f87819b48f0:  ffffffffffffffff  ffffffffffffffff 
    00007f87819b4900:  ffffffffffffffff  ffffffffffffffff 
    00007f87819b4910:  ffffffffffffffff  ffffffffffffffff 
    00007f87819b4920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f8785408f47
    stack: frame={sp:0x7f87819b4830, fp:0x0} stack=[0x7f87811b5288,0x7f87819b4e88)
    00007f87819b4730:  00007f87819b4af0  00007f87859f175a 
    00007f87819b4740:  000000000000000b  0000000000000000 
    00007f87819b4750:  00007f8780853700  000055ef55359148 
    00007f87819b4760:  00007f87819b4c40  000055ef570d73f0 
    00007f87819b4770:  0000000000000000  000055ef54835d10 
    00007f87819b4780:  0000000000000000  00007f87859e9f13 
    00007f87819b4790:  0000000000000005  0000000000000000 
    00007f87819b47a0:  2525252525252525  2525252525252525 
    00007f87819b47b0:  00000000000000ff  0000000000000000 
    00007f87819b47c0:  00000000000000ff  0000000000000000 
    00007f87819b47d0:  00007f8768000010  00007f8768000010 
    00007f87819b47e0:  000000000000000e  000000000000000e 
    00007f87819b47f0:  0000000000000000  0000000000000000 
    00007f87819b4800:  ffffffffffffffff  ffffffffffffffff 
    00007f87819b4810:  0000000400000004  0000000400000004 
    00007f87819b4820:  20636f6c6c616d00  203a64656c696166 
    00007f87819b4830: <0000000000000000  0000000000000000 
    00007f87819b4840:  0000000000000000  0000000000000000 
    00007f87819b4850:  0000000000000000  0000000000000000 
    00007f87819b4860:  0000000000000000  0000000000000000 
    00007f87819b4870:  0000000000000000  0000000000000000 
    00007f87819b4880:  0000000000000000  0000000000000000 
    00007f87819b4890:  0000000000000000  0000000000000000 
    00007f87819b48a0:  0000000000000000  0000000000000000 
    00007f87819b48b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f87819b48c0:  ffffffffffffffff  ffffffffffffffff 
    00007f87819b48d0:  ffffffffffffffff  ffffffffffffffff 
    00007f87819b48e0:  ffffffffffffffff  ffffffffffffffff 
    00007f87819b48f0:  ffffffffffffffff  ffffffffffffffff 
    00007f87819b4900:  ffffffffffffffff  ffffffffffffffff 
    00007f87819b4910:  ffffffffffffffff  ffffffffffffffff 
    00007f87819b4920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).parse(0xc00012c500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:277 +0xbc6
    text/template/parse.(*Tree).Parse(0xc00012c500, 0x55ef546e5440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001d66f0, 0xc000152340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x55ef5468a9b7, 0x4, 0x55ef546e5440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000152340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc0000cd780, 0x55ef546e5440, 0x16c, 0x4, 0xc0001195e8, 0x55ef55374760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 19 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 20 [runnable]:
    text/template/parse.(*lexer).run(0xc00015a630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:228
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7f87857b6840
    rcx    0x7f8785408f47
    rdx    0x0
    rdi    0x2
    rsi    0x7f87819b4830
    rbp    0x55ef5484fe7c
    rsp    0x7f87819b4830
    r8     0x0
    r9     0x7f87819b4830
    r10    0x8
    r11    0x246
    r12    0x55ef570d73f0
    r13    0x0
    r14    0x55ef54835d10
    r15    0x0
    rip    0x7f8785408f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
