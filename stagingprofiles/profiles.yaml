apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f8c617ddf47 m=0 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f8c617ddf47
    stack: frame={sp:0x7ffe46b00850, fp:0x0} stack=[0x7ffe46301ed0,0x7ffe46b00f10)
    00007ffe46b00750:  0000000000000005  0000ffff00001fa0 
    00007ffe46b00760:  00007ffe46b00c60  0000561edb38d7e0 
    00007ffe46b00770:  0000000000000000  0000561ed97b1d10 
    00007ffe46b00780:  0000000000000000  00007f8c61dbef13 
    00007ffe46b00790:  0000000000000005  0000000000000000 
    00007ffe46b007a0:  0000000000000000  00007f8c617afce0 
    00007ffe46b007b0:  00007ffe46b00b70  00007f8c61dc675a 
    00007ffe46b007c0:  0000000000000000  0000000000000000 
    00007ffe46b007d0:  0000000000000000  00007ffe46b00c60 
    00007ffe46b007e0:  2525252525252525  2525252525252525 
    00007ffe46b007f0:  00000000000000ff  0000000000000000 
    00007ffe46b00800:  00000000000000ff  0000000000000000 
    00007ffe46b00810:  0000000000000001  0000000000000003 
    00007ffe46b00820:  0000000000000005  0000000000000000 
    00007ffe46b00830:  0000000000000004  0000000c00000000 
    00007ffe46b00840:  000000000000000e  0000000000000000 
    00007ffe46b00850: <0000000000000000  0000000000000000 
    00007ffe46b00860:  20636f6c6c616d00  203a64656c696166 
    00007ffe46b00870:  0000000000000000  0000000000000000 
    00007ffe46b00880:  0000000000000000  0000000200000000 
    00007ffe46b00890:  000000000000000b  0000000000000000 
    00007ffe46b008a0:  0000000000000000  0000000000000000 
    00007ffe46b008b0:  0000000000000000  000000000000000a 
    00007ffe46b008c0:  0000000000000000  0000561eda2eb380 
    00007ffe46b008d0:  fffffffe7fffffff  ffffffffffffffff 
    00007ffe46b008e0:  ffffffffffffffff  ffffffffffffffff 
    00007ffe46b008f0:  ffffffffffffffff  ffffffffffffffff 
    00007ffe46b00900:  ffffffffffffffff  ffffffffffffffff 
    00007ffe46b00910:  ffffffffffffffff  ffffffffffffffff 
    00007ffe46b00920:  ffffffffffffffff  ffffffffffffffff 
    00007ffe46b00930:  ffffffffffffffff  ffffffffffffffff 
    00007ffe46b00940:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f8c617ddf47
    stack: frame={sp:0x7ffe46b00850, fp:0x0} stack=[0x7ffe46301ed0,0x7ffe46b00f10)
    00007ffe46b00750:  0000000000000005  0000ffff00001fa0 
    00007ffe46b00760:  00007ffe46b00c60  0000561edb38d7e0 
    00007ffe46b00770:  0000000000000000  0000561ed97b1d10 
    00007ffe46b00780:  0000000000000000  00007f8c61dbef13 
    00007ffe46b00790:  0000000000000005  0000000000000000 
    00007ffe46b007a0:  0000000000000000  00007f8c617afce0 
    00007ffe46b007b0:  00007ffe46b00b70  00007f8c61dc675a 
    00007ffe46b007c0:  0000000000000000  0000000000000000 
    00007ffe46b007d0:  0000000000000000  00007ffe46b00c60 
    00007ffe46b007e0:  2525252525252525  2525252525252525 
    00007ffe46b007f0:  00000000000000ff  0000000000000000 
    00007ffe46b00800:  00000000000000ff  0000000000000000 
    00007ffe46b00810:  0000000000000001  0000000000000003 
    00007ffe46b00820:  0000000000000005  0000000000000000 
    00007ffe46b00830:  0000000000000004  0000000c00000000 
    00007ffe46b00840:  000000000000000e  0000000000000000 
    00007ffe46b00850: <0000000000000000  0000000000000000 
    00007ffe46b00860:  20636f6c6c616d00  203a64656c696166 
    00007ffe46b00870:  0000000000000000  0000000000000000 
    00007ffe46b00880:  0000000000000000  0000000200000000 
    00007ffe46b00890:  000000000000000b  0000000000000000 
    00007ffe46b008a0:  0000000000000000  0000000000000000 
    00007ffe46b008b0:  0000000000000000  000000000000000a 
    00007ffe46b008c0:  0000000000000000  0000561eda2eb380 
    00007ffe46b008d0:  fffffffe7fffffff  ffffffffffffffff 
    00007ffe46b008e0:  ffffffffffffffff  ffffffffffffffff 
    00007ffe46b008f0:  ffffffffffffffff  ffffffffffffffff 
    00007ffe46b00900:  ffffffffffffffff  ffffffffffffffff 
    00007ffe46b00910:  ffffffffffffffff  ffffffffffffffff 
    00007ffe46b00920:  ffffffffffffffff  ffffffffffffffff 
    00007ffe46b00930:  ffffffffffffffff  ffffffffffffffff 
    00007ffe46b00940:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [runnable, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).operand(0xc00011c500, 0x17, 0x51)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:632 +0xc54
    text/template/parse.(*Tree).command(0xc00011c500, 0x17)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:599 +0xdb
    text/template/parse.(*Tree).pipeline(0xc00011c500, 0x561ed9608760, 0x7, 0x561ed9661491)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:433 +0x5e8
    text/template/parse.(*Tree).action(0xc00011c500, 0xa, 0x4f)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:377 +0x16e
    text/template/parse.(*Tree).textOrAction(0xc00011c500, 0xa, 0x4f)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:345 +0x295
    text/template/parse.(*Tree).itemList(0xc00011c500, 0x561ed96069eb, 0x4, 0xc00027a000)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:327 +0xfb
    text/template/parse.(*Tree).parseControl(0xc00011c500, 0x561eda330000, 0x561ed96069eb, 0x4, 0x0, 0x0, 0xc00027a000, 0x0, 0x0)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:459 +0x102
    text/template/parse.(*Tree).withControl(0xc00011c500, 0x1f, 0x34)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:509 +0x4e
    text/template/parse.(*Tree).action(0xc00011c500, 0xa, 0x30)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:372 +0x55f
    text/template/parse.(*Tree).textOrAction(0xc00011c500, 0x1f, 0x34)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:345 +0x295
    text/template/parse.(*Tree).parse(0xc00011c500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:291 +0x383
    text/template/parse.(*Tree).Parse(0xc00011c500, 0x561ed9661440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001c4720, 0xc000142350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x561ed96069b7, 0x4, 0x561ed9661440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000142350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc00003d840, 0x561ed9661440, 0x16c, 0x4, 0xc0001095e8, 0x561eda2f0760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 6 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 7 [chan send]:
    text/template/parse.(*lexer).emit(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:157
    text/template/parse.lexLeftDelim(0xc00014a630, 0x561ed9d80888)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:307 +0x1e0
    text/template/parse.(*lexer).run(0xc00014a630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:230 +0x39
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7f8c61b8b840
    rcx    0x7f8c617ddf47
    rdx    0x0
    rdi    0x2
    rsi    0x7ffe46b00850
    rbp    0x561ed97cbe7c
    rsp    0x7ffe46b00850
    r8     0x0
    r9     0x7ffe46b00850
    r10    0x8
    r11    0x246
    r12    0x561edb38d7e0
    r13    0x0
    r14    0x561ed97b1d10
    r15    0x0
    rip    0x7f8c617ddf47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000088400)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000088400)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc000046000, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc000099f01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc000186000)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [syscall, locked to thread]:
    k8s.io/kubernetes/vendor/github.com/go-openapi/swag.(*NameProvider).GetJSONNames(0xc0003dc5d0, 0x1a89300, 0xc00050e900, 0x0, 0x0, 0x0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/swag/json.go:265 +0x1da
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00050e900, 0xc0004462e7, 0x3d, 0xbb19, 0x7fd0d64fa2c0, 0xc00050e900)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:574 +0x267
    encoding/json.(*decodeState).object(0xc00050a2c0, 0x19ce1a0, 0xc00050e900, 0x199, 0xc00050a2e8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc00050a2c0, 0x19ce1a0, 0xc00050e900, 0x199, 0xc0005138c0, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc00050a2c0, 0x18bc100, 0xc00050e1a0, 0x195, 0xc00050a2e8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc00050a2c0, 0x18bc100, 0xc00050e1a0, 0x195, 0x18bc100, 0xc00050e1a0)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc00050a2c0, 0x1815520, 0xc00050e000, 0x16, 0xc00050a2e8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc00050a2c0, 0x1815520, 0xc00050e000, 0x16, 0xc0004a8888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc00050a2c0, 0x1815520, 0xc00050e000, 0xc00050a2e8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000445dc7, 0x9ca, 0xc039, 0x1815520, 0xc00050e000, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000476900, 0xc000445dc7, 0x9ca, 0xc039, 0x7fd0d64fa2c0, 0xc000476900)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0001b49a0, 0x19ce1a0, 0xc000476900, 0x199, 0xc0001b49c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0001b49a0, 0x19ce1a0, 0xc000476900, 0x199, 0xc000507d40, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0001b49a0, 0x18e59a0, 0xc00040c888, 0x195, 0xc0001b49c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0001b49a0, 0x18e59a0, 0xc00040c888, 0x195, 0x18e59a0, 0xc00040c888)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0001b49a0, 0x1815520, 0xc00040c6c0, 0x16, 0xc0001b49c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0001b49a0, 0x1815520, 0xc00040c6c0, 0x16, 0xc0001ff548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0001b49a0, 0x1815520, 0xc00040c6c0, 0xc0001b49c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000442000, 0x9d38, 0xfe00, 0x1815520, 0xc00040c6c0, 0x7fd0d64f1e60, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00040c480, 0xc000442000, 0x9d38, 0xfe00, 0x7fd0d64fa2c0, 0xc00040c480)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0001b48f0, 0x1a89300, 0xc00040c480, 0x16, 0xc0001b4918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0001b48f0, 0x1a89300, 0xc00040c480, 0x16, 0xc0001ffc18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0001b48f0, 0x1a89300, 0xc00040c480, 0xc0001b4918, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000442000, 0x9d39, 0xfe00, 0x1a89300, 0xc00040c480, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc0003f79e0, 0xc0001ffd68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc0003f7920, 0xc0003f78f0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 18 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
