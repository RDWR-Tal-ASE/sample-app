apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f896c100f47 m=3 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f896c100f47
    stack: frame={sp:0x7f89696ae830, fp:0x0} stack=[0x7f8968eaf288,0x7f89696aee88)
    00007f89696ae730:  00007f89696aeaf0  00007f896c6e975a 
    00007f89696ae740:  000000000000000b  0000000000000000 
    00007f89696ae750:  00007f8962ffd700  0000555e702b5148 
    00007f89696ae760:  00007f89696aec40  0000555e705b23f0 
    00007f89696ae770:  0000000000000000  0000555e6f791d10 
    00007f89696ae780:  0000000000000000  00007f896c6e1f13 
    00007f89696ae790:  0000000000000005  0000000000000000 
    00007f89696ae7a0:  2525252525252525  2525252525252525 
    00007f89696ae7b0:  00000000000000ff  0000000000000000 
    00007f89696ae7c0:  00000000000000ff  0000000000000000 
    00007f89696ae7d0:  00007f8958000010  00007f8958000010 
    00007f89696ae7e0:  000000000000000e  000000000000000e 
    00007f89696ae7f0:  0000000000000000  0000000000000000 
    00007f89696ae800:  ffffffffffffffff  ffffffffffffffff 
    00007f89696ae810:  0000000400000004  0000000400000004 
    00007f89696ae820:  20636f6c6c616d00  203a64656c696166 
    00007f89696ae830: <0000000000000000  0000000000000000 
    00007f89696ae840:  0000000000000000  0000000000000000 
    00007f89696ae850:  0000000000000000  0000000000000000 
    00007f89696ae860:  0000000000000000  0000000000000000 
    00007f89696ae870:  0000000000000000  0000000000000000 
    00007f89696ae880:  0000000000000000  0000000000000000 
    00007f89696ae890:  0000000000000000  0000000000000000 
    00007f89696ae8a0:  0000000000000000  0000000000000000 
    00007f89696ae8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f89696ae8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f89696ae8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f89696ae8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f89696ae8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f89696ae900:  ffffffffffffffff  ffffffffffffffff 
    00007f89696ae910:  ffffffffffffffff  ffffffffffffffff 
    00007f89696ae920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f896c100f47
    stack: frame={sp:0x7f89696ae830, fp:0x0} stack=[0x7f8968eaf288,0x7f89696aee88)
    00007f89696ae730:  00007f89696aeaf0  00007f896c6e975a 
    00007f89696ae740:  000000000000000b  0000000000000000 
    00007f89696ae750:  00007f8962ffd700  0000555e702b5148 
    00007f89696ae760:  00007f89696aec40  0000555e705b23f0 
    00007f89696ae770:  0000000000000000  0000555e6f791d10 
    00007f89696ae780:  0000000000000000  00007f896c6e1f13 
    00007f89696ae790:  0000000000000005  0000000000000000 
    00007f89696ae7a0:  2525252525252525  2525252525252525 
    00007f89696ae7b0:  00000000000000ff  0000000000000000 
    00007f89696ae7c0:  00000000000000ff  0000000000000000 
    00007f89696ae7d0:  00007f8958000010  00007f8958000010 
    00007f89696ae7e0:  000000000000000e  000000000000000e 
    00007f89696ae7f0:  0000000000000000  0000000000000000 
    00007f89696ae800:  ffffffffffffffff  ffffffffffffffff 
    00007f89696ae810:  0000000400000004  0000000400000004 
    00007f89696ae820:  20636f6c6c616d00  203a64656c696166 
    00007f89696ae830: <0000000000000000  0000000000000000 
    00007f89696ae840:  0000000000000000  0000000000000000 
    00007f89696ae850:  0000000000000000  0000000000000000 
    00007f89696ae860:  0000000000000000  0000000000000000 
    00007f89696ae870:  0000000000000000  0000000000000000 
    00007f89696ae880:  0000000000000000  0000000000000000 
    00007f89696ae890:  0000000000000000  0000000000000000 
    00007f89696ae8a0:  0000000000000000  0000000000000000 
    00007f89696ae8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f89696ae8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f89696ae8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f89696ae8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f89696ae8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f89696ae900:  ffffffffffffffff  ffffffffffffffff 
    00007f89696ae910:  ffffffffffffffff  ffffffffffffffff 
    00007f89696ae920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).parse(0xc00010e500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:277 +0xbc6
    text/template/parse.(*Tree).Parse(0xc00010e500, 0x555e6f641440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001b6720, 0xc000134350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x555e6f5e69b7, 0x4, 0x555e6f641440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000134350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc00003d840, 0x555e6f641440, 0x16c, 0x4, 0xc0000fb5e8, 0x555e702d0760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 6 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 7 [runnable]:
    text/template/parse.(*lexer).run(0xc00013c630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:228
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7f896c4ae840
    rcx    0x7f896c100f47
    rdx    0x0
    rdi    0x2
    rsi    0x7f89696ae830
    rbp    0x555e6f7abe7c
    rsp    0x7f89696ae830
    r8     0x0
    r9     0x7f89696ae830
    r10    0x8
    r11    0x246
    r12    0x555e705b23f0
    r13    0x0
    r14    0x555e6f791d10
    r15    0x0
    rip    0x7f896c100f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc0004d6000)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc0004d6000)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc00004b000, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc000099f01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc000000c00)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [syscall, locked to thread]:
    reflect.mapassign(0x18bbf80, 0xc0004a18c0, 0xc0004baae0, 0xc0004baac0)
    	/usr/local/go/src/runtime/map.go:1319 +0x3f
    reflect.Value.SetMapIndex(0x18bbf80, 0xc00042e480, 0x195, 0x1858200, 0xc0004baae0, 0x98, 0x1897a80, 0xc0004baac0, 0x194)
    	/usr/local/go/src/reflect/value.go:1706 +0x27c
    encoding/json.(*decodeState).object(0xc0004c5130, 0x1811e60, 0xc00042e480, 0x16, 0xc0004c5158, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:807 +0x8da
    encoding/json.(*decodeState).value(0xc0004c5130, 0x1811e60, 0xc00042e480, 0x16, 0xc00044dbc8, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0004c5130, 0x1811e60, 0xc00042e480, 0xc0004c5158, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003ee9e7, 0xb2, 0xb419, 0x1811e60, 0xc00042e480, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0004cd440, 0xc0003ee9e7, 0xb2, 0xb419, 0x7fb93979a500, 0xc0004cd440)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:565 +0x18b
    encoding/json.(*decodeState).object(0xc0004c49a0, 0x19ce1a0, 0xc0004cd440, 0x199, 0xc0004c49c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0004c49a0, 0x19ce1a0, 0xc0004cd440, 0x199, 0xc0004d2240, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004c49a0, 0x18bc100, 0xc0004ccce0, 0x195, 0xc0004c49c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004c49a0, 0x18bc100, 0xc0004ccce0, 0x195, 0x18bc100, 0xc0004ccce0)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004c49a0, 0x1815520, 0xc0004ccb40, 0x16, 0xc0004c49c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004c49a0, 0x1815520, 0xc0004ccb40, 0x16, 0xc00044e888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0004c49a0, 0x1815520, 0xc0004ccb40, 0xc0004c49c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003ee7b5, 0x9e1, 0xb64b, 0x1815520, 0xc0004ccb40, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00041ed80, 0xc0003ee7b5, 0x9e1, 0xb64b, 0x7fb93979a500, 0xc00041ed80)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e4a50, 0x19ce1a0, 0xc00041ed80, 0x199, 0xc0000e4a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e4a50, 0x19ce1a0, 0xc00041ed80, 0x199, 0xc0004cc900, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e4a50, 0x18e59a0, 0xc0003b0d08, 0x195, 0xc0000e4a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e4a50, 0x18e59a0, 0xc0003b0d08, 0x195, 0x18e59a0, 0xc0003b0d08)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e4a50, 0x1815520, 0xc0003b0b40, 0x16, 0xc0000e4a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e4a50, 0x1815520, 0xc0003b0b40, 0x16, 0xc0001a3548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e4a50, 0x1815520, 0xc0003b0b40, 0xc0000e4a78, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003ea000, 0x9d38, 0xfe00, 0x1815520, 0xc0003b0b40, 0x7fb9397903a8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0003b0900, 0xc0003ea000, 0x9d38, 0xfe00, 0x7fb93979a500, 0xc0003b0900)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e49a0, 0x1a89300, 0xc0003b0900, 0x16, 0xc0000e49c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e49a0, 0x1a89300, 0xc0003b0900, 0x16, 0xc0001a3c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e49a0, 0x1a89300, 0xc0003b0900, 0xc0000e49c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003ea000, 0x9d39, 0xfe00, 0x1a89300, 0xc0003b0900, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc00039db30, 0xc0001a3d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc00039da70, 0xc00039da40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 18 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f484e94df47 m=5 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f484e94df47
    stack: frame={sp:0x7f484aef9830, fp:0x0} stack=[0x7f484a6fa288,0x7f484aef9e88)
    00007f484aef9730:  00007f484aef9af0  00007f484ef3675a 
    00007f484aef9740:  000000000000000b  0000000000000000 
    00007f484aef9750:  00007f4849d98700  0000555d1b054148 
    00007f484aef9760:  00007f484aef9c40  0000555d1c2d63f0 
    00007f484aef9770:  0000000000000000  0000555d1a530d10 
    00007f484aef9780:  0000000000000000  00007f484ef2ef13 
    00007f484aef9790:  0000000000000005  0000000000000000 
    00007f484aef97a0:  2525252525252525  2525252525252525 
    00007f484aef97b0:  00000000000000ff  0000000000000000 
    00007f484aef97c0:  00000000000000ff  0000000000000000 
    00007f484aef97d0:  00007f4834000010  00007f4834000010 
    00007f484aef97e0:  000000000000000e  000000000000000e 
    00007f484aef97f0:  0000000000000000  0000000000000000 
    00007f484aef9800:  ffffffffffffffff  ffffffffffffffff 
    00007f484aef9810:  0000000400000004  0000000400000004 
    00007f484aef9820:  20636f6c6c616d00  203a64656c696166 
    00007f484aef9830: <0000000000000000  0000000000000000 
    00007f484aef9840:  0000000000000000  0000000000000000 
    00007f484aef9850:  0000000000000000  0000000000000000 
    00007f484aef9860:  0000000000000000  0000000000000000 
    00007f484aef9870:  0000000000000000  0000000000000000 
    00007f484aef9880:  0000000000000000  0000000000000000 
    00007f484aef9890:  0000000000000000  0000000000000000 
    00007f484aef98a0:  0000000000000000  0000000000000000 
    00007f484aef98b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f484aef98c0:  ffffffffffffffff  ffffffffffffffff 
    00007f484aef98d0:  ffffffffffffffff  ffffffffffffffff 
    00007f484aef98e0:  ffffffffffffffff  ffffffffffffffff 
    00007f484aef98f0:  ffffffffffffffff  ffffffffffffffff 
    00007f484aef9900:  ffffffffffffffff  ffffffffffffffff 
    00007f484aef9910:  ffffffffffffffff  ffffffffffffffff 
    00007f484aef9920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f484e94df47
    stack: frame={sp:0x7f484aef9830, fp:0x0} stack=[0x7f484a6fa288,0x7f484aef9e88)
    00007f484aef9730:  00007f484aef9af0  00007f484ef3675a 
    00007f484aef9740:  000000000000000b  0000000000000000 
    00007f484aef9750:  00007f4849d98700  0000555d1b054148 
    00007f484aef9760:  00007f484aef9c40  0000555d1c2d63f0 
    00007f484aef9770:  0000000000000000  0000555d1a530d10 
    00007f484aef9780:  0000000000000000  00007f484ef2ef13 
    00007f484aef9790:  0000000000000005  0000000000000000 
    00007f484aef97a0:  2525252525252525  2525252525252525 
    00007f484aef97b0:  00000000000000ff  0000000000000000 
    00007f484aef97c0:  00000000000000ff  0000000000000000 
    00007f484aef97d0:  00007f4834000010  00007f4834000010 
    00007f484aef97e0:  000000000000000e  000000000000000e 
    00007f484aef97f0:  0000000000000000  0000000000000000 
    00007f484aef9800:  ffffffffffffffff  ffffffffffffffff 
    00007f484aef9810:  0000000400000004  0000000400000004 
    00007f484aef9820:  20636f6c6c616d00  203a64656c696166 
    00007f484aef9830: <0000000000000000  0000000000000000 
    00007f484aef9840:  0000000000000000  0000000000000000 
    00007f484aef9850:  0000000000000000  0000000000000000 
    00007f484aef9860:  0000000000000000  0000000000000000 
    00007f484aef9870:  0000000000000000  0000000000000000 
    00007f484aef9880:  0000000000000000  0000000000000000 
    00007f484aef9890:  0000000000000000  0000000000000000 
    00007f484aef98a0:  0000000000000000  0000000000000000 
    00007f484aef98b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f484aef98c0:  ffffffffffffffff  ffffffffffffffff 
    00007f484aef98d0:  ffffffffffffffff  ffffffffffffffff 
    00007f484aef98e0:  ffffffffffffffff  ffffffffffffffff 
    00007f484aef98f0:  ffffffffffffffff  ffffffffffffffff 
    00007f484aef9900:  ffffffffffffffff  ffffffffffffffff 
    00007f484aef9910:  ffffffffffffffff  ffffffffffffffff 
    00007f484aef9920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).parse(0xc00012c500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:277 +0xbc6
    text/template/parse.(*Tree).Parse(0xc00012c500, 0x555d1a3e0440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001d66f0, 0xc000152340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x555d1a3859b7, 0x4, 0x555d1a3e0440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000152340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc0000cd780, 0x555d1a3e0440, 0x16c, 0x4, 0xc0001195e8, 0x555d1b06f760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 19 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 20 [runnable]:
    text/template/parse.(*lexer).run(0xc00015a630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:228
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7f484ecfb840
    rcx    0x7f484e94df47
    rdx    0x0
    rdi    0x2
    rsi    0x7f484aef9830
    rbp    0x555d1a54ae7c
    rsp    0x7f484aef9830
    r8     0x0
    r9     0x7f484aef9830
    r10    0x8
    r11    0x246
    r12    0x555d1c2d63f0
    r13    0x0
    r14    0x555d1a530d10
    r15    0x0
    rip    0x7f484e94df47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
