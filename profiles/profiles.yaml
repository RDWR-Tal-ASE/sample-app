apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
    Error: bad file '-': yaml: line 11: mapping values are not allowed in this context
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    The connection to the server 10.100.0.139:6443 was refused - did you specify the right host or port?
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: 
    -----
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f7702760f47 m=3 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f7702760f47
    stack: frame={sp:0x7f76ffd0e840, fp:0x0} stack=[0x7f76ff50f288,0x7f76ffd0ee88)
    00007f76ffd0e740:  0000000000000000  0000000000000000 
    00007f76ffd0e750:  0000000000000000  00000000008661c8 
    00007f76ffd0e760:  00007f76ffd0ec50  00000000023053f0 
    00007f76ffd0e770:  0000000000000000  0000000000593e90 
    00007f76ffd0e780:  0000000000000000  00007f7702d41f13 
    00007f76ffd0e790:  0000000000000005  0000000000000000 
    00007f76ffd0e7a0:  2525252525252525  2525252525252525 
    00007f76ffd0e7b0:  00000000ff00ff00  0000000000000000 
    00007f76ffd0e7c0:  00000000ff000000  0000000000000000 
    00007f76ffd0e7d0:  00007f76f0000010  00007f76f0000010 
    00007f76ffd0e7e0:  000000000000000e  000000000000000e 
    00007f76ffd0e7f0:  0000000000000000  0000000000000000 
    00007f76ffd0e800:  ffffffffffffffff  ffffffffffffffff 
    00007f76ffd0e810:  0000000400000004  0000000400000004 
    00007f76ffd0e820:  6c6c616d00732520  656c69616620636f 
    00007f76ffd0e830:  0000000000000000  0000000000000000 
    00007f76ffd0e840: <0000000000000000  0000000000000000 
    00007f76ffd0e850:  0000000000000000  0000000000000000 
    00007f76ffd0e860:  0000000000000000  0000000000000000 
    00007f76ffd0e870:  0000000000000000  0000000000000000 
    00007f76ffd0e880:  0000000000000000  0000000000000000 
    00007f76ffd0e890:  0000000000000000  0000000000000000 
    00007f76ffd0e8a0:  0000000000000000  0000000000000000 
    00007f76ffd0e8b0:  00007f7702b0e560  00007f7702b11bc0 
    00007f76ffd0e8c0:  fffffffe7fffffff  ffffffffffffffff 
    00007f76ffd0e8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f76ffd0e8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f76ffd0e8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f76ffd0e900:  ffffffffffffffff  ffffffffffffffff 
    00007f76ffd0e910:  ffffffffffffffff  ffffffffffffffff 
    00007f76ffd0e920:  ffffffffffffffff  ffffffffffffffff 
    00007f76ffd0e930:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f7702760f47
    stack: frame={sp:0x7f76ffd0e840, fp:0x0} stack=[0x7f76ff50f288,0x7f76ffd0ee88)
    00007f76ffd0e740:  0000000000000000  0000000000000000 
    00007f76ffd0e750:  0000000000000000  00000000008661c8 
    00007f76ffd0e760:  00007f76ffd0ec50  00000000023053f0 
    00007f76ffd0e770:  0000000000000000  0000000000593e90 
    00007f76ffd0e780:  0000000000000000  00007f7702d41f13 
    00007f76ffd0e790:  0000000000000005  0000000000000000 
    00007f76ffd0e7a0:  2525252525252525  2525252525252525 
    00007f76ffd0e7b0:  00000000ff00ff00  0000000000000000 
    00007f76ffd0e7c0:  00000000ff000000  0000000000000000 
    00007f76ffd0e7d0:  00007f76f0000010  00007f76f0000010 
    00007f76ffd0e7e0:  000000000000000e  000000000000000e 
    00007f76ffd0e7f0:  0000000000000000  0000000000000000 
    00007f76ffd0e800:  ffffffffffffffff  ffffffffffffffff 
    00007f76ffd0e810:  0000000400000004  0000000400000004 
    00007f76ffd0e820:  6c6c616d00732520  656c69616620636f 
    00007f76ffd0e830:  0000000000000000  0000000000000000 
    00007f76ffd0e840: <0000000000000000  0000000000000000 
    00007f76ffd0e850:  0000000000000000  0000000000000000 
    00007f76ffd0e860:  0000000000000000  0000000000000000 
    00007f76ffd0e870:  0000000000000000  0000000000000000 
    00007f76ffd0e880:  0000000000000000  0000000000000000 
    00007f76ffd0e890:  0000000000000000  0000000000000000 
    00007f76ffd0e8a0:  0000000000000000  0000000000000000 
    00007f76ffd0e8b0:  00007f7702b0e560  00007f7702b11bc0 
    00007f76ffd0e8c0:  fffffffe7fffffff  ffffffffffffffff 
    00007f76ffd0e8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f76ffd0e8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f76ffd0e8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f76ffd0e900:  ffffffffffffffff  ffffffffffffffff 
    00007f76ffd0e910:  ffffffffffffffff  ffffffffffffffff 
    00007f76ffd0e920:  ffffffffffffffff  ffffffffffffffff 
    00007f76ffd0e930:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    runtime.gopark(0x57a460, 0xc0000180c8, 0x170e, 0x3)
    	/usr/lib/go-1.13/src/runtime/proc.go:304 +0xe0
    runtime.goparkunlock(...)
    	/usr/lib/go-1.13/src/runtime/proc.go:310
    runtime.chanrecv(0xc000018070, 0x0, 0xc000000101, 0x41b36e)
    	/usr/lib/go-1.13/src/runtime/chan.go:524 +0x2e8
    runtime.chanrecv1(0xc000018070, 0x0)
    	/usr/lib/go-1.13/src/runtime/chan.go:406 +0x2b
    runtime.gcenable()
    	/usr/lib/go-1.13/src/runtime/mgc.go:212 +0x95
    runtime.main()
    	/usr/lib/go-1.13/src/runtime/proc.go:166 +0x121
    runtime.goexit()
    	/usr/lib/go-1.13/src/runtime/asm_amd64.s:1357 +0x1
    
    rax    0x0
    rbx    0x7f7702b0e840
    rcx    0x7f7702760f47
    rdx    0x0
    rdi    0x2
    rsi    0x7f76ffd0e840
    rbp    0x59f2ca
    rsp    0x7f76ffd0e840
    r8     0x0
    r9     0x7f76ffd0e840
    r10    0x8
    r11    0x246
    r12    0x23053f0
    r13    0x0
    r14    0x593e90
    r15    0x0
    rip    0x7f7702760f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    -----
