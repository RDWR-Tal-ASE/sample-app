apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f0153157f47 m=5 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f0153157f47
    stack: frame={sp:0x7f014f703830, fp:0x0} stack=[0x7f014ef04288,0x7f014f703e88)
    00007f014f703730:  00007f014f703af0  00007f015374075a 
    00007f014f703740:  000000000000000b  0000000000000000 
    00007f014f703750:  00007f014e5a2700  000055a1c7bb1148 
    00007f014f703760:  00007f014f703c40  000055a1c7ed33f0 
    00007f014f703770:  0000000000000000  000055a1c708dd10 
    00007f014f703780:  0000000000000000  00007f0153738f13 
    00007f014f703790:  0000000000000005  0000000000000000 
    00007f014f7037a0:  2525252525252525  2525252525252525 
    00007f014f7037b0:  00000000000000ff  0000000000000000 
    00007f014f7037c0:  00000000000000ff  0000000000000000 
    00007f014f7037d0:  00007f0138000010  00007f0138000010 
    00007f014f7037e0:  000000000000000e  000000000000000e 
    00007f014f7037f0:  0000000000000000  0000000000000000 
    00007f014f703800:  ffffffffffffffff  ffffffffffffffff 
    00007f014f703810:  0000000400000004  0000000400000004 
    00007f014f703820:  20636f6c6c616d00  203a64656c696166 
    00007f014f703830: <0000000000000000  0000000000000000 
    00007f014f703840:  0000000000000000  0000000000000000 
    00007f014f703850:  0000000000000000  0000000000000000 
    00007f014f703860:  0000000000000000  0000000000000000 
    00007f014f703870:  0000000000000000  0000000000000000 
    00007f014f703880:  0000000000000000  0000000000000000 
    00007f014f703890:  0000000000000000  0000000000000000 
    00007f014f7038a0:  0000000000000000  0000000000000000 
    00007f014f7038b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f014f7038c0:  ffffffffffffffff  ffffffffffffffff 
    00007f014f7038d0:  ffffffffffffffff  ffffffffffffffff 
    00007f014f7038e0:  ffffffffffffffff  ffffffffffffffff 
    00007f014f7038f0:  ffffffffffffffff  ffffffffffffffff 
    00007f014f703900:  ffffffffffffffff  ffffffffffffffff 
    00007f014f703910:  ffffffffffffffff  ffffffffffffffff 
    00007f014f703920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f0153157f47
    stack: frame={sp:0x7f014f703830, fp:0x0} stack=[0x7f014ef04288,0x7f014f703e88)
    00007f014f703730:  00007f014f703af0  00007f015374075a 
    00007f014f703740:  000000000000000b  0000000000000000 
    00007f014f703750:  00007f014e5a2700  000055a1c7bb1148 
    00007f014f703760:  00007f014f703c40  000055a1c7ed33f0 
    00007f014f703770:  0000000000000000  000055a1c708dd10 
    00007f014f703780:  0000000000000000  00007f0153738f13 
    00007f014f703790:  0000000000000005  0000000000000000 
    00007f014f7037a0:  2525252525252525  2525252525252525 
    00007f014f7037b0:  00000000000000ff  0000000000000000 
    00007f014f7037c0:  00000000000000ff  0000000000000000 
    00007f014f7037d0:  00007f0138000010  00007f0138000010 
    00007f014f7037e0:  000000000000000e  000000000000000e 
    00007f014f7037f0:  0000000000000000  0000000000000000 
    00007f014f703800:  ffffffffffffffff  ffffffffffffffff 
    00007f014f703810:  0000000400000004  0000000400000004 
    00007f014f703820:  20636f6c6c616d00  203a64656c696166 
    00007f014f703830: <0000000000000000  0000000000000000 
    00007f014f703840:  0000000000000000  0000000000000000 
    00007f014f703850:  0000000000000000  0000000000000000 
    00007f014f703860:  0000000000000000  0000000000000000 
    00007f014f703870:  0000000000000000  0000000000000000 
    00007f014f703880:  0000000000000000  0000000000000000 
    00007f014f703890:  0000000000000000  0000000000000000 
    00007f014f7038a0:  0000000000000000  0000000000000000 
    00007f014f7038b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f014f7038c0:  ffffffffffffffff  ffffffffffffffff 
    00007f014f7038d0:  ffffffffffffffff  ffffffffffffffff 
    00007f014f7038e0:  ffffffffffffffff  ffffffffffffffff 
    00007f014f7038f0:  ffffffffffffffff  ffffffffffffffff 
    00007f014f703900:  ffffffffffffffff  ffffffffffffffff 
    00007f014f703910:  ffffffffffffffff  ffffffffffffffff 
    00007f014f703920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).parse(0xc00012c500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:277 +0xbc6
    text/template/parse.(*Tree).Parse(0xc00012c500, 0x55a1c6f3d440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001d66f0, 0xc000152340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x55a1c6ee29b7, 0x4, 0x55a1c6f3d440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000152340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc0000cd780, 0x55a1c6f3d440, 0x16c, 0x4, 0xc0001195e8, 0x55a1c7bcc760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 19 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 20 [runnable]:
    text/template/parse.(*lexer).run(0xc00015a630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:228
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7f0153505840
    rcx    0x7f0153157f47
    rdx    0x0
    rdi    0x2
    rsi    0x7f014f703830
    rbp    0x55a1c70a7e7c
    rsp    0x7f014f703830
    r8     0x0
    r9     0x7f014f703830
    r10    0x8
    r11    0x246
    r12    0x55a1c7ed33f0
    r13    0x0
    r14    0x55a1c708dd10
    r15    0x0
    rip    0x7f0153157f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000062c00)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000062c00)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc00004b000, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc00006df01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc00008a480)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [syscall, locked to thread]:
    reflect.MakeSlice(0x1d4e220, 0x181c100, 0x0, 0x4, 0x181c100, 0x0, 0x0)
    	/usr/local/go/src/reflect/value.go:2299 +0x85
    encoding/json.(*decodeState).array(0xc000445550, 0x181c100, 0xc000454e88, 0x197, 0xc000445578, 0x5b)
    	/usr/local/go/src/encoding/json/decode.go:547 +0x716
    encoding/json.(*decodeState).value(0xc000445550, 0x181c100, 0xc000454e88, 0x197, 0x181c100, 0xc000454e88)
    	/usr/local/go/src/encoding/json/decode.go:360 +0x105
    encoding/json.(*decodeState).object(0xc000445550, 0x1815520, 0xc000454d80, 0x16, 0xc000445578, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000445550, 0x1815520, 0xc000454d80, 0x16, 0xc0003cdbc8, 0x6fa34b)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc000445550, 0x1815520, 0xc000454d80, 0xc000445578, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc00036ebd6, 0xc9, 0xb22a, 0x1815520, 0xc000454d80, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000450900, 0xc00036ebd6, 0xc9, 0xb22a, 0x7f5e77d57780, 0xc000450900)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0004448f0, 0x19ce1a0, 0xc000450900, 0x199, 0xc000444918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0004448f0, 0x19ce1a0, 0xc000450900, 0x199, 0xc000454b40, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004448f0, 0x18bc100, 0xc0004501a0, 0x195, 0xc000444918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004448f0, 0x18bc100, 0xc0004501a0, 0x195, 0x18bc100, 0xc0004501a0)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004448f0, 0x1815520, 0xc000450000, 0x16, 0xc000444918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004448f0, 0x1815520, 0xc000450000, 0x16, 0xc0003ce888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0004448f0, 0x1815520, 0xc000450000, 0xc000444918, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc00036e7b5, 0x9e1, 0xb64b, 0x1815520, 0xc000450000, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00039e240, 0xc00036e7b5, 0x9e1, 0xb64b, 0x7f5e77d57780, 0xc00039e240)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e49a0, 0x19ce1a0, 0xc00039e240, 0x199, 0xc0000e49c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e49a0, 0x19ce1a0, 0xc00039e240, 0x199, 0xc000449d40, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e49a0, 0x18e59a0, 0xc00037a1c8, 0x195, 0xc0000e49c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e49a0, 0x18e59a0, 0xc00037a1c8, 0x195, 0x18e59a0, 0xc00037a1c8)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e49a0, 0x1815520, 0xc00037a000, 0x16, 0xc0000e49c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e49a0, 0x1815520, 0xc00037a000, 0x16, 0xc000123548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e49a0, 0x1815520, 0xc00037a000, 0xc0000e49c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc00036a000, 0x9d38, 0xfe00, 0x1815520, 0xc00037a000, 0x7f5e77f19818, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00031fd40, 0xc00036a000, 0x9d38, 0xfe00, 0x7f5e77d57780, 0xc00031fd40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e48f0, 0x1a89300, 0xc00031fd40, 0x16, 0xc0000e4918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e48f0, 0x1a89300, 0xc00031fd40, 0x16, 0xc000123c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e48f0, 0x1a89300, 0xc00031fd40, 0xc0000e4918, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc00036a000, 0x9d39, 0xfe00, 0x1a89300, 0xc00031fd40, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc000319b30, 0xc000123d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc000319a70, 0xc000319a40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 18 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f8215c0df47 m=5 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f8215c0df47
    stack: frame={sp:0x7f82121b9830, fp:0x0} stack=[0x7f82119ba288,0x7f82121b9e88)
    00007f82121b9730:  00007f82121b9af0  00007f82161f675a 
    00007f82121b9740:  000000000000000b  0000000000000000 
    00007f82121b9750:  00007f82111b8700  000055859822c148 
    00007f82121b9760:  00007f82121b9c40  0000558598d6e3f0 
    00007f82121b9770:  0000000000000000  0000558597708d10 
    00007f82121b9780:  0000000000000000  00007f82161eef13 
    00007f82121b9790:  0000000000000005  0000000000000000 
    00007f82121b97a0:  2525252525252525  2525252525252525 
    00007f82121b97b0:  00000000000000ff  0000000000000000 
    00007f82121b97c0:  00000000000000ff  0000000000000000 
    00007f82121b97d0:  00007f81fc000010  00007f81fc000010 
    00007f82121b97e0:  000000000000000e  000000000000000e 
    00007f82121b97f0:  0000000000000000  0000000000000000 
    00007f82121b9800:  ffffffffffffffff  ffffffffffffffff 
    00007f82121b9810:  0000000400000004  0000000400000004 
    00007f82121b9820:  20636f6c6c616d00  203a64656c696166 
    00007f82121b9830: <0000000000000000  0000000000000000 
    00007f82121b9840:  0000000000000000  0000000000000000 
    00007f82121b9850:  0000000000000000  0000000000000000 
    00007f82121b9860:  0000000000000000  0000000000000000 
    00007f82121b9870:  0000000000000000  0000000000000000 
    00007f82121b9880:  0000000000000000  0000000000000000 
    00007f82121b9890:  0000000000000000  0000000000000000 
    00007f82121b98a0:  0000000000000000  0000000000000000 
    00007f82121b98b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f82121b98c0:  ffffffffffffffff  ffffffffffffffff 
    00007f82121b98d0:  ffffffffffffffff  ffffffffffffffff 
    00007f82121b98e0:  ffffffffffffffff  ffffffffffffffff 
    00007f82121b98f0:  ffffffffffffffff  ffffffffffffffff 
    00007f82121b9900:  ffffffffffffffff  ffffffffffffffff 
    00007f82121b9910:  ffffffffffffffff  ffffffffffffffff 
    00007f82121b9920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f8215c0df47
    stack: frame={sp:0x7f82121b9830, fp:0x0} stack=[0x7f82119ba288,0x7f82121b9e88)
    00007f82121b9730:  00007f82121b9af0  00007f82161f675a 
    00007f82121b9740:  000000000000000b  0000000000000000 
    00007f82121b9750:  00007f82111b8700  000055859822c148 
    00007f82121b9760:  00007f82121b9c40  0000558598d6e3f0 
    00007f82121b9770:  0000000000000000  0000558597708d10 
    00007f82121b9780:  0000000000000000  00007f82161eef13 
    00007f82121b9790:  0000000000000005  0000000000000000 
    00007f82121b97a0:  2525252525252525  2525252525252525 
    00007f82121b97b0:  00000000000000ff  0000000000000000 
    00007f82121b97c0:  00000000000000ff  0000000000000000 
    00007f82121b97d0:  00007f81fc000010  00007f81fc000010 
    00007f82121b97e0:  000000000000000e  000000000000000e 
    00007f82121b97f0:  0000000000000000  0000000000000000 
    00007f82121b9800:  ffffffffffffffff  ffffffffffffffff 
    00007f82121b9810:  0000000400000004  0000000400000004 
    00007f82121b9820:  20636f6c6c616d00  203a64656c696166 
    00007f82121b9830: <0000000000000000  0000000000000000 
    00007f82121b9840:  0000000000000000  0000000000000000 
    00007f82121b9850:  0000000000000000  0000000000000000 
    00007f82121b9860:  0000000000000000  0000000000000000 
    00007f82121b9870:  0000000000000000  0000000000000000 
    00007f82121b9880:  0000000000000000  0000000000000000 
    00007f82121b9890:  0000000000000000  0000000000000000 
    00007f82121b98a0:  0000000000000000  0000000000000000 
    00007f82121b98b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f82121b98c0:  ffffffffffffffff  ffffffffffffffff 
    00007f82121b98d0:  ffffffffffffffff  ffffffffffffffff 
    00007f82121b98e0:  ffffffffffffffff  ffffffffffffffff 
    00007f82121b98f0:  ffffffffffffffff  ffffffffffffffff 
    00007f82121b9900:  ffffffffffffffff  ffffffffffffffff 
    00007f82121b9910:  ffffffffffffffff  ffffffffffffffff 
    00007f82121b9920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).parse(0xc00012c500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:277 +0xbc6
    text/template/parse.(*Tree).Parse(0xc00012c500, 0x5585975b8440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001d66f0, 0xc000152340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x55859755d9b7, 0x4, 0x5585975b8440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000152340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc0000cd780, 0x5585975b8440, 0x16c, 0x4, 0xc0001195e8, 0x558598247760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 19 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 20 [runnable]:
    text/template/parse.(*lexer).run(0xc00015a630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:228
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7f8215fbb840
    rcx    0x7f8215c0df47
    rdx    0x0
    rdi    0x2
    rsi    0x7f82121b9830
    rbp    0x558597722e7c
    rsp    0x7f82121b9830
    r8     0x0
    r9     0x7f82121b9830
    r10    0x8
    r11    0x246
    r12    0x558598d6e3f0
    r13    0x0
    r14    0x558597708d10
    r15    0x0
    rip    0x7f8215c0df47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
