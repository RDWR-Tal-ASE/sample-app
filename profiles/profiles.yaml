apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7ffa523fbf47 m=3 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7ffa523fbf47
    stack: frame={sp:0x7ffa4f9a9830, fp:0x0} stack=[0x7ffa4f1aa288,0x7ffa4f9a9e88)
    00007ffa4f9a9730:  00007ffa4f9a9af0  00007ffa529e475a 
    00007ffa4f9a9740:  000000000000000b  0000000000000000 
    00007ffa4f9a9750:  00007ffa4c803700  0000555bc1459148 
    00007ffa4f9a9760:  00007ffa4f9a9c40  00007ffa40000c50 
    00007ffa4f9a9770:  0000000000000000  0000555bc0935d10 
    00007ffa4f9a9780:  0000000000000000  00007ffa529dcf13 
    00007ffa4f9a9790:  0000000000000005  0000000000000000 
    00007ffa4f9a97a0:  2525252525252525  2525252525252525 
    00007ffa4f9a97b0:  00000000000000ff  0000000000000000 
    00007ffa4f9a97c0:  00000000000000ff  0000000000000000 
    00007ffa4f9a97d0:  000000000000ff00  0000000000000000 
    00007ffa4f9a97e0:  0000555bc021c49a <net.unixSocket+314>  0000555bc0f34300 
    00007ffa4f9a97f0:  0000000000000000  0000000000000000 
    00007ffa4f9a9800:  0000000000000000  0000000000000000 
    00007ffa4f9a9810:  0000000000000000  0000000000000000 
    00007ffa4f9a9820:  20636f6c6c616d00  203a64656c696166 
    00007ffa4f9a9830: <0000000000000000  0000000000000000 
    00007ffa4f9a9840:  000000c0003a17c0  000000c0003d5d90 
    00007ffa4f9a9850:  0000000000000000  0000000000000000 
    00007ffa4f9a9860:  0000000000000000  0000000000000000 
    00007ffa4f9a9870:  0000000000000000  0000000000000000 
    00007ffa4f9a9880:  0000000000000000  0000000000000000 
    00007ffa4f9a9890:  0000000000000000  0000000000000000 
    00007ffa4f9a98a0:  0000000000000000  0000000000000000 
    00007ffa4f9a98b0:  fffffffe7fffffff  ffffffffffffffff 
    00007ffa4f9a98c0:  ffffffffffffffff  ffffffffffffffff 
    00007ffa4f9a98d0:  ffffffffffffffff  ffffffffffffffff 
    00007ffa4f9a98e0:  ffffffffffffffff  ffffffffffffffff 
    00007ffa4f9a98f0:  ffffffffffffffff  ffffffffffffffff 
    00007ffa4f9a9900:  ffffffffffffffff  ffffffffffffffff 
    00007ffa4f9a9910:  ffffffffffffffff  ffffffffffffffff 
    00007ffa4f9a9920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7ffa523fbf47
    stack: frame={sp:0x7ffa4f9a9830, fp:0x0} stack=[0x7ffa4f1aa288,0x7ffa4f9a9e88)
    00007ffa4f9a9730:  00007ffa4f9a9af0  00007ffa529e475a 
    00007ffa4f9a9740:  000000000000000b  0000000000000000 
    00007ffa4f9a9750:  00007ffa4c803700  0000555bc1459148 
    00007ffa4f9a9760:  00007ffa4f9a9c40  00007ffa40000c50 
    00007ffa4f9a9770:  0000000000000000  0000555bc0935d10 
    00007ffa4f9a9780:  0000000000000000  00007ffa529dcf13 
    00007ffa4f9a9790:  0000000000000005  0000000000000000 
    00007ffa4f9a97a0:  2525252525252525  2525252525252525 
    00007ffa4f9a97b0:  00000000000000ff  0000000000000000 
    00007ffa4f9a97c0:  00000000000000ff  0000000000000000 
    00007ffa4f9a97d0:  000000000000ff00  0000000000000000 
    00007ffa4f9a97e0:  0000555bc021c49a <net.unixSocket+314>  0000555bc0f34300 
    00007ffa4f9a97f0:  0000000000000000  0000000000000000 
    00007ffa4f9a9800:  0000000000000000  0000000000000000 
    00007ffa4f9a9810:  0000000000000000  0000000000000000 
    00007ffa4f9a9820:  20636f6c6c616d00  203a64656c696166 
    00007ffa4f9a9830: <0000000000000000  0000000000000000 
    00007ffa4f9a9840:  000000c0003a17c0  000000c0003d5d90 
    00007ffa4f9a9850:  0000000000000000  0000000000000000 
    00007ffa4f9a9860:  0000000000000000  0000000000000000 
    00007ffa4f9a9870:  0000000000000000  0000000000000000 
    00007ffa4f9a9880:  0000000000000000  0000000000000000 
    00007ffa4f9a9890:  0000000000000000  0000000000000000 
    00007ffa4f9a98a0:  0000000000000000  0000000000000000 
    00007ffa4f9a98b0:  fffffffe7fffffff  ffffffffffffffff 
    00007ffa4f9a98c0:  ffffffffffffffff  ffffffffffffffff 
    00007ffa4f9a98d0:  ffffffffffffffff  ffffffffffffffff 
    00007ffa4f9a98e0:  ffffffffffffffff  ffffffffffffffff 
    00007ffa4f9a98f0:  ffffffffffffffff  ffffffffffffffff 
    00007ffa4f9a9900:  ffffffffffffffff  ffffffffffffffff 
    00007ffa4f9a9910:  ffffffffffffffff  ffffffffffffffff 
    00007ffa4f9a9920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [runnable]:
    github.com/snapcore/snapd/client.(*Client).do(0xc0003641c0, 0x555bc0789ee7, 0x3, 0x555bc0793d78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x555bc0de3f40, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:394 +0x2f9
    github.com/snapcore/snapd/client.(*Client).doSyncWithOpts(0xc0003641c0, 0x555bc0789ee7, 0x3, 0x555bc0793d78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x555bc0d7f9a0, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:492 +0xf6
    github.com/snapcore/snapd/client.(*Client).SysInfo(0xc0003641c0, 0x46, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/client/client.go:727 +0xd4
    main.maybeWaitForSecurityProfileRegeneration(0xc0003641c0, 0xc0003a17c0, 0xd)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:200 +0x1aa
    main.(*cmdRun).Execute(0xc00023feb8, 0xc000032190, 0x2, 0x3, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:240 +0x172
    main.main()
    	/build/snapd/parts/snapd-deb/build/cmd/snap/main.go:482 +0x581
    
    goroutine 6 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    rax    0x0
    rbx    0x7ffa527a9840
    rcx    0x7ffa523fbf47
    rdx    0x0
    rdi    0x2
    rsi    0x7ffa4f9a9830
    rbp    0x555bc094fe7c
    rsp    0x7ffa4f9a9830
    r8     0x0
    r9     0x7ffa4f9a9830
    r10    0x8
    r11    0x246
    r12    0x7ffa40000c50
    r13    0x0
    r14    0x555bc0935d10
    r15    0x0
    rip    0x7ffa523fbf47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000188000)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000188000)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc000046000, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc00007e001)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc000000c00)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [syscall, locked to thread]:
    net/url.parse(0xc00046ba00, 0x0, 0x100, 0xc00046ba00, 0x0, 0xc00046ba01)
    	/usr/local/go/src/net/url/url.go:519 +0x85
    net/url.Parse(0xc00046ba00, 0x18, 0x0, 0x38, 0x0)
    	/usr/local/go/src/net/url/url.go:478 +0x85
    k8s.io/kubernetes/vendor/github.com/go-openapi/jsonreference.(*Ref).parse(0xc00044fbc8, 0xc00046ba00, 0x18, 0x4, 0xc0004b7ca8)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/jsonreference/reference.go:112 +0x39
    k8s.io/kubernetes/vendor/github.com/go-openapi/jsonreference.New(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/jsonreference/reference.go:45
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Ref).fromMap(0xc00044fd48, 0xc0004a3260, 0xb6b5, 0x1811e60)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/ref.go:182 +0xe8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0004b8b40, 0xc0003f074b, 0x38, 0xb6b5, 0x7f659610f080, 0xc0004b8b40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:569 +0x1bc
    encoding/json.(*decodeState).object(0xc0004b24d0, 0x19ce1a0, 0xc0004b8b40, 0x199, 0xc0004b24f8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0004b24d0, 0x19ce1a0, 0xc0004b8b40, 0x199, 0xc0004cbb00, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004b24d0, 0x18bc100, 0xc0004b83e0, 0x195, 0xc0004b24f8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004b24d0, 0x18bc100, 0xc0004b83e0, 0x195, 0x18bc100, 0xc0004b83e0)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004b24d0, 0x1815520, 0xc0004b8240, 0x16, 0xc0004b24f8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004b24d0, 0x1815520, 0xc0004b8240, 0x16, 0xc000450888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0004b24d0, 0x1815520, 0xc0004b8240, 0xc0004b24f8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003efdc7, 0x9ca, 0xc039, 0x1815520, 0xc0004b8240, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00041eb40, 0xc0003efdc7, 0x9ca, 0xc039, 0x7f659610f080, 0xc00041eb40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e4bb0, 0x19ce1a0, 0xc00041eb40, 0x199, 0xc0000e4bd8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e4bb0, 0x19ce1a0, 0xc00041eb40, 0x199, 0xc0004b8000, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e4bb0, 0x18e59a0, 0xc0003b2ac8, 0x195, 0xc0000e4bd8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e4bb0, 0x18e59a0, 0xc0003b2ac8, 0x195, 0x18e59a0, 0xc0003b2ac8)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e4bb0, 0x1815520, 0xc0003b2900, 0x16, 0xc0000e4bd8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e4bb0, 0x1815520, 0xc0003b2900, 0x16, 0xc000123548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e4bb0, 0x1815520, 0xc0003b2900, 0xc0000e4bd8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003ec000, 0x9d38, 0xfe00, 0x1815520, 0xc0003b2900, 0x7f6596104d88, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0003b26c0, 0xc0003ec000, 0x9d38, 0xfe00, 0x7f659610f080, 0xc0003b26c0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e4b00, 0x1a89300, 0xc0003b26c0, 0x16, 0xc0000e4b28, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e4b00, 0x1a89300, 0xc0003b26c0, 0x16, 0xc000123c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e4b00, 0x1a89300, 0xc0003b26c0, 0xc0000e4b28, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003ec000, 0x9d39, 0xfe00, 0x1a89300, 0xc0003b26c0, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc00039db30, 0xc000123d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc00039da70, 0xc00039da40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 18 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7faffa9f7f47 m=3 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7faffa9f7f47
    stack: frame={sp:0x7faff7fa5820, fp:0x0} stack=[0x7faff77a6288,0x7faff7fa5e88)
    00007faff7fa5720:  0000000000000000  00007faffadacc58 
    00007faff7fa5730:  00007faff7fa5ae0  00007faffafe075a 
    00007faff7fa5740:  000000000000000b  0000000000000000 
    00007faff7fa5750:  00007faff4dff700  00005632e45a6148 
    00007faff7fa5760:  00007faff7fa5c30  00007fafe8000da0 
    00007faff7fa5770:  0000000000000000  00005632e3a82d10 
    00007faff7fa5780:  0000000000000000  00007faffafd8f13 
    00007faff7fa5790:  0000000000000005  0000000000000000 
    00007faff7fa57a0:  2525252525252525  2525252525252525 
    00007faff7fa57b0:  00000000000000ff  0000000000000000 
    00007faff7fa57c0:  00000000000000ff  0000000000000000 
    00007faff7fa57d0:  ff000000000000ff  00000000ff000000 
    00007faff7fa57e0:  000000000000000e  000000000000000e 
    00007faff7fa57f0:  0000000000000000  0000000000000000 
    00007faff7fa5800:  ffffffffffffffff  ffffffffffffffff 
    00007faff7fa5810:  0000000400000004  0000000400000004 
    00007faff7fa5820: <0000000000000000  203a64656c696166 
    00007faff7fa5830:  0000000000000000  0000000000000000 
    00007faff7fa5840:  0000000000000000  0000000000000000 
    00007faff7fa5850:  0000000000000000  0000000000000000 
    00007faff7fa5860:  0000000000000000  0000000000000000 
    00007faff7fa5870:  0000000000000000  0000000000000000 
    00007faff7fa5880:  0000000000000000  0000000000000000 
    00007faff7fa5890:  0000000000000000  0000000000000000 
    00007faff7fa58a0:  fffffffe7fffffff  ffffffffffffffff 
    00007faff7fa58b0:  ffffffffffffffff  ffffffffffffffff 
    00007faff7fa58c0:  ffffffffffffffff  ffffffffffffffff 
    00007faff7fa58d0:  ffffffffffffffff  ffffffffffffffff 
    00007faff7fa58e0:  ffffffffffffffff  ffffffffffffffff 
    00007faff7fa58f0:  ffffffffffffffff  ffffffffffffffff 
    00007faff7fa5900:  ffffffffffffffff  ffffffffffffffff 
    00007faff7fa5910:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7faffa9f7f47
    stack: frame={sp:0x7faff7fa5820, fp:0x0} stack=[0x7faff77a6288,0x7faff7fa5e88)
    00007faff7fa5720:  0000000000000000  00007faffadacc58 
    00007faff7fa5730:  00007faff7fa5ae0  00007faffafe075a 
    00007faff7fa5740:  000000000000000b  0000000000000000 
    00007faff7fa5750:  00007faff4dff700  00005632e45a6148 
    00007faff7fa5760:  00007faff7fa5c30  00007fafe8000da0 
    00007faff7fa5770:  0000000000000000  00005632e3a82d10 
    00007faff7fa5780:  0000000000000000  00007faffafd8f13 
    00007faff7fa5790:  0000000000000005  0000000000000000 
    00007faff7fa57a0:  2525252525252525  2525252525252525 
    00007faff7fa57b0:  00000000000000ff  0000000000000000 
    00007faff7fa57c0:  00000000000000ff  0000000000000000 
    00007faff7fa57d0:  ff000000000000ff  00000000ff000000 
    00007faff7fa57e0:  000000000000000e  000000000000000e 
    00007faff7fa57f0:  0000000000000000  0000000000000000 
    00007faff7fa5800:  ffffffffffffffff  ffffffffffffffff 
    00007faff7fa5810:  0000000400000004  0000000400000004 
    00007faff7fa5820: <0000000000000000  203a64656c696166 
    00007faff7fa5830:  0000000000000000  0000000000000000 
    00007faff7fa5840:  0000000000000000  0000000000000000 
    00007faff7fa5850:  0000000000000000  0000000000000000 
    00007faff7fa5860:  0000000000000000  0000000000000000 
    00007faff7fa5870:  0000000000000000  0000000000000000 
    00007faff7fa5880:  0000000000000000  0000000000000000 
    00007faff7fa5890:  0000000000000000  0000000000000000 
    00007faff7fa58a0:  fffffffe7fffffff  ffffffffffffffff 
    00007faff7fa58b0:  ffffffffffffffff  ffffffffffffffff 
    00007faff7fa58c0:  ffffffffffffffff  ffffffffffffffff 
    00007faff7fa58d0:  ffffffffffffffff  ffffffffffffffff 
    00007faff7fa58e0:  ffffffffffffffff  ffffffffffffffff 
    00007faff7fa58f0:  ffffffffffffffff  ffffffffffffffff 
    00007faff7fa5900:  ffffffffffffffff  ffffffffffffffff 
    00007faff7fa5910:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [runnable]:
    github.com/snapcore/snapd/client.(*Client).do(0xc0003581c0, 0x5632e38d6ee7, 0x3, 0x5632e38e0d78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x5632e3f30f40, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:394 +0x2f9
    github.com/snapcore/snapd/client.(*Client).doSyncWithOpts(0xc0003581c0, 0x5632e38d6ee7, 0x3, 0x5632e38e0d78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x5632e3ecc9a0, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:492 +0xf6
    github.com/snapcore/snapd/client.(*Client).SysInfo(0xc0003581c0, 0x46, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/client/client.go:727 +0xd4
    main.maybeWaitForSecurityProfileRegeneration(0xc0003581c0, 0xc0003897c0, 0xd)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:200 +0x1aa
    main.(*cmdRun).Execute(0xc000251eb8, 0xc0000a8160, 0x2, 0x3, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:240 +0x172
    main.main()
    	/build/snapd/parts/snapd-deb/build/cmd/snap/main.go:482 +0x581
    
    goroutine 19 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    rax    0x0
    rbx    0x7faffada5840
    rcx    0x7faffa9f7f47
    rdx    0x0
    rdi    0x2
    rsi    0x7faff7fa5820
    rbp    0x5632e3a9ce7c
    rsp    0x7faff7fa5820
    r8     0x0
    r9     0x7faff7fa5820
    r10    0x8
    r11    0x246
    r12    0x7fafe8000da0
    r13    0x0
    r14    0x5632e3a82d10
    r15    0x0
    rip    0x7faffa9f7f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
