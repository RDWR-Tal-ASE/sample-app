apiVersion: v1
kind: Service
metadata:
  name: staging-sample-hackazon-service
  namespace: test
spec:
  selector:
    app: staging-hackazon
  ports:
    - port: 80
      targetPort: 80
      name: http
      protocol: TCP
---
# Source: sample-istio-integration/templates/sample-apps/bwapp/bwapp-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: staging-sample-bwapp-service
  namespace: test
  labels:
    waas.radware.com/sample: staging-bwapp
spec:
  selector:
    app: sample-bwapp-container
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
      name: http
      protocol: TCP
---
# Source: sample-istio-integration/templates/sample-apps/httpbin/httpbin-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: staging-sample-httpbin-service
  namespace: test
  labels:
    waas.radware.com/sample: staging-httpbin
spec:
  selector:
    app: sample-httpbin-container
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8080
      name: http
      protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: staging-sample-hackazon-deployment
  namespace: test
spec:
  selector:
    matchLabels:
      app: staging-hackazon
  template:
    metadata:
      labels:
        app: staging-hackazon
    spec:
      containers:
        - name: sample-hackazon
          image: sambercovici/hackazon
          imagePullPolicy: IfNotPresent
          readinessProbe:
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
            httpGet:
              path: /
              port: 80
              scheme: HTTP
          livenessProbe:
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
            httpGet:
              path: /
              port: 80
              scheme: HTTP
---
# Source: sample-istio-integration/templates/sample-apps/bwapp/bwapp-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: staging-sample-bwapp-deployment
  namespace: test
  labels:
    waas.radware.com/sample: staging-bwapp
spec:
  selector:
    matchLabels:
      app: sample-bwapp-container
  template:
    metadata:
      labels:
        app: sample-bwapp-container
        waas.radware.com/protection: enabled
    spec:
      containers:
        - image: raesene/bwapp
          imagePullPolicy: IfNotPresent
          name: sample-bwapp
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /install.php?install=yes
              port: 80
              scheme: HTTP
---
# Source: sample-istio-integration/templates/sample-apps/httpbin/httpbin-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: staging-sample-httpbin-deployment
  namespace: test
  labels:
    waas.radware.com/sample: staging-httpbin
spec:
  selector:
    matchLabels:
      app: sample-httpbin-container
  template:
    metadata:
      labels:
        app: sample-httpbin-container
        waas.radware.com/protection: enabled
    spec:
      containers:
        - image: kennethreitz/httpbin:latest
          imagePullPolicy: IfNotPresent
          name: sample-httpbin
          command:
            - gunicorn
            - "-b=[::]:8080"
            - httpbin:app
            - -k
            - gevent
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: staging-hackazon-gateway
  namespace: test
spec:
  selector:
    istio: ingressgateway # use Istio default gateway implementation
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "staging-hackazon.kwaf-demo.test"
---
# Source: sample-istio-integration/templates/sample-apps/bwapp/bwapp-istio-ingress.yaml
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: staging-bwapp-gateway
  namespace: test
spec:
  selector:
    istio: ingressgateway # use Istio default gateway implementation
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "staging-bwapp.kwaf-demo.test"
---
# Source: sample-istio-integration/templates/sample-apps/httpbin/httpbin-istio-ingress.yaml
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: staging-httpbin-gateway
  namespace: test
spec:
  selector:
    istio: ingressgateway # use Istio default gateway implementation
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "staging-httpbin.kwaf-demo.test"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: staging-hackazon
  namespace: test
spec:
  hosts:
  - "staging-hackazon.kwaf-demo.test"
  gateways:
  - staging-hackazon-gateway
  http:
  - match:
    - uri:
        prefix: /
    route:
    - destination:
        port:
          number: 80
        host: staging-sample-hackazon-service.test.svc.cluster.local
---
# Source: sample-istio-integration/templates/sample-apps/bwapp/bwapp-istio-ingress.yaml
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: staging-bwapp
  namespace: test
spec:
  hosts:
  - "staging-bwapp.kwaf-demo.test"
  gateways:
  - staging-bwapp-gateway
  http:
  - match:
    - uri:
        prefix: /
    route:
    - destination:
        port:
          number: 80
        host: staging-sample-bwapp-service.radware.svc.cluster.local
---
# Source: sample-istio-integration/templates/sample-apps/httpbin/httpbin-istio-ingress.yaml
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: staging-httpbin
  namespace: test
spec:
  hosts:
  - "staging-httpbin.kwaf-demo.test"
  gateways:
  - staging-httpbin-gateway
  http:
  - match:
    - uri:
        prefix: /
    route:
    - destination:
        port:
          number: 80
        host: staging-sample-httpbin-service.test.svc.cluster.local
---
apiVersion: v1
kind: Service
metadata:
  name: sample-attacker-service
  name: test
  labels:
    waas.radware.com/sample: attacker
spec:
  selector:
    app: sample-attacker-container
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
      name: http
      protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sample-attacker-deployment
  namespace: test
  labels:
    waas.radware.com/sample: attacker
spec:
  selector:
    matchLabels:
      app: sample-attacker-container
  template:
    metadata:
      labels:
        app: sample-attacker-container
        waas.radware.com/protection: enabled
    spec:
      containers:
        - name: sample-attacker
          image: talyradware/myrepo:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: attacker-gateway
  namespace: test
spec:
  selector:
    istio: ingressgateway # use Istio default gateway implementation
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "attacker.kwaf-demo.test"
---
# Source: sample-istio-integration/templates/sample-apps/bypass/bypass-istio-ingress.yaml
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: attacker
  namespace: test
spec:
  hosts:
  - "attacker.kwaf-demo.test"
  gateways:
  - attacker-gateway
  http:
  - match:
    - uri:
        prefix: /
    route:
    - destination:
        port:
          number: 80
        host: sample-attacker-service.test.svc.cluster.local
