apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: 
    -----
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7fafe5294f47 m=0 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7fafe5294f47
    stack: frame={sp:0x7fff4b267850, fp:0x0} stack=[0x7fff4aa68d40,0x7fff4b267d80)
    00007fff4b267750:  2f3a656369767265  0000ffff00001fa0 
    00007fff4b267760:  00007fff4b267c60  000000000219a690 
    00007fff4b267770:  0000000000000000  0000000000593e90 
    00007fff4b267780:  0000000000000000  00007fafe5875f13 
    00007fff4b267790:  0000000000000005  0000000000000000 
    00007fff4b2677a0:  0000000000000000  00007fafe5266ce0 
    00007fff4b2677b0:  00007fff4b267b70  00007fafe587d75a 
    00007fff4b2677c0:  0000000000000000  0000000000000000 
    00007fff4b2677d0:  0000000000000000  00007fff4b267c60 
    00007fff4b2677e0:  2525252525252525  2525252525252525 
    00007fff4b2677f0:  00000000ff00ff00  0000000000000000 
    00007fff4b267800:  00000000ff000000  0000000000000000 
    00007fff4b267810:  0000000000000000  0000000000000000 
    00007fff4b267820:  2f7273752f3a6e69  73752f3a6e696273 
    00007fff4b267830:  752f3a6e69622f72  6c61636f6c2f7273 
    00007fff4b267840:  73752f3a6e69622f  732f6e6962732f72 
    00007fff4b267850: <0000000000000000  6e69622f70616e73 
    00007fff4b267860:  6c6c616d00732520  656c69616620636f 
    00007fff4b267870:  0000000000000000  0000000000000000 
    00007fff4b267880:  0000000000000000  0000000000000000 
    00007fff4b267890:  0000000000000000  0000000000000000 
    00007fff4b2678a0:  0000000000000000  0000000000000000 
    00007fff4b2678b0:  0000000000000000  0000000000000000 
    00007fff4b2678c0:  0000000000000000  0000000000000000 
    00007fff4b2678d0:  fffffffe7fffffff  ffffffffffffffff 
    00007fff4b2678e0:  ffffffffffffffff  ffffffffffffffff 
    00007fff4b2678f0:  ffffffffffffffff  ffffffffffffffff 
    00007fff4b267900:  ffffffffffffffff  ffffffffffffffff 
    00007fff4b267910:  ffffffffffffffff  ffffffffffffffff 
    00007fff4b267920:  ffffffffffffffff  ffffffffffffffff 
    00007fff4b267930:  ffffffffffffffff  ffffffffffffffff 
    00007fff4b267940:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7fafe5294f47
    stack: frame={sp:0x7fff4b267850, fp:0x0} stack=[0x7fff4aa68d40,0x7fff4b267d80)
    00007fff4b267750:  2f3a656369767265  0000ffff00001fa0 
    00007fff4b267760:  00007fff4b267c60  000000000219a690 
    00007fff4b267770:  0000000000000000  0000000000593e90 
    00007fff4b267780:  0000000000000000  00007fafe5875f13 
    00007fff4b267790:  0000000000000005  0000000000000000 
    00007fff4b2677a0:  0000000000000000  00007fafe5266ce0 
    00007fff4b2677b0:  00007fff4b267b70  00007fafe587d75a 
    00007fff4b2677c0:  0000000000000000  0000000000000000 
    00007fff4b2677d0:  0000000000000000  00007fff4b267c60 
    00007fff4b2677e0:  2525252525252525  2525252525252525 
    00007fff4b2677f0:  00000000ff00ff00  0000000000000000 
    00007fff4b267800:  00000000ff000000  0000000000000000 
    00007fff4b267810:  0000000000000000  0000000000000000 
    00007fff4b267820:  2f7273752f3a6e69  73752f3a6e696273 
    00007fff4b267830:  752f3a6e69622f72  6c61636f6c2f7273 
    00007fff4b267840:  73752f3a6e69622f  732f6e6962732f72 
    00007fff4b267850: <0000000000000000  6e69622f70616e73 
    00007fff4b267860:  6c6c616d00732520  656c69616620636f 
    00007fff4b267870:  0000000000000000  0000000000000000 
    00007fff4b267880:  0000000000000000  0000000000000000 
    00007fff4b267890:  0000000000000000  0000000000000000 
    00007fff4b2678a0:  0000000000000000  0000000000000000 
    00007fff4b2678b0:  0000000000000000  0000000000000000 
    00007fff4b2678c0:  0000000000000000  0000000000000000 
    00007fff4b2678d0:  fffffffe7fffffff  ffffffffffffffff 
    00007fff4b2678e0:  ffffffffffffffff  ffffffffffffffff 
    00007fff4b2678f0:  ffffffffffffffff  ffffffffffffffff 
    00007fff4b267900:  ffffffffffffffff  ffffffffffffffff 
    00007fff4b267910:  ffffffffffffffff  ffffffffffffffff 
    00007fff4b267920:  ffffffffffffffff  ffffffffffffffff 
    00007fff4b267930:  ffffffffffffffff  ffffffffffffffff 
    00007fff4b267940:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [running, locked to thread]:
    runtime.asmcgocall(0x50e6e0, 0xc00003c708)
    	/usr/lib/go-1.13/src/runtime/asm_amd64.s:640 +0x42 fp=0xc00003c6f0 sp=0xc00003c6e8 pc=0x458372
    runtime.newm1(0xc000040e00)
    	/usr/lib/go-1.13/src/runtime/proc.go:1848 +0xa4 fp=0xc00003c730 sp=0xc00003c6f0 pc=0x4344b4
    runtime.newm(0x57a500, 0x0)
    	/usr/lib/go-1.13/src/runtime/proc.go:1832 +0x8f fp=0xc00003c760 sp=0xc00003c730 pc=0x43435f
    runtime.startTemplateThread(...)
    	/usr/lib/go-1.13/src/runtime/proc.go:1868
    runtime.main()
    	/usr/lib/go-1.13/src/runtime/proc.go:186 +0x2c3 fp=0xc00003c7e0 sp=0xc00003c760 pc=0x430633
    runtime.goexit()
    	/usr/lib/go-1.13/src/runtime/asm_amd64.s:1357 +0x1 fp=0xc00003c7e8 sp=0xc00003c7e0 pc=0x458c21
    
    rax    0x0
    rbx    0x7fafe5642840
    rcx    0x7fafe5294f47
    rdx    0x0
    rdi    0x2
    rsi    0x7fff4b267850
    rbp    0x59f2ca
    rsp    0x7fff4b267850
    r8     0x0
    r9     0x7fff4b267850
    r10    0x8
    r11    0x246
    r12    0x219a690
    r13    0x0
    r14    0x593e90
    r15    0x0
    rip    0x7fafe5294f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    -----
    Error: bad file '-': yaml: line 11: mapping values are not allowed in this context
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 9 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    runtime: failed to create new OS thread (have 10 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000500400)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000500400)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc000055000, 0x8)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0x426301)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc000352900)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [runnable, locked to thread]:
    reflect.mapassign(0x18bbf80, 0xc0000baba0, 0xc00059cdd0, 0xc00059cdb0)
    	/usr/local/go/src/runtime/map.go:1319 +0x3f
    reflect.Value.SetMapIndex(0x18bbf80, 0xc0005980e0, 0x195, 0x1858200, 0xc00059cdd0, 0x98, 0x1897a80, 0xc00059cdb0, 0x194)
    	/usr/local/go/src/reflect/value.go:1706 +0x27c
    encoding/json.(*decodeState).object(0xc0000d24d0, 0x1811e60, 0xc0005980e0, 0x16, 0xc0000d24f8, 0x17b)
    	/usr/local/go/src/encoding/json/decode.go:807 +0x8da
    encoding/json.(*decodeState).value(0xc0000d24d0, 0x1811e60, 0xc0005980e0, 0x16, 0xc00041fc10, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000d24d0, 0x1811e60, 0xc0005980e0, 0xc0000d24f8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003aab61, 0x35, 0xd29f, 0x1811e60, 0xc0005980e0, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0000d0000, 0xc0003aab61, 0x35, 0xd29f, 0x7f9628719b00, 0xc0000d0000)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:565 +0x18b
    encoding/json.(*decodeState).object(0xc0000c1a20, 0x19ce1a0, 0xc0000d0000, 0x199, 0xc0000c1a48, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000c1a20, 0x19ce1a0, 0xc0000d0000, 0x199, 0xc0000dc240, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000c1a20, 0x18bc100, 0xc0000cdee0, 0x195, 0xc0000c1a48, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000c1a20, 0x18bc100, 0xc0000cdee0, 0x195, 0x18bc100, 0xc0000cdee0)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000c1a20, 0x1815520, 0xc0000cdd40, 0x16, 0xc0000c1a48, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000c1a20, 0x1815520, 0xc0000cdd40, 0x16, 0xc0004208d0, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000c1a20, 0x1815520, 0xc0000cdd40, 0xc0000c1a48, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003aa8d6, 0x6e6, 0xd52a, 0x1815520, 0xc0000cdd40, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000370900, 0xc0003aa8d6, 0x6e6, 0xd52a, 0x7f9628719b00, 0xc000370900)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0002bb080, 0x19ce1a0, 0xc000370900, 0x199, 0xc0002bb0a8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0002bb080, 0x19ce1a0, 0xc000370900, 0x199, 0xc0000cdb00, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0002bb080, 0x18e59a0, 0xc0002c1188, 0x195, 0xc0002bb0a8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0002bb080, 0x18e59a0, 0xc0002c1188, 0x195, 0x18e59a0, 0xc0002c1188)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0002bb080, 0x1815520, 0xc0002c0fc0, 0x16, 0xc0002bb0a8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0002bb080, 0x1815520, 0xc0002c0fc0, 0x16, 0xc000421590, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0002bb080, 0x1815520, 0xc0002c0fc0, 0xc0002bb0a8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003a8000, 0x9d38, 0xfe00, 0x1815520, 0xc0002c0fc0, 0x7f962867cba8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0002c0d80, 0xc0003a8000, 0x9d38, 0xfe00, 0x7f9628719b00, 0xc0002c0d80)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0002bafd0, 0x1a89300, 0xc0002c0d80, 0x16, 0xc0002baff8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0002bafd0, 0x1a89300, 0xc0002c0d80, 0x16, 0xc000421c60, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0002bafd0, 0x1a89300, 0xc0002c0d80, 0xc0002baff8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003a8000, 0x9d39, 0xfe00, 0x1a89300, 0xc0002c0d80, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc0001fa6c0, 0x0, 0x0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.4()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:38 +0x57
    
    goroutine 6 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000580400)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000580400)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x0, 0xc000048800, 0x9)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0xc000048800, 0x2a6cc00)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.handoffp(0xc000048800)
    	/usr/local/go/src/runtime/proc.go:2001 +0x52
    runtime.stoplockedm()
    	/usr/local/go/src/runtime/proc.go:2075 +0xf7
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2611 +0x48c
    runtime.goschedImpl(0xc000000180)
    	/usr/local/go/src/runtime/proc.go:2860 +0xda
    runtime.gopreempt_m(0xc000000180)
    	/usr/local/go/src/runtime/proc.go:2888 +0x34
    runtime.newstack()
    	/usr/local/go/src/runtime/stack.go:1047 +0x1bc
    runtime.morestack()
    	/usr/local/go/src/runtime/asm_amd64.s:449 +0x8f
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
