apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7fd06ce0af47 m=0 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7fd06ce0af47
    stack: frame={sp:0x7ffeedefb6b0, fp:0x0} stack=[0x7ffeed6fcd50,0x7ffeedefbd80)
    00007ffeedefb5b0:  000055ca74a93683 <runtime.main+883>  000000000030da24 
    00007ffeedefb5c0:  0000029300000002  000000506cdcb700 
    00007ffeedefb5d0:  000000000030da24  00007ffeedefb688 
    00007ffeedefb5e0:  0000000000000000  0000000000000000 
    00007ffeedefb5f0:  00007fd06d1b8560  00007fd06d1bbbc0 
    00007ffeedefb600:  000000c42006ffd0  000055ca74a933e0 <runtime.main+208> 
    00007ffeedefb610:  000055ca75787970  0000000000000000 
    00007ffeedefb620:  0000000000000000  0000000000000000 
    00007ffeedefb630:  0000000000000000  0000000000000000 
    00007ffeedefb640:  0000000000000000  0000000000000000 
    00007ffeedefb650:  000000c420000180  0000000000000000 
    00007ffeedefb660:  000055ca74a933e0 <runtime.main+208>  000055ca75787970 
    00007ffeedefb670:  0000000000000000  0000000000000000 
    00007ffeedefb680:  0000000000000000  0000000000000000 
    00007ffeedefb690:  0000000000000000  0000000000000000 
    00007ffeedefb6a0:  0000000000000000  000000c420000180 
    00007ffeedefb6b0: <0000000000000000  000055ca74abef31 <runtime.goexit+1> 
    00007ffeedefb6c0:  0000000000000000  0000000000000000 
    00007ffeedefb6d0:  0000000000000000  0000000000000000 
    00007ffeedefb6e0:  0000000000000000  000055ca74abef31 <runtime.goexit+1> 
    00007ffeedefb6f0:  000055ca75b353c0  00007ffeedefba00 
    00007ffeedefb700:  000055ca74ab3962 <runtime.gentraceback+4850>  00007ffeedefb9a8 
    00007ffeedefb710:  00007ffeedefba98  000055ca75b35301 
    00007ffeedefb720:  00007ffeedefb801  0000000000000000 
    00007ffeedefb730:  fffffffe7fffffff  ffffffffffffffff 
    00007ffeedefb740:  ffffffffffffffff  ffffffffffffffff 
    00007ffeedefb750:  ffffffffffffffff  ffffffffffffffff 
    00007ffeedefb760:  ffffffffffffffff  ffffffffffffffff 
    00007ffeedefb770:  ffffffffffffffff  ffffffffffffffff 
    00007ffeedefb780:  ffffffffffffffff  ffffffffffffffff 
    00007ffeedefb790:  ffffffffffffffff  ffffffffffffffff 
    00007ffeedefb7a0:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7fd06ce0af47
    stack: frame={sp:0x7ffeedefb6b0, fp:0x0} stack=[0x7ffeed6fcd50,0x7ffeedefbd80)
    00007ffeedefb5b0:  000055ca74a93683 <runtime.main+883>  000000000030da24 
    00007ffeedefb5c0:  0000029300000002  000000506cdcb700 
    00007ffeedefb5d0:  000000000030da24  00007ffeedefb688 
    00007ffeedefb5e0:  0000000000000000  0000000000000000 
    00007ffeedefb5f0:  00007fd06d1b8560  00007fd06d1bbbc0 
    00007ffeedefb600:  000000c42006ffd0  000055ca74a933e0 <runtime.main+208> 
    00007ffeedefb610:  000055ca75787970  0000000000000000 
    00007ffeedefb620:  0000000000000000  0000000000000000 
    00007ffeedefb630:  0000000000000000  0000000000000000 
    00007ffeedefb640:  0000000000000000  0000000000000000 
    00007ffeedefb650:  000000c420000180  0000000000000000 
    00007ffeedefb660:  000055ca74a933e0 <runtime.main+208>  000055ca75787970 
    00007ffeedefb670:  0000000000000000  0000000000000000 
    00007ffeedefb680:  0000000000000000  0000000000000000 
    00007ffeedefb690:  0000000000000000  0000000000000000 
    00007ffeedefb6a0:  0000000000000000  000000c420000180 
    00007ffeedefb6b0: <0000000000000000  000055ca74abef31 <runtime.goexit+1> 
    00007ffeedefb6c0:  0000000000000000  0000000000000000 
    00007ffeedefb6d0:  0000000000000000  0000000000000000 
    00007ffeedefb6e0:  0000000000000000  000055ca74abef31 <runtime.goexit+1> 
    00007ffeedefb6f0:  000055ca75b353c0  00007ffeedefba00 
    00007ffeedefb700:  000055ca74ab3962 <runtime.gentraceback+4850>  00007ffeedefb9a8 
    00007ffeedefb710:  00007ffeedefba98  000055ca75b35301 
    00007ffeedefb720:  00007ffeedefb801  0000000000000000 
    00007ffeedefb730:  fffffffe7fffffff  ffffffffffffffff 
    00007ffeedefb740:  ffffffffffffffff  ffffffffffffffff 
    00007ffeedefb750:  ffffffffffffffff  ffffffffffffffff 
    00007ffeedefb760:  ffffffffffffffff  ffffffffffffffff 
    00007ffeedefb770:  ffffffffffffffff  ffffffffffffffff 
    00007ffeedefb780:  ffffffffffffffff  ffffffffffffffff 
    00007ffeedefb790:  ffffffffffffffff  ffffffffffffffff 
    00007ffeedefb7a0:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [running, locked to thread]:
    runtime.systemstack_switch()
    	/usr/lib/go-1.10/src/runtime/asm_amd64.s:363 fp=0xc420081f00 sp=0xc420081ef8 pc=0x55ca74abc370
    runtime.newproc(0x55ca00000000, 0x55ca757878f8)
    	/usr/lib/go-1.10/src/runtime/proc.go:3243 +0x64 fp=0xc420081f40 sp=0xc420081f00 pc=0x55ca74a9b264
    runtime.init.4()
    	/usr/lib/go-1.10/src/runtime/proc.go:237 +0x37 fp=0xc420081f60 sp=0xc420081f40 pc=0x55ca74a936d7
    runtime.init()
    	<autogenerated>:1 +0xe5 fp=0xc420081f88 sp=0xc420081f60 pc=0x55ca74abbf45
    runtime.main()
    	/usr/lib/go-1.10/src/runtime/proc.go:144 +0xd0 fp=0xc420081fe0 sp=0xc420081f88 pc=0x55ca74a933e0
    runtime.goexit()
    	/usr/lib/go-1.10/src/runtime/asm_amd64.s:2361 +0x1 fp=0xc420081fe8 sp=0xc420081fe0 pc=0x55ca74abef31
    
    rax    0x0
    rbx    0x7fd06d1b8840
    rcx    0x7fd06ce0af47
    rdx    0x0
    rdi    0x2
    rsi    0x7ffeedefb6b0
    rbp    0x55ca7528d32a
    rsp    0x7ffeedefb6b0
    r8     0x0
    r9     0x7ffeedefb6b0
    r10    0x8
    r11    0x246
    r12    0x55ca76ceb3f0
    r13    0xf1
    r14    0x11
    r15    0x0
    rip    0x7fd06ce0af47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 5 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc0002f2800)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc0002f2800)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x0, 0xc000046000, 0x4)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0xc000046000, 0x2a6cc00)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.handoffp(0xc000046000)
    	/usr/local/go/src/runtime/proc.go:2001 +0x52
    runtime.entersyscallblock_handoff()
    	/usr/local/go/src/runtime/proc.go:3213 +0x30
    runtime.systemstack(0x46c2f4)
    	/usr/local/go/src/runtime/asm_amd64.s:370 +0x66
    runtime.mstart()
    	/usr/local/go/src/runtime/proc.go:1116
    
    goroutine 1 [syscall, locked to thread]:
    runtime.notetsleepg(0x2a9eb78, 0xffffffffffffffff, 0xc000046000)
    	/usr/local/go/src/runtime/lock_futex.go:235 +0x34 fp=0xc000429fc8 sp=0xc000429f98 pc=0x40c454
    runtime.gcBgMarkStartWorkers()
    	/usr/local/go/src/runtime/mgc.go:1840 +0x90 fp=0xc00042a008 sp=0xc000429fc8 pc=0x41d150
    runtime.gcStart(0x0, 0x0, 0x0)
    	/usr/local/go/src/runtime/mgc.go:1296 +0x1ca fp=0xc00042a080 sp=0xc00042a008 pc=0x41bc2a
    runtime.mallocgc(0x240, 0x19ce1a0, 0xf8bb458649274d01, 0xc000497210)
    	/usr/local/go/src/runtime/malloc.go:1153 +0x470 fp=0xc00042a120 sp=0xc00042a080 pc=0x40da30
    runtime.newobject(...)
    	/usr/local/go/src/runtime/malloc.go:1195
    runtime.mapassign(0x18bc100, 0xc00047d830, 0xc000497210, 0xc000497210)
    	/usr/local/go/src/runtime/map.go:667 +0x28b fp=0xc00042a1a0 sp=0xc00042a120 pc=0x40fd2b
    reflect.mapassign(0x18bc100, 0xc00047d830, 0xc000497210, 0xc0004ae6c0)
    	/usr/local/go/src/runtime/map.go:1319 +0x3f fp=0xc00042a1d0 sp=0xc00042a1a0 pc=0x46795f
    reflect.Value.SetMapIndex(0x18bc100, 0xc0004a7ee0, 0x195, 0x1858200, 0xc000497210, 0x98, 0x19ce1a0, 0xc0004ae6c0, 0x199)
    	/usr/local/go/src/reflect/value.go:1706 +0x27c fp=0xc00042a250 sp=0xc00042a1d0 pc=0x4a08fc
    encoding/json.(*decodeState).object(0xc0004a09a0, 0x18bc100, 0xc0004a7ee0, 0x195, 0xc0004a09c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:807 +0x8da fp=0xc00042a4e0 sp=0xc00042a250 pc=0x6eb01a
    encoding/json.(*decodeState).value(0xc0004a09a0, 0x18bc100, 0xc0004a7ee0, 0x195, 0x18bc100, 0xc0004a7ee0)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d fp=0xc00042a548 sp=0xc00042a4e0 pc=0x6e904d
    encoding/json.(*decodeState).object(0xc0004a09a0, 0x1815520, 0xc0004a7d40, 0x16, 0xc0004a09c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe fp=0xc00042a7d8 sp=0xc00042a548 pc=0x6eba3e
    encoding/json.(*decodeState).value(0xc0004a09a0, 0x1815520, 0xc0004a7d40, 0x16, 0xc00042a888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d fp=0xc00042a840 sp=0xc00042a7d8 pc=0x6e904d
    encoding/json.(*decodeState).unmarshal(0xc0004a09a0, 0x1815520, 0xc0004a7d40, 0xc0004a09c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea fp=0xc00042a8c8 sp=0xc00042a840 pc=0x6e87ca
    encoding/json.Unmarshal(0xc0003c67b5, 0x9e1, 0xb64b, 0x1815520, 0xc0004a7d40, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112 fp=0xc00042a910 sp=0xc00042a8c8 pc=0x6e8172
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0003fa000, 0xc0003c67b5, 0x9e1, 0xb64b, 0x7f7df7058b00, 0xc0003fa000)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b fp=0xc00042ac18 sp=0xc00042a910 pc=0x12e334b
    encoding/json.(*decodeState).object(0xc0000bea50, 0x19ce1a0, 0xc0003fa000, 0x199, 0xc0000bea78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c fp=0xc00042aea8 sp=0xc00042ac18 pc=0x6ec7bc
    encoding/json.(*decodeState).value(0xc0000bea50, 0x19ce1a0, 0xc0003fa000, 0x199, 0xc0004a7b00, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d fp=0xc00042af10 sp=0xc00042aea8 pc=0x6e904d
    encoding/json.(*decodeState).object(0xc0000bea50, 0x18e59a0, 0xc00037df08, 0x195, 0xc0000bea78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe fp=0xc00042b1a0 sp=0xc00042af10 pc=0x6eba3e
    encoding/json.(*decodeState).value(0xc0000bea50, 0x18e59a0, 0xc00037df08, 0x195, 0x18e59a0, 0xc00037df08)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d fp=0xc00042b208 sp=0xc00042b1a0 pc=0x6e904d
    encoding/json.(*decodeState).object(0xc0000bea50, 0x1815520, 0xc00037dd40, 0x16, 0xc0000bea78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe fp=0xc00042b498 sp=0xc00042b208 pc=0x6eba3e
    encoding/json.(*decodeState).value(0xc0000bea50, 0x1815520, 0xc00037dd40, 0x16, 0xc0000fb548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d fp=0xc00042b500 sp=0xc00042b498 pc=0x6e904d
    encoding/json.(*decodeState).unmarshal(0xc0000bea50, 0x1815520, 0xc00037dd40, 0xc0000bea78, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea fp=0xc00042b588 sp=0xc00042b500 pc=0x6e87ca
    encoding/json.Unmarshal(0xc0003c2000, 0x9d38, 0xfe00, 0x1815520, 0xc00037dd40, 0x7f7df70f9898, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112 fp=0xc00042b5d0 sp=0xc00042b588 pc=0x6e8172
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00037db00, 0xc0003c2000, 0x9d38, 0xfe00, 0x7f7df7058b00, 0xc00037db00)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b fp=0xc00042b8d8 sp=0xc00042b5d0 pc=0x12e334b
    encoding/json.(*decodeState).object(0xc0000be9a0, 0x1a89300, 0xc00037db00, 0x16, 0xc0000be9c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c fp=0xc00042bb68 sp=0xc00042b8d8 pc=0x6ec7bc
    encoding/json.(*decodeState).value(0xc0000be9a0, 0x1a89300, 0xc00037db00, 0x16, 0xc0000fbc18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d fp=0xc00042bbd0 sp=0xc00042bb68 pc=0x6e904d
    encoding/json.(*decodeState).unmarshal(0xc0000be9a0, 0x1a89300, 0xc00037db00, 0xc0000be9c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea fp=0xc00042bc58 sp=0xc00042bbd0 pc=0x6e87ca
    encoding/json.Unmarshal(0xc0003c2000, 0x9d39, 0xfe00, 0x1a89300, 0xc00037db00, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112 fp=0xc00042bca0 sp=0xc00042bc58 pc=0x6e8172
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc000379b30, 0xc0000fbd68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8 fp=0xc00042bd08 sp=0xc00042bca0 pc=0x12e3bb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc000379a70, 0xc000379a40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35 fp=0xc00042bd58 sp=0xc00042bd08 pc=0x12dedb5
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25 fp=0xc00042bd78 sp=0xc00042bd58 pc=0x12ded25
    runtime.doInit(0x288d900)
    	/usr/local/go/src/runtime/proc.go:5646 +0x8a fp=0xc00042bda8 sp=0xc00042bd78 pc=0x446f8a
    runtime.doInit(0x2884b40)
    	/usr/local/go/src/runtime/proc.go:5641 +0x57 fp=0xc00042bdd8 sp=0xc00042bda8 pc=0x446f57
    runtime.doInit(0x2883340)
    	/usr/local/go/src/runtime/proc.go:5641 +0x57 fp=0xc00042be08 sp=0xc00042bdd8 pc=0x446f57
    runtime.doInit(0x287fd40)
    	/usr/local/go/src/runtime/proc.go:5641 +0x57 fp=0xc00042be38 sp=0xc00042be08 pc=0x446f57
    runtime.doInit(0x287c780)
    	/usr/local/go/src/runtime/proc.go:5641 +0x57 fp=0xc00042be68 sp=0xc00042be38 pc=0x446f57
    runtime.doInit(0x287c740)
    	/usr/local/go/src/runtime/proc.go:5641 +0x57 fp=0xc00042be98 sp=0xc00042be68 pc=0x446f57
    runtime.doInit(0x287c700)
    	/usr/local/go/src/runtime/proc.go:5641 +0x57 fp=0xc00042bec8 sp=0xc00042be98 pc=0x446f57
    runtime.doInit(0x288ff40)
    	/usr/local/go/src/runtime/proc.go:5641 +0x57 fp=0xc00042bef8 sp=0xc00042bec8 pc=0x446f57
    runtime.doInit(0x288c0e0)
    	/usr/local/go/src/runtime/proc.go:5641 +0x57 fp=0xc00042bf28 sp=0xc00042bef8 pc=0x446f57
    runtime.doInit(0x28926a0)
    	/usr/local/go/src/runtime/proc.go:5641 +0x57 fp=0xc00042bf58 sp=0xc00042bf28 pc=0x446f57
    runtime.doInit(0x2882980)
    	/usr/local/go/src/runtime/proc.go:5641 +0x57 fp=0xc00042bf88 sp=0xc00042bf58 pc=0x446f57
    runtime.main()
    	/usr/local/go/src/runtime/proc.go:191 +0x1c5 fp=0xc00042bfe0 sp=0xc00042bf88 pc=0x439c05
    runtime.goexit()
    	/usr/local/go/src/runtime/asm_amd64.s:1374 +0x1 fp=0xc00042bfe8 sp=0xc00042bfe0 pc=0x46e061
    
    goroutine 6 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000108000)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000108000)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc00004b000, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc00006df01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc000000a80)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
