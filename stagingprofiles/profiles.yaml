apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f3a7cbadf47 m=5 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f3a7cbadf47
    stack: frame={sp:0x7f3a79159830, fp:0x0} stack=[0x7f3a7895a288,0x7f3a79159e88)
    00007f3a79159730:  00007f3a79159af0  00007f3a7d19675a 
    00007f3a79159740:  000000000000000b  0000000000000000 
    00007f3a79159750:  00007f3a73e9f700  000055b11e7b4148 
    00007f3a79159760:  00007f3a79159c40  000055b11f0ef3f0 
    00007f3a79159770:  0000000000000000  000055b11dc90d10 
    00007f3a79159780:  0000000000000000  00007f3a7d18ef13 
    00007f3a79159790:  0000000000000005  0000000000000000 
    00007f3a791597a0:  2525252525252525  2525252525252525 
    00007f3a791597b0:  00000000000000ff  0000000000000000 
    00007f3a791597c0:  00000000000000ff  0000000000000000 
    00007f3a791597d0:  00007f3a68000010  00007f3a68000010 
    00007f3a791597e0:  000000000000000e  000000000000000e 
    00007f3a791597f0:  0000000000000000  0000000000000000 
    00007f3a79159800:  ffffffffffffffff  ffffffffffffffff 
    00007f3a79159810:  0000000400000004  0000000400000004 
    00007f3a79159820:  20636f6c6c616d00  203a64656c696166 
    00007f3a79159830: <0000000000000000  0000000000000000 
    00007f3a79159840:  0000000000000000  0000000000000000 
    00007f3a79159850:  0000000000000000  0000000000000000 
    00007f3a79159860:  0000000000000000  0000000000000000 
    00007f3a79159870:  0000000000000000  0000000000000000 
    00007f3a79159880:  0000000000000000  0000000000000000 
    00007f3a79159890:  0000000000000000  0000000000000000 
    00007f3a791598a0:  0000000000000000  0000000000000000 
    00007f3a791598b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f3a791598c0:  ffffffffffffffff  ffffffffffffffff 
    00007f3a791598d0:  ffffffffffffffff  ffffffffffffffff 
    00007f3a791598e0:  ffffffffffffffff  ffffffffffffffff 
    00007f3a791598f0:  ffffffffffffffff  ffffffffffffffff 
    00007f3a79159900:  ffffffffffffffff  ffffffffffffffff 
    00007f3a79159910:  ffffffffffffffff  ffffffffffffffff 
    00007f3a79159920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f3a7cbadf47
    stack: frame={sp:0x7f3a79159830, fp:0x0} stack=[0x7f3a7895a288,0x7f3a79159e88)
    00007f3a79159730:  00007f3a79159af0  00007f3a7d19675a 
    00007f3a79159740:  000000000000000b  0000000000000000 
    00007f3a79159750:  00007f3a73e9f700  000055b11e7b4148 
    00007f3a79159760:  00007f3a79159c40  000055b11f0ef3f0 
    00007f3a79159770:  0000000000000000  000055b11dc90d10 
    00007f3a79159780:  0000000000000000  00007f3a7d18ef13 
    00007f3a79159790:  0000000000000005  0000000000000000 
    00007f3a791597a0:  2525252525252525  2525252525252525 
    00007f3a791597b0:  00000000000000ff  0000000000000000 
    00007f3a791597c0:  00000000000000ff  0000000000000000 
    00007f3a791597d0:  00007f3a68000010  00007f3a68000010 
    00007f3a791597e0:  000000000000000e  000000000000000e 
    00007f3a791597f0:  0000000000000000  0000000000000000 
    00007f3a79159800:  ffffffffffffffff  ffffffffffffffff 
    00007f3a79159810:  0000000400000004  0000000400000004 
    00007f3a79159820:  20636f6c6c616d00  203a64656c696166 
    00007f3a79159830: <0000000000000000  0000000000000000 
    00007f3a79159840:  0000000000000000  0000000000000000 
    00007f3a79159850:  0000000000000000  0000000000000000 
    00007f3a79159860:  0000000000000000  0000000000000000 
    00007f3a79159870:  0000000000000000  0000000000000000 
    00007f3a79159880:  0000000000000000  0000000000000000 
    00007f3a79159890:  0000000000000000  0000000000000000 
    00007f3a791598a0:  0000000000000000  0000000000000000 
    00007f3a791598b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f3a791598c0:  ffffffffffffffff  ffffffffffffffff 
    00007f3a791598d0:  ffffffffffffffff  ffffffffffffffff 
    00007f3a791598e0:  ffffffffffffffff  ffffffffffffffff 
    00007f3a791598f0:  ffffffffffffffff  ffffffffffffffff 
    00007f3a79159900:  ffffffffffffffff  ffffffffffffffff 
    00007f3a79159910:  ffffffffffffffff  ffffffffffffffff 
    00007f3a79159920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).parse(0xc00012c500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:277 +0xbc6
    text/template/parse.(*Tree).Parse(0xc00012c500, 0x55b11db40440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001d66f0, 0xc000152340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x55b11dae59b7, 0x4, 0x55b11db40440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000152340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc0000cd780, 0x55b11db40440, 0x16c, 0x4, 0xc0001195e8, 0x55b11e7cf760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 19 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 20 [runnable]:
    text/template/parse.(*lexer).run(0xc00015a630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:228
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7f3a7cf5b840
    rcx    0x7f3a7cbadf47
    rdx    0x0
    rdi    0x2
    rsi    0x7f3a79159830
    rbp    0x55b11dcaae7c
    rsp    0x7f3a79159830
    r8     0x0
    r9     0x7f3a79159830
    r10    0x8
    r11    0x246
    r12    0x55b11f0ef3f0
    r13    0x0
    r14    0x55b11dc90d10
    r15    0x0
    rip    0x7f3a7cbadf47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000062c00)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000062c00)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc000048800, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc000073f01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc00031b800)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [syscall, locked to thread]:
    net/url.parse(0xc000451a00, 0x0, 0x100, 0xc000451a00, 0x0, 0xc000451a01)
    	/usr/local/go/src/net/url/url.go:519 +0x85
    net/url.Parse(0xc000451a00, 0x18, 0x0, 0x38, 0x0)
    	/usr/local/go/src/net/url/url.go:478 +0x85
    k8s.io/kubernetes/vendor/github.com/go-openapi/jsonreference.(*Ref).parse(0xc000435bc8, 0xc000451a00, 0x18, 0x4, 0xc00049dee8)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/jsonreference/reference.go:112 +0x39
    k8s.io/kubernetes/vendor/github.com/go-openapi/jsonreference.New(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/jsonreference/reference.go:45
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Ref).fromMap(0xc000435d48, 0xc000489260, 0xb6b5, 0x1811e60)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/ref.go:182 +0xe8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00049e6c0, 0xc0003d474b, 0x38, 0xb6b5, 0x7f3427d59cc0, 0xc00049e6c0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:569 +0x1bc
    encoding/json.(*decodeState).object(0xc00049a370, 0x19ce1a0, 0xc00049e6c0, 0x199, 0xc00049a398, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc00049a370, 0x19ce1a0, 0xc00049e6c0, 0x199, 0xc0004b1680, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc00049a370, 0x18bc100, 0xc000497ee0, 0x195, 0xc00049a398, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc00049a370, 0x18bc100, 0xc000497ee0, 0x195, 0x18bc100, 0xc000497ee0)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc00049a370, 0x1815520, 0xc000497d40, 0x16, 0xc00049a398, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc00049a370, 0x1815520, 0xc000497d40, 0x16, 0xc000436888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc00049a370, 0x1815520, 0xc000497d40, 0xc00049a398, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003d3dc7, 0x9ca, 0xc039, 0x1815520, 0xc000497d40, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0004046c0, 0xc0003d3dc7, 0x9ca, 0xc039, 0x7f3427d59cc0, 0xc0004046c0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc00014aa50, 0x19ce1a0, 0xc0004046c0, 0x199, 0xc00014aa78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc00014aa50, 0x19ce1a0, 0xc0004046c0, 0x199, 0xc000497b00, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc00014aa50, 0x18e59a0, 0xc0003b4648, 0x195, 0xc00014aa78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc00014aa50, 0x18e59a0, 0xc0003b4648, 0x195, 0x18e59a0, 0xc0003b4648)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc00014aa50, 0x1815520, 0xc0003b4480, 0x16, 0xc00014aa78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc00014aa50, 0x1815520, 0xc0003b4480, 0x16, 0xc00018b548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc00014aa50, 0x1815520, 0xc0003b4480, 0xc00014aa78, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003d0000, 0x9d38, 0xfe00, 0x1815520, 0xc0003b4480, 0x7f3427d4fe88, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0003b4240, 0xc0003d0000, 0x9d38, 0xfe00, 0x7f3427d59cc0, 0xc0003b4240)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc00014a9a0, 0x1a89300, 0xc0003b4240, 0x16, 0xc00014a9c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc00014a9a0, 0x1a89300, 0xc0003b4240, 0x16, 0xc00018bc18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc00014a9a0, 0x1a89300, 0xc0003b4240, 0xc00014a9c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003d0000, 0x9d39, 0xfe00, 0x1a89300, 0xc0003b4240, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc000381b30, 0xc00018bd68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc000381a70, 0xc000381a40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 18 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f823ef29f47 m=5 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f823ef29f47
    stack: frame={sp:0x7f823bcd6830, fp:0x0} stack=[0x7f823b4d7288,0x7f823bcd6e88)
    00007f823bcd6730:  00007f823bcd6af0  00007f823f51275a 
    00007f823bcd6740:  000000000000000b  0000000000000000 
    00007f823bcd6750:  00007f823acd5700  000055dd9af5b148 
    00007f823bcd6760:  00007f823bcd6c40  000055dd9b4ef3f0 
    00007f823bcd6770:  0000000000000000  000055dd9a437d10 
    00007f823bcd6780:  0000000000000000  00007f823f50af13 
    00007f823bcd6790:  0000000000000005  0000000000000000 
    00007f823bcd67a0:  2525252525252525  2525252525252525 
    00007f823bcd67b0:  00000000000000ff  0000000000000000 
    00007f823bcd67c0:  00000000000000ff  0000000000000000 
    00007f823bcd67d0:  00007f8228000010  00007f8228000010 
    00007f823bcd67e0:  000000000000000e  000000000000000e 
    00007f823bcd67f0:  0000000000000000  0000000000000000 
    00007f823bcd6800:  ffffffffffffffff  ffffffffffffffff 
    00007f823bcd6810:  0000000400000004  0000000400000004 
    00007f823bcd6820:  20636f6c6c616d00  203a64656c696166 
    00007f823bcd6830: <0000000000000000  0000000000000000 
    00007f823bcd6840:  0000000000000000  0000000000000000 
    00007f823bcd6850:  0000000000000000  0000000000000000 
    00007f823bcd6860:  0000000000000000  0000000000000000 
    00007f823bcd6870:  0000000000000000  0000000000000000 
    00007f823bcd6880:  0000000000000000  0000000000000000 
    00007f823bcd6890:  0000000000000000  0000000000000000 
    00007f823bcd68a0:  0000000000000000  0000000000000000 
    00007f823bcd68b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f823bcd68c0:  ffffffffffffffff  ffffffffffffffff 
    00007f823bcd68d0:  ffffffffffffffff  ffffffffffffffff 
    00007f823bcd68e0:  ffffffffffffffff  ffffffffffffffff 
    00007f823bcd68f0:  ffffffffffffffff  ffffffffffffffff 
    00007f823bcd6900:  ffffffffffffffff  ffffffffffffffff 
    00007f823bcd6910:  ffffffffffffffff  ffffffffffffffff 
    00007f823bcd6920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f823ef29f47
    stack: frame={sp:0x7f823bcd6830, fp:0x0} stack=[0x7f823b4d7288,0x7f823bcd6e88)
    00007f823bcd6730:  00007f823bcd6af0  00007f823f51275a 
    00007f823bcd6740:  000000000000000b  0000000000000000 
    00007f823bcd6750:  00007f823acd5700  000055dd9af5b148 
    00007f823bcd6760:  00007f823bcd6c40  000055dd9b4ef3f0 
    00007f823bcd6770:  0000000000000000  000055dd9a437d10 
    00007f823bcd6780:  0000000000000000  00007f823f50af13 
    00007f823bcd6790:  0000000000000005  0000000000000000 
    00007f823bcd67a0:  2525252525252525  2525252525252525 
    00007f823bcd67b0:  00000000000000ff  0000000000000000 
    00007f823bcd67c0:  00000000000000ff  0000000000000000 
    00007f823bcd67d0:  00007f8228000010  00007f8228000010 
    00007f823bcd67e0:  000000000000000e  000000000000000e 
    00007f823bcd67f0:  0000000000000000  0000000000000000 
    00007f823bcd6800:  ffffffffffffffff  ffffffffffffffff 
    00007f823bcd6810:  0000000400000004  0000000400000004 
    00007f823bcd6820:  20636f6c6c616d00  203a64656c696166 
    00007f823bcd6830: <0000000000000000  0000000000000000 
    00007f823bcd6840:  0000000000000000  0000000000000000 
    00007f823bcd6850:  0000000000000000  0000000000000000 
    00007f823bcd6860:  0000000000000000  0000000000000000 
    00007f823bcd6870:  0000000000000000  0000000000000000 
    00007f823bcd6880:  0000000000000000  0000000000000000 
    00007f823bcd6890:  0000000000000000  0000000000000000 
    00007f823bcd68a0:  0000000000000000  0000000000000000 
    00007f823bcd68b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f823bcd68c0:  ffffffffffffffff  ffffffffffffffff 
    00007f823bcd68d0:  ffffffffffffffff  ffffffffffffffff 
    00007f823bcd68e0:  ffffffffffffffff  ffffffffffffffff 
    00007f823bcd68f0:  ffffffffffffffff  ffffffffffffffff 
    00007f823bcd6900:  ffffffffffffffff  ffffffffffffffff 
    00007f823bcd6910:  ffffffffffffffff  ffffffffffffffff 
    00007f823bcd6920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).parse(0xc00011c500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:277 +0xbc6
    text/template/parse.(*Tree).Parse(0xc00011c500, 0x55dd9a2e7440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001c4720, 0xc000142350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x55dd9a28c9b7, 0x4, 0x55dd9a2e7440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000142350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc00003d840, 0x55dd9a2e7440, 0x16c, 0x4, 0xc000109708, 0x55dd9af76760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 6 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 7 [runnable]:
    text/template/parse.(*lexer).run(0xc00014a630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:228
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7f823f2d7840
    rcx    0x7f823ef29f47
    rdx    0x0
    rdi    0x2
    rsi    0x7f823bcd6830
    rbp    0x55dd9a451e7c
    rsp    0x7f823bcd6830
    r8     0x0
    r9     0x7f823bcd6830
    r10    0x8
    r11    0x246
    r12    0x55dd9b4ef3f0
    r13    0x0
    r14    0x55dd9a437d10
    r15    0x0
    rip    0x7f823ef29f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
