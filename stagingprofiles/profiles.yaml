apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7fd346e66f47 m=0 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7fd346e66f47
    stack: frame={sp:0x7ffef1356d40, fp:0x0} stack=[0x7ffef0b58230,0x7ffef1357270)
    00007ffef1356c40:  00007ffef1357020  00007fd347447f13 
    00007ffef1356c50:  0000000000000005  00005589f33fe148 
    00007ffef1356c60:  00007ffef1357150  00005589f4dc3690 
    00007ffef1356c70:  0000000000000000  00005589f28dad10 
    00007ffef1356c80:  0000000000000000  00007fd347447f13 
    00007ffef1356c90:  0000000000000005  0000000000000000 
    00007ffef1356ca0:  2525252525252525  2525252525252525 
    00007ffef1356cb0:  00000000000000ff  0000000000000000 
    00007ffef1356cc0:  00000000000000ff  0000000000000000 
    00007ffef1356cd0:  0000000000000000  0000000000000000 
    00007ffef1356ce0:  2f7273752f3a6e69  73752f3a6e696273 
    00007ffef1356cf0:  752f3a6e69622f72  6c61636f6c2f7273 
    00007ffef1356d00:  73752f3a6e69622f  732f6e6962732f72 
    00007ffef1356d10:  2f3a656369767265  6e69622f70616e73 
    00007ffef1356d20:  20636f6c6c616d00  203a64656c696166 
    00007ffef1356d30:  0000000000000000  0000000000000000 
    00007ffef1356d40: <0000000000000000  0000000000000000 
    00007ffef1356d50:  0000000000000000  0000000000000000 
    00007ffef1356d60:  0000000000000000  0000000000000000 
    00007ffef1356d70:  0000000000000000  0000000000000000 
    00007ffef1356d80:  0000000000000000  0000000000000000 
    00007ffef1356d90:  0000000000000000  0000000000000000 
    00007ffef1356da0:  0000000000000000  0000000000000000 
    00007ffef1356db0:  00007fd347214560  00007fd347217bc0 
    00007ffef1356dc0:  fffffffe7fffffff  ffffffffffffffff 
    00007ffef1356dd0:  ffffffffffffffff  ffffffffffffffff 
    00007ffef1356de0:  ffffffffffffffff  ffffffffffffffff 
    00007ffef1356df0:  ffffffffffffffff  ffffffffffffffff 
    00007ffef1356e00:  ffffffffffffffff  ffffffffffffffff 
    00007ffef1356e10:  ffffffffffffffff  ffffffffffffffff 
    00007ffef1356e20:  ffffffffffffffff  ffffffffffffffff 
    00007ffef1356e30:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7fd346e66f47
    stack: frame={sp:0x7ffef1356d40, fp:0x0} stack=[0x7ffef0b58230,0x7ffef1357270)
    00007ffef1356c40:  00007ffef1357020  00007fd347447f13 
    00007ffef1356c50:  0000000000000005  00005589f33fe148 
    00007ffef1356c60:  00007ffef1357150  00005589f4dc3690 
    00007ffef1356c70:  0000000000000000  00005589f28dad10 
    00007ffef1356c80:  0000000000000000  00007fd347447f13 
    00007ffef1356c90:  0000000000000005  0000000000000000 
    00007ffef1356ca0:  2525252525252525  2525252525252525 
    00007ffef1356cb0:  00000000000000ff  0000000000000000 
    00007ffef1356cc0:  00000000000000ff  0000000000000000 
    00007ffef1356cd0:  0000000000000000  0000000000000000 
    00007ffef1356ce0:  2f7273752f3a6e69  73752f3a6e696273 
    00007ffef1356cf0:  752f3a6e69622f72  6c61636f6c2f7273 
    00007ffef1356d00:  73752f3a6e69622f  732f6e6962732f72 
    00007ffef1356d10:  2f3a656369767265  6e69622f70616e73 
    00007ffef1356d20:  20636f6c6c616d00  203a64656c696166 
    00007ffef1356d30:  0000000000000000  0000000000000000 
    00007ffef1356d40: <0000000000000000  0000000000000000 
    00007ffef1356d50:  0000000000000000  0000000000000000 
    00007ffef1356d60:  0000000000000000  0000000000000000 
    00007ffef1356d70:  0000000000000000  0000000000000000 
    00007ffef1356d80:  0000000000000000  0000000000000000 
    00007ffef1356d90:  0000000000000000  0000000000000000 
    00007ffef1356da0:  0000000000000000  0000000000000000 
    00007ffef1356db0:  00007fd347214560  00007fd347217bc0 
    00007ffef1356dc0:  fffffffe7fffffff  ffffffffffffffff 
    00007ffef1356dd0:  ffffffffffffffff  ffffffffffffffff 
    00007ffef1356de0:  ffffffffffffffff  ffffffffffffffff 
    00007ffef1356df0:  ffffffffffffffff  ffffffffffffffff 
    00007ffef1356e00:  ffffffffffffffff  ffffffffffffffff 
    00007ffef1356e10:  ffffffffffffffff  ffffffffffffffff 
    00007ffef1356e20:  ffffffffffffffff  ffffffffffffffff 
    00007ffef1356e30:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [running, locked to thread]:
    runtime.asmcgocall(0x5589f272e930, 0xc00005e708)
    	/usr/lib/go-1.13/src/runtime/asm_amd64.s:640 +0x3f fp=0xc00005e6f0 sp=0xc00005e6e8 pc=0x5589f1fcf35f
    runtime.newm1(0xc00009c380)
    	/usr/lib/go-1.13/src/runtime/proc.go:1848 +0xa6 fp=0xc00005e730 sp=0xc00005e6f0 pc=0x5589f1fa79b6
    runtime.newm(0x5589f2ea9690, 0x0)
    	/usr/lib/go-1.13/src/runtime/proc.go:1832 +0x93 fp=0xc00005e760 sp=0xc00005e730 pc=0x5589f1fa7853
    runtime.startTemplateThread(...)
    	/usr/lib/go-1.13/src/runtime/proc.go:1868
    runtime.main()
    	/usr/lib/go-1.13/src/runtime/proc.go:186 +0x2cb fp=0xc00005e7e0 sp=0xc00005e760 pc=0x5589f1fa3a8b
    runtime.goexit()
    	/usr/lib/go-1.13/src/runtime/asm_amd64.s:1357 +0x1 fp=0xc00005e7e8 sp=0xc00005e7e0 pc=0x5589f1fcfc21
    
    rax    0x0
    rbx    0x7fd347214840
    rcx    0x7fd346e66f47
    rdx    0x0
    rdi    0x2
    rsi    0x7ffef1356d40
    rbp    0x5589f28f4e7c
    rsp    0x7ffef1356d40
    r8     0x0
    r9     0x7ffef1356d40
    r10    0x8
    r11    0x246
    r12    0x5589f4dc3690
    r13    0x0
    r14    0x5589f28dad10
    r15    0x0
    rip    0x7fd346e66f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000088400)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000088400)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc00004b000, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc000099f01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc000001080)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [syscall, locked to thread]:
    reflect.unsafe_New(0x19ce1a0, 0x93a)
    	/usr/local/go/src/runtime/malloc.go:1200 +0x38
    reflect.Zero(0x1d4e220, 0x19ce1a0, 0x19ce1a0, 0xc0003c0e89, 0x7)
    	/usr/local/go/src/reflect/value.go:2373 +0x5d
    encoding/json.(*decodeState).object(0xc000498a50, 0x18bc100, 0xc0004a6620, 0x195, 0xc000498a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:691 +0x457
    encoding/json.(*decodeState).value(0xc000498a50, 0x18bc100, 0xc0004a6620, 0x195, 0x18bc100, 0xc0004a6620)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000498a50, 0x1815520, 0xc0004a6480, 0x16, 0xc000498a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000498a50, 0x1815520, 0xc0004a6480, 0x16, 0xc000422888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc000498a50, 0x1815520, 0xc0004a6480, 0xc000498a78, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003c07b5, 0x9e1, 0xb64b, 0x1815520, 0xc0004a6480, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0003f06c0, 0xc0003c07b5, 0x9e1, 0xb64b, 0x7fcf858d9b00, 0xc0003f06c0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc000136b00, 0x19ce1a0, 0xc0003f06c0, 0x199, 0xc000136b28, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc000136b00, 0x19ce1a0, 0xc0003f06c0, 0x199, 0xc0004a6240, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000136b00, 0x18e59a0, 0xc00039e648, 0x195, 0xc000136b28, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000136b00, 0x18e59a0, 0xc00039e648, 0x195, 0x18e59a0, 0xc00039e648)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000136b00, 0x1815520, 0xc00039e480, 0x16, 0xc000136b28, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000136b00, 0x1815520, 0xc00039e480, 0x16, 0xc000173548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc000136b00, 0x1815520, 0xc00039e480, 0xc000136b28, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003bc000, 0x9d38, 0xfe00, 0x1815520, 0xc00039e480, 0x7fcf8593a920, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00039e240, 0xc0003bc000, 0x9d38, 0xfe00, 0x7fcf858d9b00, 0xc00039e240)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc000136a50, 0x1a89300, 0xc00039e240, 0x16, 0xc000136a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc000136a50, 0x1a89300, 0xc00039e240, 0x16, 0xc000173c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc000136a50, 0x1a89300, 0xc00039e240, 0xc000136a78, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003bc000, 0x9d39, 0xfe00, 0x1a89300, 0xc00039e240, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc000373b30, 0xc000173d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc000373a70, 0xc000373a40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 6 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f61fe2faf47 m=3 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f61fe2faf47
    stack: frame={sp:0x7f61fb8a8830, fp:0x0} stack=[0x7f61fb0a9288,0x7f61fb8a8e88)
    00007f61fb8a8730:  00007f61fb8a8af0  00007f61fe8e375a 
    00007f61fb8a8740:  000000000000000b  0000000000000000 
    00007f61fb8a8750:  00007f61fa0a6700  000055d0e3f9a148 
    00007f61fb8a8760:  00007f61fb8a8c40  00007f61ec000c50 
    00007f61fb8a8770:  0000000000000000  000055d0e3476d10 
    00007f61fb8a8780:  0000000000000000  00007f61fe8dbf13 
    00007f61fb8a8790:  0000000000000005  0000000000000000 
    00007f61fb8a87a0:  2525252525252525  2525252525252525 
    00007f61fb8a87b0:  00000000000000ff  0000000000000000 
    00007f61fb8a87c0:  00000000000000ff  0000000000000000 
    00007f61fb8a87d0:  00007f61ec000010  00007f61ec000010 
    00007f61fb8a87e0:  000000000000000e  000000000000000e 
    00007f61fb8a87f0:  0000000000000000  0000000000000000 
    00007f61fb8a8800:  ffffffffffffffff  ffffffffffffffff 
    00007f61fb8a8810:  0000000400000004  0000000400000004 
    00007f61fb8a8820:  20636f6c6c616d00  203a64656c696166 
    00007f61fb8a8830: <0000000000000000  0000000000000000 
    00007f61fb8a8840:  0000000000000000  0000000000000000 
    00007f61fb8a8850:  0000000000000000  0000000000000000 
    00007f61fb8a8860:  0000000000000000  0000000000000000 
    00007f61fb8a8870:  0000000000000000  0000000000000000 
    00007f61fb8a8880:  0000000000000000  0000000000000000 
    00007f61fb8a8890:  0000000000000000  0000000000000000 
    00007f61fb8a88a0:  0000000000000000  0000000000000000 
    00007f61fb8a88b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f61fb8a88c0:  ffffffffffffffff  ffffffffffffffff 
    00007f61fb8a88d0:  ffffffffffffffff  ffffffffffffffff 
    00007f61fb8a88e0:  ffffffffffffffff  ffffffffffffffff 
    00007f61fb8a88f0:  ffffffffffffffff  ffffffffffffffff 
    00007f61fb8a8900:  ffffffffffffffff  ffffffffffffffff 
    00007f61fb8a8910:  ffffffffffffffff  ffffffffffffffff 
    00007f61fb8a8920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f61fe2faf47
    stack: frame={sp:0x7f61fb8a8830, fp:0x0} stack=[0x7f61fb0a9288,0x7f61fb8a8e88)
    00007f61fb8a8730:  00007f61fb8a8af0  00007f61fe8e375a 
    00007f61fb8a8740:  000000000000000b  0000000000000000 
    00007f61fb8a8750:  00007f61fa0a6700  000055d0e3f9a148 
    00007f61fb8a8760:  00007f61fb8a8c40  00007f61ec000c50 
    00007f61fb8a8770:  0000000000000000  000055d0e3476d10 
    00007f61fb8a8780:  0000000000000000  00007f61fe8dbf13 
    00007f61fb8a8790:  0000000000000005  0000000000000000 
    00007f61fb8a87a0:  2525252525252525  2525252525252525 
    00007f61fb8a87b0:  00000000000000ff  0000000000000000 
    00007f61fb8a87c0:  00000000000000ff  0000000000000000 
    00007f61fb8a87d0:  00007f61ec000010  00007f61ec000010 
    00007f61fb8a87e0:  000000000000000e  000000000000000e 
    00007f61fb8a87f0:  0000000000000000  0000000000000000 
    00007f61fb8a8800:  ffffffffffffffff  ffffffffffffffff 
    00007f61fb8a8810:  0000000400000004  0000000400000004 
    00007f61fb8a8820:  20636f6c6c616d00  203a64656c696166 
    00007f61fb8a8830: <0000000000000000  0000000000000000 
    00007f61fb8a8840:  0000000000000000  0000000000000000 
    00007f61fb8a8850:  0000000000000000  0000000000000000 
    00007f61fb8a8860:  0000000000000000  0000000000000000 
    00007f61fb8a8870:  0000000000000000  0000000000000000 
    00007f61fb8a8880:  0000000000000000  0000000000000000 
    00007f61fb8a8890:  0000000000000000  0000000000000000 
    00007f61fb8a88a0:  0000000000000000  0000000000000000 
    00007f61fb8a88b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f61fb8a88c0:  ffffffffffffffff  ffffffffffffffff 
    00007f61fb8a88d0:  ffffffffffffffff  ffffffffffffffff 
    00007f61fb8a88e0:  ffffffffffffffff  ffffffffffffffff 
    00007f61fb8a88f0:  ffffffffffffffff  ffffffffffffffff 
    00007f61fb8a8900:  ffffffffffffffff  ffffffffffffffff 
    00007f61fb8a8910:  ffffffffffffffff  ffffffffffffffff 
    00007f61fb8a8920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [select]:
    github.com/snapcore/snapd/client.(*Client).do(0xc0003581c0, 0x55d0e32caee7, 0x3, 0x55d0e32d4d78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x55d0e3924f40, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:394 +0x2f9
    github.com/snapcore/snapd/client.(*Client).doSyncWithOpts(0xc0003581c0, 0x55d0e32caee7, 0x3, 0x55d0e32d4d78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x55d0e38c09a0, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:492 +0xf6
    github.com/snapcore/snapd/client.(*Client).SysInfo(0xc0003581c0, 0x46, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/client/client.go:727 +0xd4
    main.maybeWaitForSecurityProfileRegeneration(0xc0003581c0, 0xc0003977c0, 0xd)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:200 +0x1aa
    main.(*cmdRun).Execute(0xc00023feb8, 0xc000032190, 0x2, 0x3, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:240 +0x172
    main.main()
    	/build/snapd/parts/snapd-deb/build/cmd/snap/main.go:482 +0x581
    
    goroutine 6 [runnable]:
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:21
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    rax    0x0
    rbx    0x7f61fe6a8840
    rcx    0x7f61fe2faf47
    rdx    0x0
    rdi    0x2
    rsi    0x7f61fb8a8830
    rbp    0x55d0e3490e7c
    rsp    0x7f61fb8a8830
    r8     0x0
    r9     0x7f61fb8a8830
    r10    0x8
    r11    0x246
    r12    0x7f61ec000c50
    r13    0x0
    r14    0x55d0e3476d10
    r15    0x0
    rip    0x7f61fe2faf47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
