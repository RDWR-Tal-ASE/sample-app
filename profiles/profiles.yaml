apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f6b346f9f47 m=6 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f6b346f9f47
    stack: frame={sp:0x7f6b23ffe830, fp:0x0} stack=[0x7f6b237ff288,0x7f6b23ffee88)
    00007f6b23ffe730:  00007f6b23ffeaf0  00007f6b34ce275a 
    00007f6b23ffe740:  000000000000000b  0000000000000000 
    00007f6b23ffe750:  00007f6b227fc700  000055c5d157a148 
    00007f6b23ffe760:  00007f6b23ffec40  000055c5d31c87e0 
    00007f6b23ffe770:  0000000000000000  000055c5d0a56d10 
    00007f6b23ffe780:  0000000000000000  00007f6b34cdaf13 
    00007f6b23ffe790:  0000000000000005  0000000000000000 
    00007f6b23ffe7a0:  2525252525252525  2525252525252525 
    00007f6b23ffe7b0:  00000000000000ff  0000000000000000 
    00007f6b23ffe7c0:  00000000000000ff  0000000000000000 
    00007f6b23ffe7d0:  0000000000000002  0000000000000004 
    00007f6b23ffe7e0:  000000000000000e  000000000000000e 
    00007f6b23ffe7f0:  0000000000000000  0000000000000000 
    00007f6b23ffe800:  ffffffffffffffff  ffffffffffffffff 
    00007f6b23ffe810:  0000000400000004  0000000400000004 
    00007f6b23ffe820:  20636f6c6c616d00  203a64656c696166 
    00007f6b23ffe830: <0000000000000000  0000000000000000 
    00007f6b23ffe840:  0000000000000000  0000000200000000 
    00007f6b23ffe850:  000000000000000b  0000000000000000 
    00007f6b23ffe860:  0000000000000000  0000000000000000 
    00007f6b23ffe870:  0000000000000000  000000000000000a 
    00007f6b23ffe880:  0000000000000000  000055c5d1590380 
    00007f6b23ffe890:  0000000000000004  0000000000000004 
    00007f6b23ffe8a0:  0000000000000000  0000000000000000 
    00007f6b23ffe8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f6b23ffe8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f6b23ffe8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f6b23ffe8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f6b23ffe8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f6b23ffe900:  ffffffffffffffff  ffffffffffffffff 
    00007f6b23ffe910:  ffffffffffffffff  ffffffffffffffff 
    00007f6b23ffe920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f6b346f9f47
    stack: frame={sp:0x7f6b23ffe830, fp:0x0} stack=[0x7f6b237ff288,0x7f6b23ffee88)
    00007f6b23ffe730:  00007f6b23ffeaf0  00007f6b34ce275a 
    00007f6b23ffe740:  000000000000000b  0000000000000000 
    00007f6b23ffe750:  00007f6b227fc700  000055c5d157a148 
    00007f6b23ffe760:  00007f6b23ffec40  000055c5d31c87e0 
    00007f6b23ffe770:  0000000000000000  000055c5d0a56d10 
    00007f6b23ffe780:  0000000000000000  00007f6b34cdaf13 
    00007f6b23ffe790:  0000000000000005  0000000000000000 
    00007f6b23ffe7a0:  2525252525252525  2525252525252525 
    00007f6b23ffe7b0:  00000000000000ff  0000000000000000 
    00007f6b23ffe7c0:  00000000000000ff  0000000000000000 
    00007f6b23ffe7d0:  0000000000000002  0000000000000004 
    00007f6b23ffe7e0:  000000000000000e  000000000000000e 
    00007f6b23ffe7f0:  0000000000000000  0000000000000000 
    00007f6b23ffe800:  ffffffffffffffff  ffffffffffffffff 
    00007f6b23ffe810:  0000000400000004  0000000400000004 
    00007f6b23ffe820:  20636f6c6c616d00  203a64656c696166 
    00007f6b23ffe830: <0000000000000000  0000000000000000 
    00007f6b23ffe840:  0000000000000000  0000000200000000 
    00007f6b23ffe850:  000000000000000b  0000000000000000 
    00007f6b23ffe860:  0000000000000000  0000000000000000 
    00007f6b23ffe870:  0000000000000000  000000000000000a 
    00007f6b23ffe880:  0000000000000000  000055c5d1590380 
    00007f6b23ffe890:  0000000000000004  0000000000000004 
    00007f6b23ffe8a0:  0000000000000000  0000000000000000 
    00007f6b23ffe8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f6b23ffe8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f6b23ffe8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f6b23ffe8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f6b23ffe8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f6b23ffe900:  ffffffffffffffff  ffffffffffffffff 
    00007f6b23ffe910:  ffffffffffffffff  ffffffffffffffff 
    00007f6b23ffe920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).next(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:64
    text/template/parse.(*Tree).nextNonSpace(0xc00010e500, 0x0, 0x0, 0x0, 0x0, 0x0)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:102 +0x14e
    text/template/parse.(*Tree).parse(0xc00010e500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:281 +0x2f6
    text/template/parse.(*Tree).Parse(0xc00010e500, 0x55c5d0906440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001b6720, 0xc000134350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x55c5d08ab9b7, 0x4, 0x55c5d0906440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000134350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc00003d840, 0x55c5d0906440, 0x16c, 0x4, 0xc0000fb5e8, 0x55c5d1595760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 6 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 7 [runnable]:
    text/template/parse.(*lexer).emit(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:157
    text/template/parse.lexLeftDelim(0xc00013c630, 0x55c5d1025888)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:307 +0x1e0
    text/template/parse.(*lexer).run(0xc00013c630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:230 +0x39
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7f6b34aa7840
    rcx    0x7f6b346f9f47
    rdx    0x0
    rdi    0x2
    rsi    0x7f6b23ffe830
    rbp    0x55c5d0a70e7c
    rsp    0x7f6b23ffe830
    r8     0x0
    r9     0x7f6b23ffe830
    r10    0x8
    r11    0x246
    r12    0x55c5d31c87e0
    r13    0x0
    r14    0x55c5d0a56d10
    r15    0x0
    rip    0x7f6b346f9f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000108000)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000108000)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc000046000, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc00006df01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc00008a300)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [syscall, locked to thread]:
    net/url.parse(0xc000469a20, 0x0, 0x100, 0xc000469a20, 0x0, 0xc000469a21)
    	/usr/local/go/src/net/url/url.go:519 +0x85
    net/url.Parse(0xc000469a20, 0x18, 0xc000469a20, 0x18, 0x0)
    	/usr/local/go/src/net/url/url.go:478 +0x85
    k8s.io/kubernetes/vendor/github.com/go-openapi/jsonreference.(*Ref).parse(0xc00044fbc8, 0xc000469a00, 0x18, 0x4, 0xc0004c8508)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/jsonreference/reference.go:117 +0x7d
    k8s.io/kubernetes/vendor/github.com/go-openapi/jsonreference.New(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/jsonreference/reference.go:45
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Ref).fromMap(0xc00044fd48, 0xc0004a1260, 0xb6b5, 0x1811e60)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/ref.go:182 +0xe8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0004b6240, 0xc0003ea74b, 0x38, 0xb6b5, 0x7fae00250b80, 0xc0004b6240)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:569 +0x1bc
    encoding/json.(*decodeState).object(0xc0004b2370, 0x19ce1a0, 0xc0004b6240, 0x199, 0xc0004b2398, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0004b2370, 0x19ce1a0, 0xc0004b6240, 0x199, 0xc0004cb200, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004b2370, 0x18bc100, 0xc0004afa60, 0x195, 0xc0004b2398, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004b2370, 0x18bc100, 0xc0004afa60, 0x195, 0x18bc100, 0xc0004afa60)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004b2370, 0x1815520, 0xc0004af8c0, 0x16, 0xc0004b2398, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004b2370, 0x1815520, 0xc0004af8c0, 0x16, 0xc000450888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0004b2370, 0x1815520, 0xc0004af8c0, 0xc0004b2398, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003e9dc7, 0x9ca, 0xc039, 0x1815520, 0xc0004af8c0, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00041e240, 0xc0003e9dc7, 0x9ca, 0xc039, 0x7fae00250b80, 0xc00041e240)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e4a50, 0x19ce1a0, 0xc00041e240, 0x199, 0xc0000e4a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e4a50, 0x19ce1a0, 0xc00041e240, 0x199, 0xc0004af680, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e4a50, 0x18e59a0, 0xc0003f61c8, 0x195, 0xc0000e4a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e4a50, 0x18e59a0, 0xc0003f61c8, 0x195, 0x18e59a0, 0xc0003f61c8)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e4a50, 0x1815520, 0xc0003f6000, 0x16, 0xc0000e4a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e4a50, 0x1815520, 0xc0003f6000, 0x16, 0xc0001a3548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e4a50, 0x1815520, 0xc0003f6000, 0xc0000e4a78, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003e6000, 0x9d38, 0xfe00, 0x1815520, 0xc0003f6000, 0x7fae00246c38, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0003a1d40, 0xc0003e6000, 0x9d38, 0xfe00, 0x7fae00250b80, 0xc0003a1d40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e49a0, 0x1a89300, 0xc0003a1d40, 0x16, 0xc0000e49c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e49a0, 0x1a89300, 0xc0003a1d40, 0x16, 0xc0001a3c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e49a0, 0x1a89300, 0xc0003a1d40, 0xc0000e49c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003e6000, 0x9d39, 0xfe00, 0x1a89300, 0xc0003a1d40, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc00039db30, 0xc0001a3d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc00039da70, 0xc00039da40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 18 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
