apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7effd7318f47 m=3 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7effd7318f47
    stack: frame={sp:0x7effd48c6820, fp:0x0} stack=[0x7effd40c7288,0x7effd48c6e88)
    00007effd48c6720:  0000000000000000  00007effd76cdc58 
    00007effd48c6730:  00007effd48c6ae0  00007effd790175a 
    00007effd48c6740:  000000000000000b  0000000000000000 
    00007effd48c6750:  00007effce7fc700  000055ce32fcd148 
    00007effd48c6760:  00007effd48c6c30  00007effc8000c50 
    00007effd48c6770:  0000000000000000  000055ce324a9d10 
    00007effd48c6780:  0000000000000000  00007effd78f9f13 
    00007effd48c6790:  0000000000000005  0000000000000000 
    00007effd48c67a0:  2525252525252525  2525252525252525 
    00007effd48c67b0:  00000000000000ff  0000000000000000 
    00007effd48c67c0:  00000000000000ff  0000000000000000 
    00007effd48c67d0:  ff000000000000ff  00000000ff000000 
    00007effd48c67e0:  000000000000000e  000000000000000e 
    00007effd48c67f0:  0000000000000000  0000000000000000 
    00007effd48c6800:  ffffffffffffffff  ffffffffffffffff 
    00007effd48c6810:  0000000400000004  0000000400000004 
    00007effd48c6820: <0000000000000000  203a64656c696166 
    00007effd48c6830:  0000000000000000  0000000000000000 
    00007effd48c6840:  0000000000000000  0000000000000000 
    00007effd48c6850:  0000000000000000  0000000000000000 
    00007effd48c6860:  0000000000000000  0000000000000000 
    00007effd48c6870:  0000000000000000  0000000000000000 
    00007effd48c6880:  0000000000000000  0000000000000000 
    00007effd48c6890:  0000000000000000  0000000000000000 
    00007effd48c68a0:  fffffffe7fffffff  ffffffffffffffff 
    00007effd48c68b0:  ffffffffffffffff  ffffffffffffffff 
    00007effd48c68c0:  ffffffffffffffff  ffffffffffffffff 
    00007effd48c68d0:  ffffffffffffffff  ffffffffffffffff 
    00007effd48c68e0:  ffffffffffffffff  ffffffffffffffff 
    00007effd48c68f0:  ffffffffffffffff  ffffffffffffffff 
    00007effd48c6900:  ffffffffffffffff  ffffffffffffffff 
    00007effd48c6910:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7effd7318f47
    stack: frame={sp:0x7effd48c6820, fp:0x0} stack=[0x7effd40c7288,0x7effd48c6e88)
    00007effd48c6720:  0000000000000000  00007effd76cdc58 
    00007effd48c6730:  00007effd48c6ae0  00007effd790175a 
    00007effd48c6740:  000000000000000b  0000000000000000 
    00007effd48c6750:  00007effce7fc700  000055ce32fcd148 
    00007effd48c6760:  00007effd48c6c30  00007effc8000c50 
    00007effd48c6770:  0000000000000000  000055ce324a9d10 
    00007effd48c6780:  0000000000000000  00007effd78f9f13 
    00007effd48c6790:  0000000000000005  0000000000000000 
    00007effd48c67a0:  2525252525252525  2525252525252525 
    00007effd48c67b0:  00000000000000ff  0000000000000000 
    00007effd48c67c0:  00000000000000ff  0000000000000000 
    00007effd48c67d0:  ff000000000000ff  00000000ff000000 
    00007effd48c67e0:  000000000000000e  000000000000000e 
    00007effd48c67f0:  0000000000000000  0000000000000000 
    00007effd48c6800:  ffffffffffffffff  ffffffffffffffff 
    00007effd48c6810:  0000000400000004  0000000400000004 
    00007effd48c6820: <0000000000000000  203a64656c696166 
    00007effd48c6830:  0000000000000000  0000000000000000 
    00007effd48c6840:  0000000000000000  0000000000000000 
    00007effd48c6850:  0000000000000000  0000000000000000 
    00007effd48c6860:  0000000000000000  0000000000000000 
    00007effd48c6870:  0000000000000000  0000000000000000 
    00007effd48c6880:  0000000000000000  0000000000000000 
    00007effd48c6890:  0000000000000000  0000000000000000 
    00007effd48c68a0:  fffffffe7fffffff  ffffffffffffffff 
    00007effd48c68b0:  ffffffffffffffff  ffffffffffffffff 
    00007effd48c68c0:  ffffffffffffffff  ffffffffffffffff 
    00007effd48c68d0:  ffffffffffffffff  ffffffffffffffff 
    00007effd48c68e0:  ffffffffffffffff  ffffffffffffffff 
    00007effd48c68f0:  ffffffffffffffff  ffffffffffffffff 
    00007effd48c6900:  ffffffffffffffff  ffffffffffffffff 
    00007effd48c6910:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [syscall]:
    syscall.Syscall6(0xf7, 0x1, 0x12e4b4, 0xc00023f778, 0x1000004, 0x0, 0x0, 0x55ce31c20e01, 0xc000336420, 0xc00023f7b8)
    	/usr/lib/go-1.13/src/syscall/asm_linux_amd64.s:44 +0x5
    os.(*Process).blockUntilWaitable(0xc0002c6de0, 0x203000, 0x55ce3291d940, 0x2)
    	/usr/lib/go-1.13/src/os/wait_waitid.go:31 +0x9a
    os.(*Process).wait(0xc0002c6de0, 0x55ce32a78240, 0x55ce32a78248, 0x55ce32a78238)
    	/usr/lib/go-1.13/src/os/exec_unix.go:22 +0x3b
    os.(*Process).Wait(...)
    	/usr/lib/go-1.13/src/os/exec.go:125
    os/exec.(*Cmd).Wait(0xc0000edce0, 0x0, 0x0)
    	/usr/lib/go-1.13/src/os/exec/exec.go:501 +0x62
    os/exec.(*Cmd).Run(0xc0000edce0, 0xc0002cd6d0, 0x1)
    	/usr/lib/go-1.13/src/os/exec/exec.go:341 +0x5e
    os/exec.(*Cmd).Output(0xc0000edce0, 0x2c, 0xc00023fa30, 0x1, 0x1, 0xc0000edce0)
    	/usr/lib/go-1.13/src/os/exec/exec.go:540 +0x8a
    github.com/snapcore/snapd/sandbox/seccomp.(*Compiler).VersionInfo(0xc0003202e0, 0xc0003202e0, 0x0, 0x0, 0xc000347e60)
    	/build/snapd/parts/snapd-deb/build/sandbox/seccomp/compiler.go:75 +0x99
    github.com/snapcore/snapd/sandbox/seccomp.glob..func1(0xc000347e60, 0xc000347e60, 0x1f, 0xc0002c6540, 0x1f)
    	/build/snapd/parts/snapd-deb/build/sandbox/seccomp/compiler.go:97 +0x6a
    github.com/snapcore/snapd/sandbox/seccomp.CompilerVersionInfo(...)
    	/build/snapd/parts/snapd-deb/build/sandbox/seccomp/compiler.go:103
    github.com/snapcore/snapd/interfaces.seccompCompilerVersionInfo(0xc0002c6540, 0x1f, 0xc0002c6540, 0x1f, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/interfaces/system_key.go:95 +0x6d
    github.com/snapcore/snapd/interfaces.generateSystemKey(0xc000314040, 0x300000002, 0xd0)
    	/build/snapd/parts/snapd-deb/build/interfaces/system_key.go:145 +0x373
    github.com/snapcore/snapd/interfaces.SystemKeyMismatch(0x55ce31b4f7ca, 0xe0, 0x55ce32a20200)
    	/build/snapd/parts/snapd-deb/build/interfaces/system_key.go:229 +0x28
    main.maybeWaitForSecurityProfileRegeneration(0xc00010ea80, 0xc000306280, 0xd)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:152 +0x28
    main.(*cmdRun).Execute(0xc00023feb8, 0xc000032190, 0x2, 0x3, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:240 +0x172
    main.main()
    	/build/snapd/parts/snapd-deb/build/cmd/snap/main.go:482 +0x581
    
    goroutine 6 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 8 [IO wait]:
    internal/poll.runtime_pollWait(0x7effd7a6aea8, 0x72, 0xffffffffffffffff)
    	/usr/lib/go-1.13/src/runtime/netpoll.go:184 +0x57
    internal/poll.(*pollDesc).wait(0xc0003361f8, 0x72, 0x201, 0x200, 0xffffffffffffffff)
    	/usr/lib/go-1.13/src/internal/poll/fd_poll_runtime.go:87 +0x47
    internal/poll.(*pollDesc).waitRead(...)
    	/usr/lib/go-1.13/src/internal/poll/fd_poll_runtime.go:92
    internal/poll.(*FD).Read(0xc0003361e0, 0xc000356000, 0x200, 0x200, 0x0, 0x0, 0x0)
    	/usr/lib/go-1.13/src/internal/poll/fd_unix.go:169 +0x1d1
    os.(*File).read(...)
    	/usr/lib/go-1.13/src/os/file_unix.go:259
    os.(*File).Read(0xc000010598, 0xc000356000, 0x200, 0x200, 0x7effd7a26028, 0xc000060f80, 0xc000060ea0)
    	/usr/lib/go-1.13/src/os/file.go:116 +0x73
    bytes.(*Buffer).ReadFrom(0xc0003448a0, 0x55ce32a918c0, 0xc000010598, 0x7effd7a26028, 0xc0003448a0, 0xc0001ca401)
    	/usr/lib/go-1.13/src/bytes/buffer.go:204 +0xb6
    io.copyBuffer(0x55ce32a8f560, 0xc0003448a0, 0x55ce32a918c0, 0xc000010598, 0x0, 0x0, 0x0, 0x1, 0xc000060fa8, 0x55ce31b485d1)
    	/usr/lib/go-1.13/src/io/io.go:388 +0x2ef
    io.Copy(...)
    	/usr/lib/go-1.13/src/io/io.go:364
    os/exec.(*Cmd).writerDescriptor.func1(0x55ce32a784d8, 0xc000060fc8)
    	/usr/lib/go-1.13/src/os/exec/exec.go:311 +0x65
    os/exec.(*Cmd).Start.func1(0xc0000edce0, 0xc000347ee0)
    	/usr/lib/go-1.13/src/os/exec/exec.go:435 +0x29
    created by os/exec.(*Cmd).Start
    	/usr/lib/go-1.13/src/os/exec/exec.go:434 +0x60a
    
    goroutine 9 [runnable]:
    os/exec.(*Cmd).Start.func1(0xc0000edce0, 0xc000347f20)
    	/usr/lib/go-1.13/src/os/exec/exec.go:434
    created by os/exec.(*Cmd).Start
    	/usr/lib/go-1.13/src/os/exec/exec.go:434 +0x60a
    
    rax    0x0
    rbx    0x7effd76c6840
    rcx    0x7effd7318f47
    rdx    0x0
    rdi    0x2
    rsi    0x7effd48c6820
    rbp    0x55ce324c3e7c
    rsp    0x7effd48c6820
    r8     0x0
    r9     0x7effd48c6820
    r10    0x8
    r11    0x246
    r12    0x7effc8000c50
    r13    0x0
    r14    0x55ce324a9d10
    r15    0x0
    rip    0x7effd7318f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 4 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    runtime: failed to create new OS thread (have 5 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000080000)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000080000)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc00004b000, 0x3)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc000073f01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.mstart1()
    	/usr/local/go/src/runtime/proc.go:1179 +0x93
    runtime.mstart()
    	/usr/local/go/src/runtime/proc.go:1137 +0x6e
    
    goroutine 1 [runnable, locked to thread]:
    runtime.gcenable()
    	/usr/local/go/src/runtime/mgc.go:214 +0xc5
    runtime.main()
    	/usr/local/go/src/runtime/proc.go:167 +0x11e
    runtime.goexit()
    	/usr/local/go/src/runtime/asm_amd64.s:1374 +0x1
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000062800)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000062800)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x0, 0xc000046000, 0x4)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0xc000046000, 0x2a6cc00)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.handoffp(0xc000046000)
    	/usr/local/go/src/runtime/proc.go:2001 +0x52
    runtime.stoplockedm()
    	/usr/local/go/src/runtime/proc.go:2075 +0xf7
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2611 +0x48c
    runtime.goschedImpl(0xc000000180)
    	/usr/local/go/src/runtime/proc.go:2860 +0xda
    runtime.gopreempt_m(0xc000000180)
    	/usr/local/go/src/runtime/proc.go:2888 +0x34
    runtime.newstack()
    	/usr/local/go/src/runtime/stack.go:1047 +0x1bc
    runtime.morestack()
    	/usr/local/go/src/runtime/asm_amd64.s:449 +0x8f
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f43ffc55f47 m=7 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f43ffc55f47
    stack: frame={sp:0x7f43f6ffc840, fp:0x0} stack=[0x7f43f67fd288,0x7f43f6ffce88)
    00007f43f6ffc740:  00007f43f6ffcb20  00007f4400236f13 
    00007f43f6ffc750:  0000000000000005  000055b088b4e148 
    00007f43f6ffc760:  00007f43f6ffcc50  000055b08ab813f0 
    00007f43f6ffc770:  0000000000000000  000055b08802ad10 
    00007f43f6ffc780:  0000000000000000  00007f4400236f13 
    00007f43f6ffc790:  0000000000000005  0000000000000000 
    00007f43f6ffc7a0:  2525252525252525  2525252525252525 
    00007f43f6ffc7b0:  00000000000000ff  0000000000000000 
    00007f43f6ffc7c0:  00000000000000ff  0000000000000000 
    00007f43f6ffc7d0:  00007f43e8000010  00007f43e8000010 
    00007f43f6ffc7e0:  000000000000000e  000000000000000e 
    00007f43f6ffc7f0:  0000000000000000  0000000000000000 
    00007f43f6ffc800:  ffffffffffffffff  ffffffffffffffff 
    00007f43f6ffc810:  0000000400000004  0000000400000004 
    00007f43f6ffc820:  20636f6c6c616d00  203a64656c696166 
    00007f43f6ffc830:  0000000000000000  0000000000000000 
    00007f43f6ffc840: <0000000000000000  0000000000000000 
    00007f43f6ffc850:  0000000000000000  0000000000000000 
    00007f43f6ffc860:  0000000000000000  0000000000000000 
    00007f43f6ffc870:  0000000000000000  0000000000000000 
    00007f43f6ffc880:  0000000000000000  0000000000000000 
    00007f43f6ffc890:  0000000000000000  0000000000000000 
    00007f43f6ffc8a0:  0000000000000000  0000000000000000 
    00007f43f6ffc8b0:  00007f4400003560  00007f4400006bc0 
    00007f43f6ffc8c0:  fffffffe7fffffff  ffffffffffffffff 
    00007f43f6ffc8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f43f6ffc8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f43f6ffc8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f43f6ffc900:  ffffffffffffffff  ffffffffffffffff 
    00007f43f6ffc910:  ffffffffffffffff  ffffffffffffffff 
    00007f43f6ffc920:  ffffffffffffffff  ffffffffffffffff 
    00007f43f6ffc930:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f43ffc55f47
    stack: frame={sp:0x7f43f6ffc840, fp:0x0} stack=[0x7f43f67fd288,0x7f43f6ffce88)
    00007f43f6ffc740:  00007f43f6ffcb20  00007f4400236f13 
    00007f43f6ffc750:  0000000000000005  000055b088b4e148 
    00007f43f6ffc760:  00007f43f6ffcc50  000055b08ab813f0 
    00007f43f6ffc770:  0000000000000000  000055b08802ad10 
    00007f43f6ffc780:  0000000000000000  00007f4400236f13 
    00007f43f6ffc790:  0000000000000005  0000000000000000 
    00007f43f6ffc7a0:  2525252525252525  2525252525252525 
    00007f43f6ffc7b0:  00000000000000ff  0000000000000000 
    00007f43f6ffc7c0:  00000000000000ff  0000000000000000 
    00007f43f6ffc7d0:  00007f43e8000010  00007f43e8000010 
    00007f43f6ffc7e0:  000000000000000e  000000000000000e 
    00007f43f6ffc7f0:  0000000000000000  0000000000000000 
    00007f43f6ffc800:  ffffffffffffffff  ffffffffffffffff 
    00007f43f6ffc810:  0000000400000004  0000000400000004 
    00007f43f6ffc820:  20636f6c6c616d00  203a64656c696166 
    00007f43f6ffc830:  0000000000000000  0000000000000000 
    00007f43f6ffc840: <0000000000000000  0000000000000000 
    00007f43f6ffc850:  0000000000000000  0000000000000000 
    00007f43f6ffc860:  0000000000000000  0000000000000000 
    00007f43f6ffc870:  0000000000000000  0000000000000000 
    00007f43f6ffc880:  0000000000000000  0000000000000000 
    00007f43f6ffc890:  0000000000000000  0000000000000000 
    00007f43f6ffc8a0:  0000000000000000  0000000000000000 
    00007f43f6ffc8b0:  00007f4400003560  00007f4400006bc0 
    00007f43f6ffc8c0:  fffffffe7fffffff  ffffffffffffffff 
    00007f43f6ffc8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f43f6ffc8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f43f6ffc8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f43f6ffc900:  ffffffffffffffff  ffffffffffffffff 
    00007f43f6ffc910:  ffffffffffffffff  ffffffffffffffff 
    00007f43f6ffc920:  ffffffffffffffff  ffffffffffffffff 
    00007f43f6ffc930:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).parse(0xc00010e500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:278 +0xa5b
    text/template/parse.(*Tree).Parse(0xc00010e500, 0x55b087eda440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001b6720, 0xc000134350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x55b087e7f9b7, 0x4, 0x55b087eda440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000134350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc00003d840, 0x55b087eda440, 0x16c, 0x4, 0xc0000fb708, 0x55b088b69760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 6 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 7 [runnable]:
    text/template/parse.(*lexer).emit(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:157
    text/template/parse.lexRightDelim(0xc00013c630, 0x55b0885f98a8)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:345 +0x17f
    text/template/parse.(*lexer).run(0xc00013c630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:230 +0x39
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7f4400003840
    rcx    0x7f43ffc55f47
    rdx    0x0
    rdi    0x2
    rsi    0x7f43f6ffc840
    rbp    0x55b088044e7c
    rsp    0x7f43f6ffc840
    r8     0x0
    r9     0x7f43f6ffc840
    r10    0x8
    r11    0x246
    r12    0x55b08ab813f0
    r13    0x0
    r14    0x55b08802ad10
    r15    0x0
    rip    0x7f43ffc55f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
