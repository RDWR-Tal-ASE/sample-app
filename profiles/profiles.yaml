apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: 
    -----
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7febb1291f47 m=0 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7febb1291f47
    stack: frame={sp:0x7fff66be0830, fp:0x0} stack=[0x7fff663e1e70,0x7fff66be0eb0)
    00007fff66be0730:  00007fff66be0af0  00007febb187a75a 
    00007fff66be0740:  000000000000000b  0000000000000000 
    00007fff66be0750:  00007febae840700  00000000008661c8 
    00007fff66be0760:  00007fff66be0c40  0000000000ca63f0 
    00007fff66be0770:  0000000000000000  0000000000593e90 
    00007fff66be0780:  0000000000000000  00007febb1872f13 
    00007fff66be0790:  0000000000000005  0000000000000000 
    00007fff66be07a0:  2525252525252525  2525252525252525 
    00007fff66be07b0:  00000000ff00ff00  0000000000000000 
    00007fff66be07c0:  00000000ff000000  0000000000000000 
    00007fff66be07d0:  0000000000000000  0000000000000000 
    00007fff66be07e0:  2f7273752f3a6e69  73752f3a6e696273 
    00007fff66be07f0:  752f3a6e69622f72  6c61636f6c2f7273 
    00007fff66be0800:  73752f3a6e69622f  732f6e6962732f72 
    00007fff66be0810:  2f3a656369767265  6e69622f70616e73 
    00007fff66be0820:  6c6c616d00732520  656c69616620636f 
    00007fff66be0830: <0000000000000000  0000000000000000 
    00007fff66be0840:  0000000000000000  0000000000000000 
    00007fff66be0850:  0000000000000000  0000000000000000 
    00007fff66be0860:  0000000000000000  0000000000000000 
    00007fff66be0870:  0000000000000000  0000000000000000 
    00007fff66be0880:  0000000000000000  0000000000000000 
    00007fff66be0890:  0000000000000000  0000000000000000 
    00007fff66be08a0:  0000000000000000  0000000000000000 
    00007fff66be08b0:  fffffffe7fffffff  ffffffffffffffff 
    00007fff66be08c0:  ffffffffffffffff  ffffffffffffffff 
    00007fff66be08d0:  ffffffffffffffff  ffffffffffffffff 
    00007fff66be08e0:  ffffffffffffffff  ffffffffffffffff 
    00007fff66be08f0:  ffffffffffffffff  ffffffffffffffff 
    00007fff66be0900:  ffffffffffffffff  ffffffffffffffff 
    00007fff66be0910:  ffffffffffffffff  ffffffffffffffff 
    00007fff66be0920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7febb1291f47
    stack: frame={sp:0x7fff66be0830, fp:0x0} stack=[0x7fff663e1e70,0x7fff66be0eb0)
    00007fff66be0730:  00007fff66be0af0  00007febb187a75a 
    00007fff66be0740:  000000000000000b  0000000000000000 
    00007fff66be0750:  00007febae840700  00000000008661c8 
    00007fff66be0760:  00007fff66be0c40  0000000000ca63f0 
    00007fff66be0770:  0000000000000000  0000000000593e90 
    00007fff66be0780:  0000000000000000  00007febb1872f13 
    00007fff66be0790:  0000000000000005  0000000000000000 
    00007fff66be07a0:  2525252525252525  2525252525252525 
    00007fff66be07b0:  00000000ff00ff00  0000000000000000 
    00007fff66be07c0:  00000000ff000000  0000000000000000 
    00007fff66be07d0:  0000000000000000  0000000000000000 
    00007fff66be07e0:  2f7273752f3a6e69  73752f3a6e696273 
    00007fff66be07f0:  752f3a6e69622f72  6c61636f6c2f7273 
    00007fff66be0800:  73752f3a6e69622f  732f6e6962732f72 
    00007fff66be0810:  2f3a656369767265  6e69622f70616e73 
    00007fff66be0820:  6c6c616d00732520  656c69616620636f 
    00007fff66be0830: <0000000000000000  0000000000000000 
    00007fff66be0840:  0000000000000000  0000000000000000 
    00007fff66be0850:  0000000000000000  0000000000000000 
    00007fff66be0860:  0000000000000000  0000000000000000 
    00007fff66be0870:  0000000000000000  0000000000000000 
    00007fff66be0880:  0000000000000000  0000000000000000 
    00007fff66be0890:  0000000000000000  0000000000000000 
    00007fff66be08a0:  0000000000000000  0000000000000000 
    00007fff66be08b0:  fffffffe7fffffff  ffffffffffffffff 
    00007fff66be08c0:  ffffffffffffffff  ffffffffffffffff 
    00007fff66be08d0:  ffffffffffffffff  ffffffffffffffff 
    00007fff66be08e0:  ffffffffffffffff  ffffffffffffffff 
    00007fff66be08f0:  ffffffffffffffff  ffffffffffffffff 
    00007fff66be0900:  ffffffffffffffff  ffffffffffffffff 
    00007fff66be0910:  ffffffffffffffff  ffffffffffffffff 
    00007fff66be0920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [running, locked to thread]:
    runtime.systemstack_switch()
    	/usr/lib/go-1.13/src/runtime/asm_amd64.s:330 fp=0xc00003c6c8 sp=0xc00003c6c0 pc=0x456b50
    runtime.newproc(0x0, 0x57a308)
    	/usr/lib/go-1.13/src/runtime/proc.go:3255 +0x6e fp=0xc00003c710 sp=0xc00003c6c8 pc=0x437e5e
    runtime.init.5()
    	/usr/lib/go-1.13/src/runtime/proc.go:242 +0x35 fp=0xc00003c730 sp=0xc00003c710 pc=0x430745
    runtime.doInit(0x874ae0)
    	/usr/lib/go-1.13/src/runtime/proc.go:5222 +0x8a fp=0xc00003c760 sp=0xc00003c730 pc=0x43c58a
    runtime.main()
    	/usr/lib/go-1.13/src/runtime/proc.go:150 +0xc3 fp=0xc00003c7e0 sp=0xc00003c760 pc=0x430433
    runtime.goexit()
    	/usr/lib/go-1.13/src/runtime/asm_amd64.s:1357 +0x1 fp=0xc00003c7e8 sp=0xc00003c7e0 pc=0x458c21
    
    rax    0x0
    rbx    0x7febb163f840
    rcx    0x7febb1291f47
    rdx    0x0
    rdi    0x2
    rsi    0x7fff66be0830
    rbp    0x59f2ca
    rsp    0x7fff66be0830
    r8     0x0
    r9     0x7fff66be0830
    r10    0x8
    r11    0x246
    r12    0xca63f0
    r13    0x0
    r14    0x593e90
    r15    0x0
    rip    0x7febb1291f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    -----
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f3345fc7f47 m=8 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f3345fc7f47
    stack: frame={sp:0x7f3340d70870, fp:0x0} stack=[0x7f3340571288,0x7f3340d70e88)
    00007f3340d70770:  00007f3340d70b30  00007f33465b075a 
    00007f3340d70780:  000000000000000b  0000000000000000 
    00007f3340d70790:  00007f33233d2700  000055c1b5dc8148 
    00007f3340d707a0:  00007f3340d70c80  000055c1b67a0540 
    00007f3340d707b0:  0000000000000000  000055c1b52a4d10 
    00007f3340d707c0:  0000000000000000  00007f33465a8f13 
    00007f3340d707d0:  0000000000000005  0000000000000000 
    00007f3340d707e0:  2525252525252525  2525252525252525 
    00007f3340d707f0:  00000000000000ff  0000000000000000 
    00007f3340d70800:  00000000000000ff  0000000000000000 
    00007f3340d70810:  0000000000000000  0000000000000000 
    00007f3340d70820:  646975736f6e2c77  2c636578656f6e2c 
    00007f3340d70830:  656d6974616c6572  7366706d74202d20 
    00007f3340d70840:  72207366706d7420  333d657a69732c77 
    00007f3340d70850:  2c6b363939333932  3535373d65646f6d 
    00007f3340d70860:  20636f6c6c616d00  203a64656c696166 
    00007f3340d70870: <0000000000000000  0000000000000000 
    00007f3340d70880:  6665343232323762  3665633231333232 
    00007f3340d70890:  3162326233653939  3863373534383065 
    00007f3340d708a0:  6131666563623335  6b726f772f366462 
    00007f3340d708b0:  000000c00043f950  000000c00043f9e0 
    00007f3340d708c0:  000000c00043fa70  000000c00043fb00 
    00007f3340d708d0:  000000c00043fb90  000000c00043fc20 
    00007f3340d708e0:  0000000000000000  0000000000000000 
    00007f3340d708f0:  fffffffe7fffffff  ffffffffffffffff 
    00007f3340d70900:  ffffffffffffffff  ffffffffffffffff 
    00007f3340d70910:  ffffffffffffffff  ffffffffffffffff 
    00007f3340d70920:  ffffffffffffffff  ffffffffffffffff 
    00007f3340d70930:  ffffffffffffffff  ffffffffffffffff 
    00007f3340d70940:  ffffffffffffffff  ffffffffffffffff 
    00007f3340d70950:  ffffffffffffffff  ffffffffffffffff 
    00007f3340d70960:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f3345fc7f47
    stack: frame={sp:0x7f3340d70870, fp:0x0} stack=[0x7f3340571288,0x7f3340d70e88)
    00007f3340d70770:  00007f3340d70b30  00007f33465b075a 
    00007f3340d70780:  000000000000000b  0000000000000000 
    00007f3340d70790:  00007f33233d2700  000055c1b5dc8148 
    00007f3340d707a0:  00007f3340d70c80  000055c1b67a0540 
    00007f3340d707b0:  0000000000000000  000055c1b52a4d10 
    00007f3340d707c0:  0000000000000000  00007f33465a8f13 
    00007f3340d707d0:  0000000000000005  0000000000000000 
    00007f3340d707e0:  2525252525252525  2525252525252525 
    00007f3340d707f0:  00000000000000ff  0000000000000000 
    00007f3340d70800:  00000000000000ff  0000000000000000 
    00007f3340d70810:  0000000000000000  0000000000000000 
    00007f3340d70820:  646975736f6e2c77  2c636578656f6e2c 
    00007f3340d70830:  656d6974616c6572  7366706d74202d20 
    00007f3340d70840:  72207366706d7420  333d657a69732c77 
    00007f3340d70850:  2c6b363939333932  3535373d65646f6d 
    00007f3340d70860:  20636f6c6c616d00  203a64656c696166 
    00007f3340d70870: <0000000000000000  0000000000000000 
    00007f3340d70880:  6665343232323762  3665633231333232 
    00007f3340d70890:  3162326233653939  3863373534383065 
    00007f3340d708a0:  6131666563623335  6b726f772f366462 
    00007f3340d708b0:  000000c00043f950  000000c00043f9e0 
    00007f3340d708c0:  000000c00043fa70  000000c00043fb00 
    00007f3340d708d0:  000000c00043fb90  000000c00043fc20 
    00007f3340d708e0:  0000000000000000  0000000000000000 
    00007f3340d708f0:  fffffffe7fffffff  ffffffffffffffff 
    00007f3340d70900:  ffffffffffffffff  ffffffffffffffff 
    00007f3340d70910:  ffffffffffffffff  ffffffffffffffff 
    00007f3340d70920:  ffffffffffffffff  ffffffffffffffff 
    00007f3340d70930:  ffffffffffffffff  ffffffffffffffff 
    00007f3340d70940:  ffffffffffffffff  ffffffffffffffff 
    00007f3340d70950:  ffffffffffffffff  ffffffffffffffff 
    00007f3340d70960:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [syscall]:
    runtime.notetsleepg(0x55c1b5e22ad8, 0xffffffffffffffff, 0xc000042a00)
    	/usr/lib/go-1.13/src/runtime/lock_futex.go:227 +0x38 fp=0xc00023f0b8 sp=0xc00023f088 pc=0x55c1b4948d18
    runtime.gcBgMarkStartWorkers()
    	/usr/lib/go-1.13/src/runtime/mgc.go:1795 +0x92 fp=0xc00023f0f8 sp=0xc00023f0b8 pc=0x55c1b4959e42
    runtime.gcStart(0x0, 0x0, 0x0)
    	/usr/lib/go-1.13/src/runtime/mgc.go:1267 +0x19d fp=0xc00023f168 sp=0xc00023f0f8 pc=0x55c1b4958aad
    runtime.mallocgc(0xa0, 0x55c1b5718940, 0x401, 0xc0004a5780)
    	/usr/lib/go-1.13/src/runtime/malloc.go:1115 +0x424 fp=0xc00023f208 sp=0xc00023f168 pc=0x55c1b494a044
    runtime.makeslice(0x55c1b5718940, 0xa, 0xa, 0xc0004a5780)
    	/usr/lib/go-1.13/src/runtime/slice.go:49 +0x6e fp=0xc00023f238 sp=0xc00023f208 pc=0x55c1b498225e
    strings.FieldsFunc(0xc00044c690, 0x66, 0x55c1b5872418, 0x2, 0x0, 0xc000254380)
    	/usr/lib/go-1.13/src/strings/strings.go:415 +0x222 fp=0xc00023f4c8 sp=0xc00023f238 pc=0x55c1b49e76c2
    github.com/snapcore/snapd/osutil.ParseMountInfoEntry(0xc00044c690, 0x66, 0x66, 0x168, 0xc00044c690)
    	/build/snapd/parts/snapd-deb/build/osutil/mountinfo_linux.go:137 +0x75 fp=0xc00023f568 sp=0xc00023f4c8 pc=0x55c1b4ba2bd5
    github.com/snapcore/snapd/osutil.ReadMountInfo(0x55c1b588c8c0, 0xc000452150, 0xc000452150, 0x55c1b588c8c0, 0xc000452150, 0x1, 0xc000448de0)
    	/build/snapd/parts/snapd-deb/build/osutil/mountinfo_linux.go:121 +0x119 fp=0xc00023f658 sp=0xc00023f568 pc=0x55c1b4ba29a9
    github.com/snapcore/snapd/osutil.LoadMountInfo(0x0, 0x0, 0x0, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/osutil/mountinfo_linux.go:112 +0xf2 fp=0xc00023f6f8 sp=0xc00023f658 pc=0x55c1b4ba27d2
    github.com/snapcore/snapd/sandbox/selinux.getSELinuxMount(0x2, 0x2, 0xc000448de0, 0x12)
    	/build/snapd/parts/snapd-deb/build/sandbox/selinux/selinux_linux.go:65 +0x28 fp=0xc00023f730 sp=0xc00023f6f8 pc=0x55c1b4f9ac28
    github.com/snapcore/snapd/sandbox/selinux.IsEnabled(0xc0003e4b00, 0xd, 0xc000440db8)
    	/build/snapd/parts/snapd-deb/build/sandbox/selinux/selinux_linux.go:33 +0x28 fp=0xc00023f788 sp=0xc00023f730 pc=0x55c1b4f9a808
    main.maybeRestoreSecurityContext(0xc000492050, 0xc000440db8, 0xc000440db8, 0x0)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:433 +0x7c fp=0xc00023f830 sp=0xc00023f788 pc=0x55c1b50ade7c
    main.createUserDataDirs(0xc000490000, 0xc000440db8, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:426 +0x591 fp=0xc00023f9a8 sp=0xc00023f830 pc=0x55c1b50adc31
    main.(*cmdRun).runSnapConfine(0xc00023feb8, 0xc000490000, 0xc000440dc0, 0xa, 0x7ffccdfd4ef3, 0x2, 0x0, 0x0, 0xc000032190, 0x2, ...)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:1043 +0x3a5 fp=0xc00023fb70 sp=0xc00023f9a8 pc=0x55c1b50b2355
    main.(*cmdRun).snapRunApp(0xc00023feb8, 0x7ffccdfd4ef3, 0x2, 0xc000032190, 0x2, 0x2, 0xc0003b2ba0, 0xc00027b8e0)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:505 +0x1b9 fp=0xc00023fc50 sp=0xc00023fb70 pc=0x55c1b50ae669
    main.(*cmdRun).Execute(0xc00023feb8, 0xc000032190, 0x2, 0x3, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:257 +0x264 fp=0xc00023fd38 sp=0xc00023fc50 pc=0x55c1b50ac414
    main.main()
    	/build/snapd/parts/snapd-deb/build/cmd/snap/main.go:482 +0x581 fp=0xc00023ff60 sp=0xc00023fd38 pc=0x55c1b50de861
    runtime.main()
    	/usr/lib/go-1.13/src/runtime/proc.go:203 +0x226 fp=0xc00023ffe0 sp=0xc00023ff60 pc=0x55c1b496d9e6
    runtime.goexit()
    	/usr/lib/go-1.13/src/runtime/asm_amd64.s:1357 +0x1 fp=0xc00023ffe8 sp=0xc00023ffe0 pc=0x55c1b4999c21
    
    goroutine 6 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 24 [IO wait]:
    internal/poll.runtime_pollWait(0x7f3346719d08, 0x72, 0xffffffffffffffff)
    	/usr/lib/go-1.13/src/runtime/netpoll.go:184 +0x57
    internal/poll.(*pollDesc).wait(0xc0003c2d18, 0x72, 0x1000, 0x1000, 0xffffffffffffffff)
    	/usr/lib/go-1.13/src/internal/poll/fd_poll_runtime.go:87 +0x47
    internal/poll.(*pollDesc).waitRead(...)
    	/usr/lib/go-1.13/src/internal/poll/fd_poll_runtime.go:92
    internal/poll.(*FD).Read(0xc0003c2d00, 0xc00040d000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
    	/usr/lib/go-1.13/src/internal/poll/fd_unix.go:169 +0x1d1
    net.(*netFD).Read(0xc0003c2d00, 0xc00040d000, 0x1000, 0x1000, 0x55c1b496de8e, 0xc00041eb20, 0x55c1b4996670)
    	/usr/lib/go-1.13/src/net/fd_unix.go:202 +0x51
    net.(*conn).Read(0xc000280260, 0xc00040d000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
    	/usr/lib/go-1.13/src/net/net.go:184 +0x6a
    net/http.(*persistConn).Read(0xc000436120, 0xc00040d000, 0x1000, 0x1000, 0xc00028ba40, 0xc00041ec20, 0x55c1b4942b65)
    	/usr/lib/go-1.13/src/net/http/transport.go:1758 +0x77
    bufio.(*Reader).fill(0xc000416360)
    	/usr/lib/go-1.13/src/bufio/bufio.go:100 +0x105
    bufio.(*Reader).Peek(0xc000416360, 0x1, 0x0, 0x0, 0x1, 0xc00028b900, 0x0)
    	/usr/lib/go-1.13/src/bufio/bufio.go:138 +0x51
    net/http.(*persistConn).readLoop(0xc000436120)
    	/usr/lib/go-1.13/src/net/http/transport.go:1911 +0x1d8
    created by net/http.(*Transport).dialConn
    	/usr/lib/go-1.13/src/net/http/transport.go:1580 +0xb0f
    
    goroutine 25 [select]:
    net/http.(*persistConn).writeLoop(0xc000436120)
    	/usr/lib/go-1.13/src/net/http/transport.go:2210 +0x125
    created by net/http.(*Transport).dialConn
    	/usr/lib/go-1.13/src/net/http/transport.go:1581 +0xb34
    
    rax    0x0
    rbx    0x7f3346375840
    rcx    0x7f3345fc7f47
    rdx    0x0
    rdi    0x2
    rsi    0x7f3340d70870
    rbp    0x55c1b52bee7c
    rsp    0x7f3340d70870
    r8     0x0
    r9     0x7f3340d70870
    r10    0x8
    r11    0x246
    r12    0x55c1b67a0540
    r13    0x0
    r14    0x55c1b52a4d10
    r15    0x0
    rip    0x7f3345fc7f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000500000)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000500000)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc00004d800, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc000073f01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc000001500)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [runnable, locked to thread]:
    encoding/json.stateEndValue(0xc0004c50a8, 0x20, 0x9)
    	/usr/local/go/src/encoding/json/scanner.go:277 +0x791
    encoding/json.(*decodeState).skip(0xc0004c5080)
    	/usr/local/go/src/encoding/json/decode.go:265 +0x89
    encoding/json.(*decodeState).object(0xc0004c5080, 0x19ce1a0, 0xc0004ce6c0, 0x199, 0xc0004c50a8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:608 +0x2006
    encoding/json.(*decodeState).value(0xc0004c5080, 0x19ce1a0, 0xc0004ce6c0, 0x199, 0xc0004d5d40, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004c5080, 0x18bc100, 0xc0004ce620, 0x195, 0xc0004c50a8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004c5080, 0x18bc100, 0xc0004ce620, 0x195, 0x18bc100, 0xc0004ce620)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004c5080, 0x1815520, 0xc0004ce480, 0x16, 0xc0004c50a8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004c5080, 0x1815520, 0xc0004ce480, 0x16, 0xc0003cc888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0004c5080, 0x1815520, 0xc0004ce480, 0xc0004c50a8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc00036d182, 0x67b, 0x8c7e, 0x1815520, 0xc0004ce480, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00039c240, 0xc00036d182, 0x67b, 0x8c7e, 0x7fac193e9980, 0xc00039c240)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e49a0, 0x19ce1a0, 0xc00039c240, 0x199, 0xc0000e49c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e49a0, 0x19ce1a0, 0xc00039c240, 0x199, 0xc0004ce240, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e49a0, 0x18e59a0, 0xc0003761c8, 0x195, 0xc0000e49c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e49a0, 0x18e59a0, 0xc0003761c8, 0x195, 0x18e59a0, 0xc0003761c8)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e49a0, 0x1815520, 0xc000376000, 0x16, 0xc0000e49c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e49a0, 0x1815520, 0xc000376000, 0x16, 0xc000123548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e49a0, 0x1815520, 0xc000376000, 0xc0000e49c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000366000, 0x9d38, 0xfe00, 0x1815520, 0xc000376000, 0x2aa0130, 0x7fac193e9800)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000323d40, 0xc000366000, 0x9d38, 0xfe00, 0x7fac193e9980, 0xc000323d40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e48f0, 0x1a89300, 0xc000323d40, 0x16, 0xc0000e4918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e48f0, 0x1a89300, 0xc000323d40, 0x16, 0xc000123c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e48f0, 0x1a89300, 0xc000323d40, 0xc0000e4918, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000366000, 0x9d39, 0xfe00, 0x1a89300, 0xc000323d40, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc00031db30, 0xc000123d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc00031da70, 0xc00031da40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 18 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
