apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f62d1c97f47 m=7 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f62d1c97f47
    stack: frame={sp:0x7f62cd0e1830, fp:0x0} stack=[0x7f62cc8e2288,0x7f62cd0e1e88)
    00007f62cd0e1730:  00007f62cd0e1af0  00007f62d228075a 
    00007f62cd0e1740:  000000000000000b  0000000000000000 
    00007f62cd0e1750:  00007f62af7bd700  00005616324a8148 
    00007f62cd0e1760:  00007f62cd0e1c40  00005616332043f0 
    00007f62cd0e1770:  0000000000000000  0000561631984d10 
    00007f62cd0e1780:  0000000000000000  00007f62d2278f13 
    00007f62cd0e1790:  0000000000000005  0000000000000000 
    00007f62cd0e17a0:  2525252525252525  2525252525252525 
    00007f62cd0e17b0:  00000000000000ff  0000000000000000 
    00007f62cd0e17c0:  00000000000000ff  0000000000000000 
    00007f62cd0e17d0:  0000000000000008  000000000000000c 
    00007f62cd0e17e0:  000000000000000e  000000000000000e 
    00007f62cd0e17f0:  0000000000000000  0000000000000000 
    00007f62cd0e1800:  ffffffffffffffff  ffffffffffffffff 
    00007f62cd0e1810:  0000000400000004  0000000400000004 
    00007f62cd0e1820:  20636f6c6c616d00  203a64656c696166 
    00007f62cd0e1830: <0000000000000000  0000000000000000 
    00007f62cd0e1840:  0000000000000000  0000000000000000 
    00007f62cd0e1850:  0000000000000000  0000000000000000 
    00007f62cd0e1860:  0000000000000000  0000000000000000 
    00007f62cd0e1870:  0000000000000000  0000000000000000 
    00007f62cd0e1880:  0000000000000000  0000000000000000 
    00007f62cd0e1890:  0000000000000000  0000000000000000 
    00007f62cd0e18a0:  0000000000000000  0000000000000000 
    00007f62cd0e18b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f62cd0e18c0:  ffffffffffffffff  ffffffffffffffff 
    00007f62cd0e18d0:  ffffffffffffffff  ffffffffffffffff 
    00007f62cd0e18e0:  ffffffffffffffff  ffffffffffffffff 
    00007f62cd0e18f0:  ffffffffffffffff  ffffffffffffffff 
    00007f62cd0e1900:  ffffffffffffffff  ffffffffffffffff 
    00007f62cd0e1910:  ffffffffffffffff  ffffffffffffffff 
    00007f62cd0e1920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f62d1c97f47
    stack: frame={sp:0x7f62cd0e1830, fp:0x0} stack=[0x7f62cc8e2288,0x7f62cd0e1e88)
    00007f62cd0e1730:  00007f62cd0e1af0  00007f62d228075a 
    00007f62cd0e1740:  000000000000000b  0000000000000000 
    00007f62cd0e1750:  00007f62af7bd700  00005616324a8148 
    00007f62cd0e1760:  00007f62cd0e1c40  00005616332043f0 
    00007f62cd0e1770:  0000000000000000  0000561631984d10 
    00007f62cd0e1780:  0000000000000000  00007f62d2278f13 
    00007f62cd0e1790:  0000000000000005  0000000000000000 
    00007f62cd0e17a0:  2525252525252525  2525252525252525 
    00007f62cd0e17b0:  00000000000000ff  0000000000000000 
    00007f62cd0e17c0:  00000000000000ff  0000000000000000 
    00007f62cd0e17d0:  0000000000000008  000000000000000c 
    00007f62cd0e17e0:  000000000000000e  000000000000000e 
    00007f62cd0e17f0:  0000000000000000  0000000000000000 
    00007f62cd0e1800:  ffffffffffffffff  ffffffffffffffff 
    00007f62cd0e1810:  0000000400000004  0000000400000004 
    00007f62cd0e1820:  20636f6c6c616d00  203a64656c696166 
    00007f62cd0e1830: <0000000000000000  0000000000000000 
    00007f62cd0e1840:  0000000000000000  0000000000000000 
    00007f62cd0e1850:  0000000000000000  0000000000000000 
    00007f62cd0e1860:  0000000000000000  0000000000000000 
    00007f62cd0e1870:  0000000000000000  0000000000000000 
    00007f62cd0e1880:  0000000000000000  0000000000000000 
    00007f62cd0e1890:  0000000000000000  0000000000000000 
    00007f62cd0e18a0:  0000000000000000  0000000000000000 
    00007f62cd0e18b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f62cd0e18c0:  ffffffffffffffff  ffffffffffffffff 
    00007f62cd0e18d0:  ffffffffffffffff  ffffffffffffffff 
    00007f62cd0e18e0:  ffffffffffffffff  ffffffffffffffff 
    00007f62cd0e18f0:  ffffffffffffffff  ffffffffffffffff 
    00007f62cd0e1900:  ffffffffffffffff  ffffffffffffffff 
    00007f62cd0e1910:  ffffffffffffffff  ffffffffffffffff 
    00007f62cd0e1920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [runnable]:
    github.com/snapcore/snapd/client.(*Client).do(0xc00038c1c0, 0x5616317d8ee7, 0x3, 0x5616317e2d78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x561631e32f40, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:394 +0x2f9
    github.com/snapcore/snapd/client.(*Client).doSyncWithOpts(0xc00038c1c0, 0x5616317d8ee7, 0x3, 0x5616317e2d78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x561631dce9a0, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:492 +0xf6
    github.com/snapcore/snapd/client.(*Client).SysInfo(0xc00038c1c0, 0x46, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/client/client.go:727 +0xd4
    main.maybeWaitForSecurityProfileRegeneration(0xc00038c1c0, 0xc0003c97c0, 0xd)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:200 +0x1aa
    main.(*cmdRun).Execute(0xc000251eb8, 0xc0000a8160, 0x2, 0x3, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:240 +0x172
    main.main()
    	/build/snapd/parts/snapd-deb/build/cmd/snap/main.go:482 +0x581
    
    goroutine 19 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    rax    0x0
    rbx    0x7f62d2045840
    rcx    0x7f62d1c97f47
    rdx    0x0
    rdi    0x2
    rsi    0x7f62cd0e1830
    rbp    0x56163199ee7c
    rsp    0x7f62cd0e1830
    r8     0x0
    r9     0x7f62cd0e1830
    r10    0x8
    r11    0x246
    r12    0x5616332043f0
    r13    0x0
    r14    0x561631984d10
    r15    0x0
    rip    0x7f62d1c97f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000208000)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000208000)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc000048800, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc00006df01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc000000c00)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [syscall, locked to thread]:
    reflect.mapassign(0x18bc100, 0xc0004f3830, 0xc00050d030, 0xc000522fc0)
    	/usr/local/go/src/runtime/map.go:1319 +0x3f
    reflect.Value.SetMapIndex(0x18bc100, 0xc000522860, 0x195, 0x1858200, 0xc00050d030, 0x98, 0x19ce1a0, 0xc000522fc0, 0x199)
    	/usr/local/go/src/reflect/value.go:1706 +0x27c
    encoding/json.(*decodeState).object(0xc0005168f0, 0x18bc100, 0xc000522860, 0x195, 0xc000516918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:807 +0x8da
    encoding/json.(*decodeState).value(0xc0005168f0, 0x18bc100, 0xc000522860, 0x195, 0x18bc100, 0xc000522860)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0005168f0, 0x1815520, 0xc0005226c0, 0x16, 0xc000516918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0005168f0, 0x1815520, 0xc0005226c0, 0x16, 0xc0004a0888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0005168f0, 0x1815520, 0xc0005226c0, 0xc000516918, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0004407b5, 0x9e1, 0xb64b, 0x1815520, 0xc0005226c0, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000470900, 0xc0004407b5, 0x9e1, 0xb64b, 0x7f28c161ca40, 0xc000470900)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0001369a0, 0x19ce1a0, 0xc000470900, 0x199, 0xc0001369c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0001369a0, 0x19ce1a0, 0xc000470900, 0x199, 0xc000522480, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0001369a0, 0x18e59a0, 0xc0003fe888, 0x195, 0xc0001369c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0001369a0, 0x18e59a0, 0xc0003fe888, 0x195, 0x18e59a0, 0xc0003fe888)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0001369a0, 0x1815520, 0xc0003fe6c0, 0x16, 0xc0001369c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0001369a0, 0x1815520, 0xc0003fe6c0, 0x16, 0xc000173548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0001369a0, 0x1815520, 0xc0003fe6c0, 0xc0001369c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc00043c000, 0x9d38, 0xfe00, 0x1815520, 0xc0003fe6c0, 0x7f28c1614558, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0003fe480, 0xc00043c000, 0x9d38, 0xfe00, 0x7f28c161ca40, 0xc0003fe480)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0001368f0, 0x1a89300, 0xc0003fe480, 0x16, 0xc000136918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0001368f0, 0x1a89300, 0xc0003fe480, 0x16, 0xc000173c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0001368f0, 0x1a89300, 0xc0003fe480, 0xc000136918, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc00043c000, 0x9d39, 0xfe00, 0x1a89300, 0xc0003fe480, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc0003efb30, 0xc000173d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc0003efa70, 0xc0003efa40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 6 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: 
    -----
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f0e99622f47 m=0 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f0e99622f47
    stack: frame={sp:0x7ffce24cd2a0, fp:0x0} stack=[0x7ffce1cce830,0x7ffce24cd870)
    00007ffce24cd1a0:  00007ffce24cd650  00007f0e999d7c58 
    00007ffce24cd1b0:  00007ffce24cd560  00007f0e99c0b75a 
    00007ffce24cd1c0:  000000000000000b  0000000000000000 
    00007ffce24cd1d0:  00007f0e973d2700  00000000008661c8 
    00007ffce24cd1e0:  00007ffce24cd6b0  0000000001fe52a0 
    00007ffce24cd1f0:  0000000000000000  0000000000593e90 
    00007ffce24cd200:  0000000000000000  00007f0e99c03f13 
    00007ffce24cd210:  0000000000000001  0000000000000000 
    00007ffce24cd220:  2525252525252525  2525252525252525 
    00007ffce24cd230:  00000000ff00ff00  0000000000000000 
    00007ffce24cd240:  00000000ff000000  0000000000000000 
    00007ffce24cd250:  414fffffe0000000  0000000000000000 
    00007ffce24cd260:  2f7273752f3a6e69  73752f3a6e696273 
    00007ffce24cd270:  752f3a6e69622f72  6c61636f6c2f7273 
    00007ffce24cd280:  73752f3a6e69622f  732f6e6962732f72 
    00007ffce24cd290:  2f3a656369767265  6e69622f70616e73 
    00007ffce24cd2a0: <0000000000000000  656c69616620636f 
    00007ffce24cd2b0:  0000000000000000  0000000000000000 
    00007ffce24cd2c0:  0000000000000000  0000000000000000 
    00007ffce24cd2d0:  0000000000000000  0000000000000000 
    00007ffce24cd2e0:  0000000000000000  0000000000000000 
    00007ffce24cd2f0:  0000000000000000  0000000000000000 
    00007ffce24cd300:  0000000000000000  0000000000000000 
    00007ffce24cd310:  0000000000000000  0000000000000000 
    00007ffce24cd320:  fffffffe7fffffff  ffffffffffffffff 
    00007ffce24cd330:  ffffffffffffffff  ffffffffffffffff 
    00007ffce24cd340:  ffffffffffffffff  ffffffffffffffff 
    00007ffce24cd350:  ffffffffffffffff  ffffffffffffffff 
    00007ffce24cd360:  ffffffffffffffff  ffffffffffffffff 
    00007ffce24cd370:  ffffffffffffffff  ffffffffffffffff 
    00007ffce24cd380:  ffffffffffffffff  ffffffffffffffff 
    00007ffce24cd390:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f0e99622f47
    stack: frame={sp:0x7ffce24cd2a0, fp:0x0} stack=[0x7ffce1cce830,0x7ffce24cd870)
    00007ffce24cd1a0:  00007ffce24cd650  00007f0e999d7c58 
    00007ffce24cd1b0:  00007ffce24cd560  00007f0e99c0b75a 
    00007ffce24cd1c0:  000000000000000b  0000000000000000 
    00007ffce24cd1d0:  00007f0e973d2700  00000000008661c8 
    00007ffce24cd1e0:  00007ffce24cd6b0  0000000001fe52a0 
    00007ffce24cd1f0:  0000000000000000  0000000000593e90 
    00007ffce24cd200:  0000000000000000  00007f0e99c03f13 
    00007ffce24cd210:  0000000000000001  0000000000000000 
    00007ffce24cd220:  2525252525252525  2525252525252525 
    00007ffce24cd230:  00000000ff00ff00  0000000000000000 
    00007ffce24cd240:  00000000ff000000  0000000000000000 
    00007ffce24cd250:  414fffffe0000000  0000000000000000 
    00007ffce24cd260:  2f7273752f3a6e69  73752f3a6e696273 
    00007ffce24cd270:  752f3a6e69622f72  6c61636f6c2f7273 
    00007ffce24cd280:  73752f3a6e69622f  732f6e6962732f72 
    00007ffce24cd290:  2f3a656369767265  6e69622f70616e73 
    00007ffce24cd2a0: <0000000000000000  656c69616620636f 
    00007ffce24cd2b0:  0000000000000000  0000000000000000 
    00007ffce24cd2c0:  0000000000000000  0000000000000000 
    00007ffce24cd2d0:  0000000000000000  0000000000000000 
    00007ffce24cd2e0:  0000000000000000  0000000000000000 
    00007ffce24cd2f0:  0000000000000000  0000000000000000 
    00007ffce24cd300:  0000000000000000  0000000000000000 
    00007ffce24cd310:  0000000000000000  0000000000000000 
    00007ffce24cd320:  fffffffe7fffffff  ffffffffffffffff 
    00007ffce24cd330:  ffffffffffffffff  ffffffffffffffff 
    00007ffce24cd340:  ffffffffffffffff  ffffffffffffffff 
    00007ffce24cd350:  ffffffffffffffff  ffffffffffffffff 
    00007ffce24cd360:  ffffffffffffffff  ffffffffffffffff 
    00007ffce24cd370:  ffffffffffffffff  ffffffffffffffff 
    00007ffce24cd380:  ffffffffffffffff  ffffffffffffffff 
    00007ffce24cd390:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [running]:
    runtime.systemstack_switch()
    	/usr/lib/go-1.13/src/runtime/asm_amd64.s:330 fp=0xc00003c760 sp=0xc00003c758 pc=0x456b50
    runtime.main()
    	/usr/lib/go-1.13/src/runtime/proc.go:133 +0x63 fp=0xc00003c7e0 sp=0xc00003c760 pc=0x4303d3
    runtime.goexit()
    	/usr/lib/go-1.13/src/runtime/asm_amd64.s:1357 +0x1 fp=0xc00003c7e8 sp=0xc00003c7e0 pc=0x458c21
    
    rax    0x0
    rbx    0x7f0e999d0840
    rcx    0x7f0e99622f47
    rdx    0x0
    rdi    0x2
    rsi    0x7ffce24cd2a0
    rbp    0x59f2ca
    rsp    0x7ffce24cd2a0
    r8     0x0
    r9     0x7ffce24cd2a0
    r10    0x8
    r11    0x246
    r12    0x1fe52a0
    r13    0x0
    r14    0x593e90
    r15    0x0
    rip    0x7f0e99622f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    -----
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7fdbf9a4cf47 m=8 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7fdbf9a4cf47
    stack: frame={sp:0x7fdbdfdec830, fp:0x0} stack=[0x7fdbdf5ed288,0x7fdbdfdece88)
    00007fdbdfdec730:  00007fdbdfdecaf0  00007fdbfa03575a 
    00007fdbdfdec740:  000000000000000b  0000000000000000 
    00007fdbdfdec750:  00007fdbdf5ec700  000055e4cf76e148 
    00007fdbdfdec760:  00007fdbdfdecc40  000055e4d08fefc0 
    00007fdbdfdec770:  0000000000000000  000055e4cec4ad10 
    00007fdbdfdec780:  0000000000000000  00007fdbfa02df13 
    00007fdbdfdec790:  0000000000000005  0000000000000000 
    00007fdbdfdec7a0:  2525252525252525  2525252525252525 
    00007fdbdfdec7b0:  00000000000000ff  0000000000000000 
    00007fdbdfdec7c0:  00000000000000ff  0000000000000000 
    00007fdbdfdec7d0:  000000000000ff00  0000000000000000 
    00007fdbdfdec7e0:  000055e4ce53149a <net.unixSocket+314>  000055e4cf249300 
    00007fdbdfdec7f0:  0000000000000000  0000000000000000 
    00007fdbdfdec800:  0000000000000000  0000000000000000 
    00007fdbdfdec810:  0000000000000000  0000000000000000 
    00007fdbdfdec820:  20636f6c6c616d00  203a64656c696166 
    00007fdbdfdec830: <0000000000000000  0000000000000000 
    00007fdbdfdec840:  000000c00034c280  000000c0003da000 
    00007fdbdfdec850:  0000000000000000  0000000000000000 
    00007fdbdfdec860:  0000000000000000  0000000000000000 
    00007fdbdfdec870:  000055e4ce8d2698 <github.com/snapcore/snapd/interfaces.SystemKeyMismatch+40>  000055e4cea51f08 <main.maybeWaitForSecurityProfileRegeneration+40> 
    00007fdbdfdec880:  000055e4cea52322 <main.(*cmdRun).Execute+370>  000055e4cea84861 <main.main+1409> 
    00007fdbdfdec890:  000055e4ce3139e6 <runtime.main+550>  000055e4ce33fc21 <runtime.goexit+1> 
    00007fdbdfdec8a0:  0000000000000000  0000000000000000 
    00007fdbdfdec8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007fdbdfdec8c0:  ffffffffffffffff  ffffffffffffffff 
    00007fdbdfdec8d0:  ffffffffffffffff  ffffffffffffffff 
    00007fdbdfdec8e0:  ffffffffffffffff  ffffffffffffffff 
    00007fdbdfdec8f0:  ffffffffffffffff  ffffffffffffffff 
    00007fdbdfdec900:  ffffffffffffffff  ffffffffffffffff 
    00007fdbdfdec910:  ffffffffffffffff  ffffffffffffffff 
    00007fdbdfdec920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7fdbf9a4cf47
    stack: frame={sp:0x7fdbdfdec830, fp:0x0} stack=[0x7fdbdf5ed288,0x7fdbdfdece88)
    00007fdbdfdec730:  00007fdbdfdecaf0  00007fdbfa03575a 
    00007fdbdfdec740:  000000000000000b  0000000000000000 
    00007fdbdfdec750:  00007fdbdf5ec700  000055e4cf76e148 
    00007fdbdfdec760:  00007fdbdfdecc40  000055e4d08fefc0 
    00007fdbdfdec770:  0000000000000000  000055e4cec4ad10 
    00007fdbdfdec780:  0000000000000000  00007fdbfa02df13 
    00007fdbdfdec790:  0000000000000005  0000000000000000 
    00007fdbdfdec7a0:  2525252525252525  2525252525252525 
    00007fdbdfdec7b0:  00000000000000ff  0000000000000000 
    00007fdbdfdec7c0:  00000000000000ff  0000000000000000 
    00007fdbdfdec7d0:  000000000000ff00  0000000000000000 
    00007fdbdfdec7e0:  000055e4ce53149a <net.unixSocket+314>  000055e4cf249300 
    00007fdbdfdec7f0:  0000000000000000  0000000000000000 
    00007fdbdfdec800:  0000000000000000  0000000000000000 
    00007fdbdfdec810:  0000000000000000  0000000000000000 
    00007fdbdfdec820:  20636f6c6c616d00  203a64656c696166 
    00007fdbdfdec830: <0000000000000000  0000000000000000 
    00007fdbdfdec840:  000000c00034c280  000000c0003da000 
    00007fdbdfdec850:  0000000000000000  0000000000000000 
    00007fdbdfdec860:  0000000000000000  0000000000000000 
    00007fdbdfdec870:  000055e4ce8d2698 <github.com/snapcore/snapd/interfaces.SystemKeyMismatch+40>  000055e4cea51f08 <main.maybeWaitForSecurityProfileRegeneration+40> 
    00007fdbdfdec880:  000055e4cea52322 <main.(*cmdRun).Execute+370>  000055e4cea84861 <main.main+1409> 
    00007fdbdfdec890:  000055e4ce3139e6 <runtime.main+550>  000055e4ce33fc21 <runtime.goexit+1> 
    00007fdbdfdec8a0:  0000000000000000  0000000000000000 
    00007fdbdfdec8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007fdbdfdec8c0:  ffffffffffffffff  ffffffffffffffff 
    00007fdbdfdec8d0:  ffffffffffffffff  ffffffffffffffff 
    00007fdbdfdec8e0:  ffffffffffffffff  ffffffffffffffff 
    00007fdbdfdec8f0:  ffffffffffffffff  ffffffffffffffff 
    00007fdbdfdec900:  ffffffffffffffff  ffffffffffffffff 
    00007fdbdfdec910:  ffffffffffffffff  ffffffffffffffff 
    00007fdbdfdec920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [runnable]:
    github.com/snapcore/snapd/client.(*Client).do(0xc00011ea80, 0x55e4cea9eee7, 0x3, 0x55e4ceaa8d78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x55e4cf0f8f40, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:394 +0x2f9
    github.com/snapcore/snapd/client.(*Client).doSyncWithOpts(0xc00011ea80, 0x55e4cea9eee7, 0x3, 0x55e4ceaa8d78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x55e4cf0949a0, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:492 +0xf6
    github.com/snapcore/snapd/client.(*Client).SysInfo(0xc00011ea80, 0x46, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/client/client.go:727 +0xd4
    main.maybeWaitForSecurityProfileRegeneration(0xc00011ea80, 0xc00034c280, 0xd)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:200 +0x1aa
    main.(*cmdRun).Execute(0xc000251eb8, 0xc0000a8160, 0x2, 0x3, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:240 +0x172
    main.main()
    	/build/snapd/parts/snapd-deb/build/cmd/snap/main.go:482 +0x581
    
    goroutine 19 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    rax    0x0
    rbx    0x7fdbf9dfa840
    rcx    0x7fdbf9a4cf47
    rdx    0x0
    rdi    0x2
    rsi    0x7fdbdfdec830
    rbp    0x55e4cec64e7c
    rsp    0x7fdbdfdec830
    r8     0x0
    r9     0x7fdbdfdec830
    r10    0x8
    r11    0x246
    r12    0x55e4d08fefc0
    r13    0x0
    r14    0x55e4cec4ad10
    r15    0x0
    rip    0x7fdbf9a4cf47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
