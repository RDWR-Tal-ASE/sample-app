apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7fe4e9a66f47 m=7 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7fe4e9a66f47
    stack: frame={sp:0x7fe4e56b1830, fp:0x0} stack=[0x7fe4e4eb2288,0x7fe4e56b1e88)
    00007fe4e56b1730:  00007fe4e56b1af0  00007fe4ea04f75a 
    00007fe4e56b1740:  000000000000000b  0000000000000000 
    00007fe4e56b1750:  00007fe4df7fe700  00005555c55d6148 
    00007fe4e56b1760:  00007fe4e56b1c40  00005555c64a93f0 
    00007fe4e56b1770:  0000000000000000  00005555c4ab2d10 
    00007fe4e56b1780:  0000000000000000  00007fe4ea047f13 
    00007fe4e56b1790:  0000000000000005  0000000000000000 
    00007fe4e56b17a0:  2525252525252525  2525252525252525 
    00007fe4e56b17b0:  00000000000000ff  0000000000000000 
    00007fe4e56b17c0:  00000000000000ff  0000000000000000 
    00007fe4e56b17d0:  0000000000000001  0000000000000012 
    00007fe4e56b17e0:  000000000000000e  000000000000000e 
    00007fe4e56b17f0:  0000000000000000  0000000000000000 
    00007fe4e56b1800:  ffffffffffffffff  ffffffffffffffff 
    00007fe4e56b1810:  0000000400000004  0000000400000004 
    00007fe4e56b1820:  20636f6c6c616d00  203a64656c696166 
    00007fe4e56b1830: <0000000000000000  0000000000000000 
    00007fe4e56b1840:  0000000000000000  0000000000000000 
    00007fe4e56b1850:  0000000000000000  0000000000000000 
    00007fe4e56b1860:  0000000000000000  0000000000000000 
    00007fe4e56b1870:  0000000000000000  0000000000000000 
    00007fe4e56b1880:  0000000000000000  0000000000000000 
    00007fe4e56b1890:  0000000000000000  0000000000000000 
    00007fe4e56b18a0:  0000000000000000  0000000000000000 
    00007fe4e56b18b0:  fffffffe7fffffff  ffffffffffffffff 
    00007fe4e56b18c0:  ffffffffffffffff  ffffffffffffffff 
    00007fe4e56b18d0:  ffffffffffffffff  ffffffffffffffff 
    00007fe4e56b18e0:  ffffffffffffffff  ffffffffffffffff 
    00007fe4e56b18f0:  ffffffffffffffff  ffffffffffffffff 
    00007fe4e56b1900:  ffffffffffffffff  ffffffffffffffff 
    00007fe4e56b1910:  ffffffffffffffff  ffffffffffffffff 
    00007fe4e56b1920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7fe4e9a66f47
    stack: frame={sp:0x7fe4e56b1830, fp:0x0} stack=[0x7fe4e4eb2288,0x7fe4e56b1e88)
    00007fe4e56b1730:  00007fe4e56b1af0  00007fe4ea04f75a 
    00007fe4e56b1740:  000000000000000b  0000000000000000 
    00007fe4e56b1750:  00007fe4df7fe700  00005555c55d6148 
    00007fe4e56b1760:  00007fe4e56b1c40  00005555c64a93f0 
    00007fe4e56b1770:  0000000000000000  00005555c4ab2d10 
    00007fe4e56b1780:  0000000000000000  00007fe4ea047f13 
    00007fe4e56b1790:  0000000000000005  0000000000000000 
    00007fe4e56b17a0:  2525252525252525  2525252525252525 
    00007fe4e56b17b0:  00000000000000ff  0000000000000000 
    00007fe4e56b17c0:  00000000000000ff  0000000000000000 
    00007fe4e56b17d0:  0000000000000001  0000000000000012 
    00007fe4e56b17e0:  000000000000000e  000000000000000e 
    00007fe4e56b17f0:  0000000000000000  0000000000000000 
    00007fe4e56b1800:  ffffffffffffffff  ffffffffffffffff 
    00007fe4e56b1810:  0000000400000004  0000000400000004 
    00007fe4e56b1820:  20636f6c6c616d00  203a64656c696166 
    00007fe4e56b1830: <0000000000000000  0000000000000000 
    00007fe4e56b1840:  0000000000000000  0000000000000000 
    00007fe4e56b1850:  0000000000000000  0000000000000000 
    00007fe4e56b1860:  0000000000000000  0000000000000000 
    00007fe4e56b1870:  0000000000000000  0000000000000000 
    00007fe4e56b1880:  0000000000000000  0000000000000000 
    00007fe4e56b1890:  0000000000000000  0000000000000000 
    00007fe4e56b18a0:  0000000000000000  0000000000000000 
    00007fe4e56b18b0:  fffffffe7fffffff  ffffffffffffffff 
    00007fe4e56b18c0:  ffffffffffffffff  ffffffffffffffff 
    00007fe4e56b18d0:  ffffffffffffffff  ffffffffffffffff 
    00007fe4e56b18e0:  ffffffffffffffff  ffffffffffffffff 
    00007fe4e56b18f0:  ffffffffffffffff  ffffffffffffffff 
    00007fe4e56b1900:  ffffffffffffffff  ffffffffffffffff 
    00007fe4e56b1910:  ffffffffffffffff  ffffffffffffffff 
    00007fe4e56b1920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [select]:
    github.com/snapcore/snapd/client.(*Client).do(0xc00036c1c0, 0x5555c4906ee7, 0x3, 0x5555c4910d78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x5555c4f60f40, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:394 +0x2f9
    github.com/snapcore/snapd/client.(*Client).doSyncWithOpts(0xc00036c1c0, 0x5555c4906ee7, 0x3, 0x5555c4910d78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x5555c4efc9a0, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:492 +0xf6
    github.com/snapcore/snapd/client.(*Client).SysInfo(0xc00036c1c0, 0x46, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/client/client.go:727 +0xd4
    main.maybeWaitForSecurityProfileRegeneration(0xc00036c1c0, 0xc00039b7c0, 0xd)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:200 +0x1aa
    main.(*cmdRun).Execute(0xc000251eb8, 0xc0000a8160, 0x2, 0x3, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:240 +0x172
    main.main()
    	/build/snapd/parts/snapd-deb/build/cmd/snap/main.go:482 +0x581
    
    goroutine 19 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    rax    0x0
    rbx    0x7fe4e9e14840
    rcx    0x7fe4e9a66f47
    rdx    0x0
    rdi    0x2
    rsi    0x7fe4e56b1830
    rbp    0x5555c4acce7c
    rsp    0x7fe4e56b1830
    r8     0x0
    r9     0x7fe4e56b1830
    r10    0x8
    r11    0x246
    r12    0x5555c64a93f0
    r13    0x0
    r14    0x5555c4ab2d10
    r15    0x0
    rip    0x7fe4e9a66f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 7 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000101400)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000101400)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x0, 0xc000046000, 0x6)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0xc000046000, 0x2a6cc00)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.handoffp(0xc000046000)
    	/usr/local/go/src/runtime/proc.go:2001 +0x52
    runtime.stoplockedm()
    	/usr/local/go/src/runtime/proc.go:2075 +0xf7
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2611 +0x48c
    runtime.goschedImpl(0xc000000180)
    	/usr/local/go/src/runtime/proc.go:2860 +0xda
    runtime.gopreempt_m(0xc000000180)
    	/usr/local/go/src/runtime/proc.go:2888 +0x34
    runtime.newstack()
    	/usr/local/go/src/runtime/stack.go:1047 +0x1bc
    runtime.morestack()
    	/usr/local/go/src/runtime/asm_amd64.s:449 +0x8f
    
    goroutine 1 [runnable, locked to thread]:
    encoding/json.Unmarshal(0xc000448ec4, 0x38, 0xcf3c, 0x1815520, 0xc000618240, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:96 +0x18e
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000609200, 0xc000448ec4, 0x38, 0xcf3c, 0x7fc27c571b80, 0xc000609200)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0005433f0, 0x19ce1a0, 0xc000609200, 0x199, 0xc000543418, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0005433f0, 0x19ce1a0, 0xc000609200, 0x199, 0xc000618000, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0005433f0, 0x18bc100, 0xc000609160, 0x195, 0xc000543418, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0005433f0, 0x18bc100, 0xc000609160, 0x195, 0x18bc100, 0xc000609160)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0005433f0, 0x1815520, 0xc000608fc0, 0x16, 0xc000543418, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0005433f0, 0x1815520, 0xc000608fc0, 0x16, 0xc0004be8d0, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0005433f0, 0x1815520, 0xc000608fc0, 0xc000543418, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0004488d6, 0x6e6, 0xd52a, 0x1815520, 0xc000608fc0, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00047fb00, 0xc0004488d6, 0x6e6, 0xd52a, 0x7fc27c571b80, 0xc00047fb00)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc000368c60, 0x19ce1a0, 0xc00047fb00, 0x199, 0xc000368c88, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc000368c60, 0x19ce1a0, 0xc00047fb00, 0x199, 0xc000608d80, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000368c60, 0x18e59a0, 0xc000394408, 0x195, 0xc000368c88, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000368c60, 0x18e59a0, 0xc000394408, 0x195, 0x18e59a0, 0xc000394408)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000368c60, 0x1815520, 0xc000394240, 0x16, 0xc000368c88, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000368c60, 0x1815520, 0xc000394240, 0x16, 0xc0004bf590, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc000368c60, 0x1815520, 0xc000394240, 0xc000368c88, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000446000, 0x9d38, 0xfe00, 0x1815520, 0xc000394240, 0x7fc27c613e38, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000394000, 0xc000446000, 0x9d38, 0xfe00, 0x7fc27c571b80, 0xc000394000)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc000368bb0, 0x1a89300, 0xc000394000, 0x16, 0xc000368bd8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc000368bb0, 0x1a89300, 0xc000394000, 0x16, 0xc0004bfc60, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc000368bb0, 0x1a89300, 0xc000394000, 0xc000368bd8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000446000, 0x9d39, 0xfe00, 0x1a89300, 0xc000394000, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc0002b38c0, 0x0, 0x0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.4()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:38 +0x57
    
    goroutine 18 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7fa04cf08f47 m=4 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7fa04cf08f47
    stack: frame={sp:0x7fa049cb5830, fp:0x0} stack=[0x7fa0494b6288,0x7fa049cb5e88)
    00007fa049cb5730:  00007fa049cb5af0  00007fa04d4f175a 
    00007fa049cb5740:  000000000000000b  0000000000000000 
    00007fa049cb5750:  00007fa03b7fe700  000055b093582148 
    00007fa049cb5760:  00007fa049cb5c40  000055b0954c8540 
    00007fa049cb5770:  0000000000000000  000055b092a5ed10 
    00007fa049cb5780:  0000000000000000  00007fa04d4e9f13 
    00007fa049cb5790:  0000000000000005  0000000000000000 
    00007fa049cb57a0:  2525252525252525  2525252525252525 
    00007fa049cb57b0:  00000000000000ff  0000000000000000 
    00007fa049cb57c0:  00000000000000ff  0000000000000000 
    00007fa049cb57d0:  0000000000000000  000000ffff000000 
    00007fa049cb57e0:  000000000000000e  000000000000000e 
    00007fa049cb57f0:  0000000000000000  0000000000000000 
    00007fa049cb5800:  ffffffffffffffff  ffffffffffffffff 
    00007fa049cb5810:  0000000400000004  0000000400000004 
    00007fa049cb5820:  20636f6c6c616d00  203a64656c696166 
    00007fa049cb5830: <0000000000000000  0000000000000000 
    00007fa049cb5840:  0000000000000000  0000000000000000 
    00007fa049cb5850:  0000000000000000  0000000000000000 
    00007fa049cb5860:  0000000000000000  0000000000000000 
    00007fa049cb5870:  0000000000000000  0000000000000000 
    00007fa049cb5880:  0000000000000000  0000000000000000 
    00007fa049cb5890:  0000000000000000  0000000000000000 
    00007fa049cb58a0:  0000000000000000  0000000000000000 
    00007fa049cb58b0:  fffffffe7fffffff  ffffffffffffffff 
    00007fa049cb58c0:  ffffffffffffffff  ffffffffffffffff 
    00007fa049cb58d0:  ffffffffffffffff  ffffffffffffffff 
    00007fa049cb58e0:  ffffffffffffffff  ffffffffffffffff 
    00007fa049cb58f0:  ffffffffffffffff  ffffffffffffffff 
    00007fa049cb5900:  ffffffffffffffff  ffffffffffffffff 
    00007fa049cb5910:  ffffffffffffffff  ffffffffffffffff 
    00007fa049cb5920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7fa04cf08f47
    stack: frame={sp:0x7fa049cb5830, fp:0x0} stack=[0x7fa0494b6288,0x7fa049cb5e88)
    00007fa049cb5730:  00007fa049cb5af0  00007fa04d4f175a 
    00007fa049cb5740:  000000000000000b  0000000000000000 
    00007fa049cb5750:  00007fa03b7fe700  000055b093582148 
    00007fa049cb5760:  00007fa049cb5c40  000055b0954c8540 
    00007fa049cb5770:  0000000000000000  000055b092a5ed10 
    00007fa049cb5780:  0000000000000000  00007fa04d4e9f13 
    00007fa049cb5790:  0000000000000005  0000000000000000 
    00007fa049cb57a0:  2525252525252525  2525252525252525 
    00007fa049cb57b0:  00000000000000ff  0000000000000000 
    00007fa049cb57c0:  00000000000000ff  0000000000000000 
    00007fa049cb57d0:  0000000000000000  000000ffff000000 
    00007fa049cb57e0:  000000000000000e  000000000000000e 
    00007fa049cb57f0:  0000000000000000  0000000000000000 
    00007fa049cb5800:  ffffffffffffffff  ffffffffffffffff 
    00007fa049cb5810:  0000000400000004  0000000400000004 
    00007fa049cb5820:  20636f6c6c616d00  203a64656c696166 
    00007fa049cb5830: <0000000000000000  0000000000000000 
    00007fa049cb5840:  0000000000000000  0000000000000000 
    00007fa049cb5850:  0000000000000000  0000000000000000 
    00007fa049cb5860:  0000000000000000  0000000000000000 
    00007fa049cb5870:  0000000000000000  0000000000000000 
    00007fa049cb5880:  0000000000000000  0000000000000000 
    00007fa049cb5890:  0000000000000000  0000000000000000 
    00007fa049cb58a0:  0000000000000000  0000000000000000 
    00007fa049cb58b0:  fffffffe7fffffff  ffffffffffffffff 
    00007fa049cb58c0:  ffffffffffffffff  ffffffffffffffff 
    00007fa049cb58d0:  ffffffffffffffff  ffffffffffffffff 
    00007fa049cb58e0:  ffffffffffffffff  ffffffffffffffff 
    00007fa049cb58f0:  ffffffffffffffff  ffffffffffffffff 
    00007fa049cb5900:  ffffffffffffffff  ffffffffffffffff 
    00007fa049cb5910:  ffffffffffffffff  ffffffffffffffff 
    00007fa049cb5920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).operand(0xc000132500, 0x17, 0x51)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:632 +0xc54
    text/template/parse.(*Tree).command(0xc000132500, 0x17)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:599 +0xdb
    text/template/parse.(*Tree).pipeline(0xc000132500, 0x55b0928b5760, 0x7, 0x55b09290e491)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:433 +0x5e8
    text/template/parse.(*Tree).action(0xc000132500, 0xa, 0x4f)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:377 +0x16e
    text/template/parse.(*Tree).textOrAction(0xc000132500, 0xa, 0x4f)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:345 +0x295
    text/template/parse.(*Tree).itemList(0xc000132500, 0x55b0928b39eb, 0x4, 0xc00027a000)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:327 +0xfb
    text/template/parse.(*Tree).parseControl(0xc000132500, 0x55b0935dd000, 0x55b0928b39eb, 0x4, 0x0, 0x0, 0xc00027a000, 0x0, 0x0)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:459 +0x102
    text/template/parse.(*Tree).withControl(0xc000132500, 0x1f, 0x34)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:509 +0x4e
    text/template/parse.(*Tree).action(0xc000132500, 0xa, 0x30)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:372 +0x55f
    text/template/parse.(*Tree).textOrAction(0xc000132500, 0x1f, 0x34)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:345 +0x295
    text/template/parse.(*Tree).parse(0xc000132500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:291 +0x383
    text/template/parse.(*Tree).Parse(0xc000132500, 0x55b09290e440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001dc6f0, 0xc000158340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x55b0928b39b7, 0x4, 0x55b09290e440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000158340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc00009d7c0, 0x55b09290e440, 0x16c, 0x4, 0xc00011f5e8, 0x55b09359d760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 19 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 20 [runnable]:
    text/template/parse.(*lexer).emit(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:157
    text/template/parse.lexFieldOrVariable(0xc000160630, 0x8, 0x3)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:499 +0x3be
    text/template/parse.lexField(0xc000160630, 0x55b09302d870)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:479 +0x36
    text/template/parse.(*lexer).run(0xc000160630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:230 +0x39
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7fa04d2b6840
    rcx    0x7fa04cf08f47
    rdx    0x0
    rdi    0x2
    rsi    0x7fa049cb5830
    rbp    0x55b092a78e7c
    rsp    0x7fa049cb5830
    r8     0x0
    r9     0x7fa049cb5830
    r10    0x8
    r11    0x246
    r12    0x55b0954c8540
    r13    0x0
    r14    0x55b092a5ed10
    r15    0x0
    rip    0x7fa04cf08f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
