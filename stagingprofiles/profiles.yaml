apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    Error: bad file '-': yaml: line 11: mapping values are not allowed in this context
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 10 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc00074c400)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc00074c400)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc000057800, 0x9)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc00058df01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.mstart1()
    	/usr/local/go/src/runtime/proc.go:1179 +0x93
    runtime.mstart()
    	/usr/local/go/src/runtime/proc.go:1137 +0x6e
    
    goroutine 1 [runnable, locked to thread]:
    regexp.mergeRuneSets.func2(...)
    	/usr/local/go/src/regexp/onepass.go:181
    regexp.mergeRuneSets(0xc0000f9198, 0xc0000f8130, 0x5200000101, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
    	/usr/local/go/src/regexp/onepass.go:193 +0x5b2
    regexp.makeOnePass.func1(0xb1, 0xc000028480, 0x103, 0x103, 0xc000208901)
    	/usr/local/go/src/regexp/onepass.go:342 +0x48d
    regexp.makeOnePass(0xc000208ab0, 0xc000208ab0)
    	/usr/local/go/src/regexp/onepass.go:448 +0x362
    regexp.compileOnePass(0xc000208a50, 0xc000208a50)
    	/usr/local/go/src/regexp/onepass.go:500 +0x145
    regexp.compile(0xc00070b4a0, 0x13, 0xc0000000d4, 0xc00070b4b2, 0xc00085fe28, 0xc00085fdf0)
    	/usr/local/go/src/regexp/regexp.go:189 +0x10b
    regexp.Compile(...)
    	/usr/local/go/src/regexp/regexp.go:133
    regexp.MustCompile(0xc00070b4a0, 0x13, 0x1)
    	/usr/local/go/src/regexp/regexp.go:309 +0x4b
    k8s.io/kubernetes/vendor/github.com/docker/distribution/reference.anchored(0xc000700a00, 0x1, 0x1, 0xc0001874a0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/docker/distribution/reference/regexp.go:142 +0xbb
    k8s.io/kubernetes/vendor/github.com/docker/distribution/reference.init()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/docker/distribution/reference/regexp.go:41 +0x665
    
    goroutine 6 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
