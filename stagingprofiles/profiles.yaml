apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    Error: bad file '-': yaml: line 11: mapping values are not allowed in this context
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000108000)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000108000)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc000046000, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc000099f01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc0002ffe00)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [syscall, locked to thread]:
    k8s.io/kubernetes/vendor/github.com/go-openapi/swag.(*NameProvider).GetJSONNames(0xc000374770, 0x1a89300, 0xc0004b6fc0, 0x0, 0x0, 0x0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/swag/json.go:265 +0x1da
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0004b6fc0, 0xc0003f06b6, 0x39, 0xb74a, 0x7fb09889d680, 0xc0004b6fc0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:574 +0x267
    encoding/json.(*decodeState).object(0xc0004b42c0, 0x19ce1a0, 0xc0004b6fc0, 0x199, 0xc0004b42e8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0004b42c0, 0x19ce1a0, 0xc0004b6fc0, 0x199, 0xc0004cb200, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004b42c0, 0x18bc100, 0xc0004b6860, 0x195, 0xc0004b42e8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004b42c0, 0x18bc100, 0xc0004b6860, 0x195, 0x18bc100, 0xc0004b6860)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004b42c0, 0x1815520, 0xc0004b66c0, 0x16, 0xc0004b42e8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004b42c0, 0x1815520, 0xc0004b66c0, 0x16, 0xc000452888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0004b42c0, 0x1815520, 0xc0004b66c0, 0xc0004b42e8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003efdc7, 0x9ca, 0xc039, 0x1815520, 0xc0004b66c0, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000420fc0, 0xc0003efdc7, 0x9ca, 0xc039, 0x7fb09889d680, 0xc000420fc0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e69a0, 0x19ce1a0, 0xc000420fc0, 0x199, 0xc0000e69c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e69a0, 0x19ce1a0, 0xc000420fc0, 0x199, 0xc0004b6480, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e69a0, 0x18e59a0, 0xc0003b4f48, 0x195, 0xc0000e69c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e69a0, 0x18e59a0, 0xc0003b4f48, 0x195, 0x18e59a0, 0xc0003b4f48)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e69a0, 0x1815520, 0xc0003b4d80, 0x16, 0xc0000e69c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e69a0, 0x1815520, 0xc0003b4d80, 0x16, 0xc0001a3548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e69a0, 0x1815520, 0xc0003b4d80, 0xc0000e69c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003ec000, 0x9d38, 0xfe00, 0x1815520, 0xc0003b4d80, 0x7fb098893628, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0003b4b40, 0xc0003ec000, 0x9d38, 0xfe00, 0x7fb09889d680, 0xc0003b4b40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e68f0, 0x1a89300, 0xc0003b4b40, 0x16, 0xc0000e6918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e68f0, 0x1a89300, 0xc0003b4b40, 0x16, 0xc0001a3c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e68f0, 0x1a89300, 0xc0003b4b40, 0xc0000e6918, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003ec000, 0x9d39, 0xfe00, 0x1a89300, 0xc0003b4b40, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc0003a1b30, 0xc0001a3d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc0003a1a70, 0xc0003a1a40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 20 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: 
    -----
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f5403032f47 m=0 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f5403032f47
    stack: frame={sp:0x7ffce3d56220, fp:0x0} stack=[0x7ffce35577b0,0x7ffce3d567f0)
    00007ffce3d56120:  00007ffce3d565d0  00007f54033e7c58 
    00007ffce3d56130:  00007ffce3d564e0  00007f540361b75a 
    00007ffce3d56140:  000000000000000b  0000000000000000 
    00007ffce3d56150:  00007f5400de2700  00000000008661c8 
    00007ffce3d56160:  00007ffce3d56630  0000000000fcb2a0 
    00007ffce3d56170:  0000000000000000  0000000000593e90 
    00007ffce3d56180:  0000000000000000  00007f5403613f13 
    00007ffce3d56190:  0000000000000001  0000000000000000 
    00007ffce3d561a0:  2525252525252525  2525252525252525 
    00007ffce3d561b0:  00000000ff00ff00  0000000000000000 
    00007ffce3d561c0:  00000000ff000000  0000000000000000 
    00007ffce3d561d0:  414fffffe0000000  0000000000000000 
    00007ffce3d561e0:  2f7273752f3a6e69  73752f3a6e696273 
    00007ffce3d561f0:  752f3a6e69622f72  6c61636f6c2f7273 
    00007ffce3d56200:  73752f3a6e69622f  732f6e6962732f72 
    00007ffce3d56210:  2f3a656369767265  6e69622f70616e73 
    00007ffce3d56220: <0000000000000000  656c69616620636f 
    00007ffce3d56230:  0000000000000000  0000000000000000 
    00007ffce3d56240:  0000000000000000  0000000000000000 
    00007ffce3d56250:  0000000000000000  0000000000000000 
    00007ffce3d56260:  0000000000000000  0000000000000000 
    00007ffce3d56270:  0000000000000000  0000000000000000 
    00007ffce3d56280:  0000000000000000  0000000000000000 
    00007ffce3d56290:  0000000000000000  0000000000000000 
    00007ffce3d562a0:  fffffffe7fffffff  ffffffffffffffff 
    00007ffce3d562b0:  ffffffffffffffff  ffffffffffffffff 
    00007ffce3d562c0:  ffffffffffffffff  ffffffffffffffff 
    00007ffce3d562d0:  ffffffffffffffff  ffffffffffffffff 
    00007ffce3d562e0:  ffffffffffffffff  ffffffffffffffff 
    00007ffce3d562f0:  ffffffffffffffff  ffffffffffffffff 
    00007ffce3d56300:  ffffffffffffffff  ffffffffffffffff 
    00007ffce3d56310:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f5403032f47
    stack: frame={sp:0x7ffce3d56220, fp:0x0} stack=[0x7ffce35577b0,0x7ffce3d567f0)
    00007ffce3d56120:  00007ffce3d565d0  00007f54033e7c58 
    00007ffce3d56130:  00007ffce3d564e0  00007f540361b75a 
    00007ffce3d56140:  000000000000000b  0000000000000000 
    00007ffce3d56150:  00007f5400de2700  00000000008661c8 
    00007ffce3d56160:  00007ffce3d56630  0000000000fcb2a0 
    00007ffce3d56170:  0000000000000000  0000000000593e90 
    00007ffce3d56180:  0000000000000000  00007f5403613f13 
    00007ffce3d56190:  0000000000000001  0000000000000000 
    00007ffce3d561a0:  2525252525252525  2525252525252525 
    00007ffce3d561b0:  00000000ff00ff00  0000000000000000 
    00007ffce3d561c0:  00000000ff000000  0000000000000000 
    00007ffce3d561d0:  414fffffe0000000  0000000000000000 
    00007ffce3d561e0:  2f7273752f3a6e69  73752f3a6e696273 
    00007ffce3d561f0:  752f3a6e69622f72  6c61636f6c2f7273 
    00007ffce3d56200:  73752f3a6e69622f  732f6e6962732f72 
    00007ffce3d56210:  2f3a656369767265  6e69622f70616e73 
    00007ffce3d56220: <0000000000000000  656c69616620636f 
    00007ffce3d56230:  0000000000000000  0000000000000000 
    00007ffce3d56240:  0000000000000000  0000000000000000 
    00007ffce3d56250:  0000000000000000  0000000000000000 
    00007ffce3d56260:  0000000000000000  0000000000000000 
    00007ffce3d56270:  0000000000000000  0000000000000000 
    00007ffce3d56280:  0000000000000000  0000000000000000 
    00007ffce3d56290:  0000000000000000  0000000000000000 
    00007ffce3d562a0:  fffffffe7fffffff  ffffffffffffffff 
    00007ffce3d562b0:  ffffffffffffffff  ffffffffffffffff 
    00007ffce3d562c0:  ffffffffffffffff  ffffffffffffffff 
    00007ffce3d562d0:  ffffffffffffffff  ffffffffffffffff 
    00007ffce3d562e0:  ffffffffffffffff  ffffffffffffffff 
    00007ffce3d562f0:  ffffffffffffffff  ffffffffffffffff 
    00007ffce3d56300:  ffffffffffffffff  ffffffffffffffff 
    00007ffce3d56310:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [running]:
    runtime.systemstack_switch()
    	/usr/lib/go-1.13/src/runtime/asm_amd64.s:330 fp=0xc00003c760 sp=0xc00003c758 pc=0x456b50
    runtime.main()
    	/usr/lib/go-1.13/src/runtime/proc.go:133 +0x63 fp=0xc00003c7e0 sp=0xc00003c760 pc=0x4303d3
    runtime.goexit()
    	/usr/lib/go-1.13/src/runtime/asm_amd64.s:1357 +0x1 fp=0xc00003c7e8 sp=0xc00003c7e0 pc=0x458c21
    
    rax    0x0
    rbx    0x7f54033e0840
    rcx    0x7f5403032f47
    rdx    0x0
    rdi    0x2
    rsi    0x7ffce3d56220
    rbp    0x59f2ca
    rsp    0x7ffce3d56220
    r8     0x0
    r9     0x7ffce3d56220
    r10    0x8
    r11    0x246
    r12    0xfcb2a0
    r13    0x0
    r14    0x593e90
    r15    0x0
    rip    0x7f5403032f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    -----
    runtime: failed to create new OS thread (have 3 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x7b2d88, 0x9)
    	/usr/lib/go-1.13/src/runtime/panic.go:774 +0x72
    runtime.newosproc(0xc000044380)
    	/usr/lib/go-1.13/src/runtime/os_linux.go:153 +0x1ba
    runtime.newm1(0xc000044380)
    	/usr/lib/go-1.13/src/runtime/proc.go:1853 +0xdc
    runtime.newm(0x7c71f0, 0xc000022500)
    	/usr/lib/go-1.13/src/runtime/proc.go:1832 +0x8f
    runtime.startm(0x0, 0xc000000601)
    	/usr/lib/go-1.13/src/runtime/proc.go:1969 +0x12a
    runtime.wakep(...)
    	/usr/lib/go-1.13/src/runtime/proc.go:2050
    runtime.newproc1(0x7c70d8, 0xc000040720, 0x0, 0xc000000180, 0x42f485)
    	/usr/lib/go-1.13/src/runtime/proc.go:3363 +0x319
    runtime.newproc.func1()
    	/usr/lib/go-1.13/src/runtime/proc.go:3256 +0x4f
    runtime.systemstack(0x457724)
    	/usr/lib/go-1.13/src/runtime/asm_amd64.s:370 +0x66
    runtime.mstart()
    	/usr/lib/go-1.13/src/runtime/proc.go:1146
    
    goroutine 1 [running, locked to thread]:
    runtime.systemstack_switch()
    	/usr/lib/go-1.13/src/runtime/asm_amd64.s:330 fp=0xc0000406c8 sp=0xc0000406c0 pc=0x457820
    runtime.newproc(0x0, 0x7c70d8)
    	/usr/lib/go-1.13/src/runtime/proc.go:3255 +0x6e fp=0xc000040710 sp=0xc0000406c8 pc=0x436c1e
    runtime.init.5()
    	/usr/lib/go-1.13/src/runtime/proc.go:242 +0x35 fp=0xc000040730 sp=0xc000040710 pc=0x42f485
    runtime.doInit(0xa2e260)
    	/usr/lib/go-1.13/src/runtime/proc.go:5222 +0x8a fp=0xc000040760 sp=0xc000040730 pc=0x43b34a
    runtime.main()
    	/usr/lib/go-1.13/src/runtime/proc.go:150 +0xc3 fp=0xc0000407e0 sp=0xc000040760 pc=0x42f173
    runtime.goexit()
    	/usr/lib/go-1.13/src/runtime/asm_amd64.s:1357 +0x1 fp=0xc0000407e8 sp=0xc0000407e0 pc=0x459771
