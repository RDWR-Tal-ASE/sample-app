apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f42cfc92f47 m=4 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f42cfc92f47
    stack: frame={sp:0x7f42cca3f830, fp:0x0} stack=[0x7f42cc240288,0x7f42cca3fe88)
    00007f42cca3f730:  00007f42cca3faf0  00007f42d027b75a 
    00007f42cca3f740:  000000000000000b  0000000000000000 
    00007f42cca3f750:  00007f42be7bb700  0000557d8fa40148 
    00007f42cca3f760:  00007f42cca3fc40  0000557d8fe4b540 
    00007f42cca3f770:  0000000000000000  0000557d8ef1cd10 
    00007f42cca3f780:  0000000000000000  00007f42d0273f13 
    00007f42cca3f790:  0000000000000005  0000000000000000 
    00007f42cca3f7a0:  2525252525252525  2525252525252525 
    00007f42cca3f7b0:  00000000000000ff  0000000000000000 
    00007f42cca3f7c0:  00000000000000ff  0000000000000000 
    00007f42cca3f7d0:  0000000000000002  0000000000000013 
    00007f42cca3f7e0:  000000000000000e  000000000000000e 
    00007f42cca3f7f0:  0000000000000000  0000000000000000 
    00007f42cca3f800:  ffffffffffffffff  ffffffffffffffff 
    00007f42cca3f810:  0000000400000004  0000000400000004 
    00007f42cca3f820:  20636f6c6c616d00  203a64656c696166 
    00007f42cca3f830: <0000000000000000  0000000000000000 
    00007f42cca3f840:  0000000000000000  0000000000000000 
    00007f42cca3f850:  0000000000000000  0000000000000000 
    00007f42cca3f860:  0000000000000000  0000000000000000 
    00007f42cca3f870:  0000000000000000  0000000000000000 
    00007f42cca3f880:  0000000000000000  0000000000000000 
    00007f42cca3f890:  0000000000000000  0000000000000000 
    00007f42cca3f8a0:  0000000000000000  0000000000000000 
    00007f42cca3f8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f42cca3f8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f42cca3f8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f42cca3f8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f42cca3f8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f42cca3f900:  ffffffffffffffff  ffffffffffffffff 
    00007f42cca3f910:  ffffffffffffffff  ffffffffffffffff 
    00007f42cca3f920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f42cfc92f47
    stack: frame={sp:0x7f42cca3f830, fp:0x0} stack=[0x7f42cc240288,0x7f42cca3fe88)
    00007f42cca3f730:  00007f42cca3faf0  00007f42d027b75a 
    00007f42cca3f740:  000000000000000b  0000000000000000 
    00007f42cca3f750:  00007f42be7bb700  0000557d8fa40148 
    00007f42cca3f760:  00007f42cca3fc40  0000557d8fe4b540 
    00007f42cca3f770:  0000000000000000  0000557d8ef1cd10 
    00007f42cca3f780:  0000000000000000  00007f42d0273f13 
    00007f42cca3f790:  0000000000000005  0000000000000000 
    00007f42cca3f7a0:  2525252525252525  2525252525252525 
    00007f42cca3f7b0:  00000000000000ff  0000000000000000 
    00007f42cca3f7c0:  00000000000000ff  0000000000000000 
    00007f42cca3f7d0:  0000000000000002  0000000000000013 
    00007f42cca3f7e0:  000000000000000e  000000000000000e 
    00007f42cca3f7f0:  0000000000000000  0000000000000000 
    00007f42cca3f800:  ffffffffffffffff  ffffffffffffffff 
    00007f42cca3f810:  0000000400000004  0000000400000004 
    00007f42cca3f820:  20636f6c6c616d00  203a64656c696166 
    00007f42cca3f830: <0000000000000000  0000000000000000 
    00007f42cca3f840:  0000000000000000  0000000000000000 
    00007f42cca3f850:  0000000000000000  0000000000000000 
    00007f42cca3f860:  0000000000000000  0000000000000000 
    00007f42cca3f870:  0000000000000000  0000000000000000 
    00007f42cca3f880:  0000000000000000  0000000000000000 
    00007f42cca3f890:  0000000000000000  0000000000000000 
    00007f42cca3f8a0:  0000000000000000  0000000000000000 
    00007f42cca3f8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f42cca3f8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f42cca3f8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f42cca3f8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f42cca3f8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f42cca3f900:  ffffffffffffffff  ffffffffffffffff 
    00007f42cca3f910:  ffffffffffffffff  ffffffffffffffff 
    00007f42cca3f920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [runnable]:
    github.com/snapcore/snapd/client.(*Client).do(0xc0003701c0, 0x557d8ed70ee7, 0x3, 0x557d8ed7ad78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x557d8f3caf40, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:394 +0x2f9
    github.com/snapcore/snapd/client.(*Client).doSyncWithOpts(0xc0003701c0, 0x557d8ed70ee7, 0x3, 0x557d8ed7ad78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x557d8f3669a0, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:492 +0xf6
    github.com/snapcore/snapd/client.(*Client).SysInfo(0xc0003701c0, 0x46, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/client/client.go:727 +0xd4
    main.maybeWaitForSecurityProfileRegeneration(0xc0003701c0, 0xc0003ad7c0, 0xd)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:200 +0x1aa
    main.(*cmdRun).Execute(0xc00023feb8, 0xc000032190, 0x2, 0x3, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:240 +0x172
    main.main()
    	/build/snapd/parts/snapd-deb/build/cmd/snap/main.go:482 +0x581
    
    goroutine 6 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    rax    0x0
    rbx    0x7f42d0040840
    rcx    0x7f42cfc92f47
    rdx    0x0
    rdi    0x2
    rsi    0x7f42cca3f830
    rbp    0x557d8ef36e7c
    rsp    0x7f42cca3f830
    r8     0x0
    r9     0x7f42cca3f830
    r10    0x8
    r11    0x246
    r12    0x557d8fe4b540
    r13    0x0
    r14    0x557d8ef1cd10
    r15    0x0
    rip    0x7f42cfc92f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000480000)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000480000)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc000046000, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc000099f01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc00008a300)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [syscall, locked to thread]:
    reflect.MakeSlice(0x1d4e220, 0x181c100, 0x0, 0x4, 0x181c100, 0x0, 0x0)
    	/usr/local/go/src/reflect/value.go:2299 +0x85
    encoding/json.(*decodeState).array(0xc000445550, 0x181c100, 0xc000453548, 0x197, 0xc000445578, 0x5b)
    	/usr/local/go/src/encoding/json/decode.go:547 +0x716
    encoding/json.(*decodeState).value(0xc000445550, 0x181c100, 0xc000453548, 0x197, 0x181c100, 0xc000453548)
    	/usr/local/go/src/encoding/json/decode.go:360 +0x105
    encoding/json.(*decodeState).object(0xc000445550, 0x1815520, 0xc000453440, 0x16, 0xc000445578, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000445550, 0x1815520, 0xc000453440, 0x16, 0xc0003cdbc8, 0x6fa34b)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc000445550, 0x1815520, 0xc000453440, 0xc000445578, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc00036cbd6, 0xc9, 0xb22a, 0x1815520, 0xc000453440, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000450fc0, 0xc00036cbd6, 0xc9, 0xb22a, 0x7feaa62e6780, 0xc000450fc0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0004448f0, 0x19ce1a0, 0xc000450fc0, 0x199, 0xc000444918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0004448f0, 0x19ce1a0, 0xc000450fc0, 0x199, 0xc000453200, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004448f0, 0x18bc100, 0xc000450860, 0x195, 0xc000444918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004448f0, 0x18bc100, 0xc000450860, 0x195, 0x18bc100, 0xc000450860)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004448f0, 0x1815520, 0xc0004506c0, 0x16, 0xc000444918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004448f0, 0x1815520, 0xc0004506c0, 0x16, 0xc0003ce888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0004448f0, 0x1815520, 0xc0004506c0, 0xc000444918, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc00036c7b5, 0x9e1, 0xb64b, 0x1815520, 0xc0004506c0, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00039e900, 0xc00036c7b5, 0x9e1, 0xb64b, 0x7feaa62e6780, 0xc00039e900)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e49a0, 0x19ce1a0, 0xc00039e900, 0x199, 0xc0000e49c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e49a0, 0x19ce1a0, 0xc00039e900, 0x199, 0xc000450480, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e49a0, 0x18e59a0, 0xc000330888, 0x195, 0xc0000e49c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e49a0, 0x18e59a0, 0xc000330888, 0x195, 0x18e59a0, 0xc000330888)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e49a0, 0x1815520, 0xc0003306c0, 0x16, 0xc0000e49c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e49a0, 0x1815520, 0xc0003306c0, 0x16, 0xc000123548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e49a0, 0x1815520, 0xc0003306c0, 0xc0000e49c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000368000, 0x9d38, 0xfe00, 0x1815520, 0xc0003306c0, 0x7feaa64a45f0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000330480, 0xc000368000, 0x9d38, 0xfe00, 0x7feaa62e6780, 0xc000330480)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e48f0, 0x1a89300, 0xc000330480, 0x16, 0xc0000e4918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e48f0, 0x1a89300, 0xc000330480, 0x16, 0xc000123c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e48f0, 0x1a89300, 0xc000330480, 0xc0000e4918, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000368000, 0x9d39, 0xfe00, 0x1a89300, 0xc000330480, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc00031bb30, 0xc000123d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc00031ba70, 0xc00031ba40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 18 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f62683bef47 m=5 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f62683bef47
    stack: frame={sp:0x7f626496a830, fp:0x0} stack=[0x7f626416b288,0x7f626496ae88)
    00007f626496a730:  00007f626496aaf0  00007f62689a775a 
    00007f626496a740:  000000000000000b  0000000000000000 
    00007f626496a750:  00007f624f7fe700  000055c3dc949148 
    00007f626496a760:  00007f626496ac40  00007f6250000c50 
    00007f626496a770:  0000000000000000  000055c3dbe25d10 
    00007f626496a780:  0000000000000000  00007f626899ff13 
    00007f626496a790:  0000000000000005  0000000000000000 
    00007f626496a7a0:  2525252525252525  2525252525252525 
    00007f626496a7b0:  00000000000000ff  0000000000000000 
    00007f626496a7c0:  00000000000000ff  0000000000000000 
    00007f626496a7d0:  0000000000000005  0000000000000009 
    00007f626496a7e0:  000000000000000e  000000000000000e 
    00007f626496a7f0:  0000000000000000  0000000000000000 
    00007f626496a800:  ffffffffffffffff  ffffffffffffffff 
    00007f626496a810:  0000000400000004  0000000400000004 
    00007f626496a820:  20636f6c6c616d00  203a64656c696166 
    00007f626496a830: <0000000000000000  0000000000000000 
    00007f626496a840:  0000000000000000  0000000000000000 
    00007f626496a850:  0000000000000000  0000000000000000 
    00007f626496a860:  0000000000000000  0000000000000000 
    00007f626496a870:  0000000000000000  0000000000000000 
    00007f626496a880:  0000000000000000  0000000000000000 
    00007f626496a890:  0000000000000000  0000000000000000 
    00007f626496a8a0:  0000000000000000  0000000000000000 
    00007f626496a8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f626496a8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f626496a8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f626496a8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f626496a8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f626496a900:  ffffffffffffffff  ffffffffffffffff 
    00007f626496a910:  ffffffffffffffff  ffffffffffffffff 
    00007f626496a920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f62683bef47
    stack: frame={sp:0x7f626496a830, fp:0x0} stack=[0x7f626416b288,0x7f626496ae88)
    00007f626496a730:  00007f626496aaf0  00007f62689a775a 
    00007f626496a740:  000000000000000b  0000000000000000 
    00007f626496a750:  00007f624f7fe700  000055c3dc949148 
    00007f626496a760:  00007f626496ac40  00007f6250000c50 
    00007f626496a770:  0000000000000000  000055c3dbe25d10 
    00007f626496a780:  0000000000000000  00007f626899ff13 
    00007f626496a790:  0000000000000005  0000000000000000 
    00007f626496a7a0:  2525252525252525  2525252525252525 
    00007f626496a7b0:  00000000000000ff  0000000000000000 
    00007f626496a7c0:  00000000000000ff  0000000000000000 
    00007f626496a7d0:  0000000000000005  0000000000000009 
    00007f626496a7e0:  000000000000000e  000000000000000e 
    00007f626496a7f0:  0000000000000000  0000000000000000 
    00007f626496a800:  ffffffffffffffff  ffffffffffffffff 
    00007f626496a810:  0000000400000004  0000000400000004 
    00007f626496a820:  20636f6c6c616d00  203a64656c696166 
    00007f626496a830: <0000000000000000  0000000000000000 
    00007f626496a840:  0000000000000000  0000000000000000 
    00007f626496a850:  0000000000000000  0000000000000000 
    00007f626496a860:  0000000000000000  0000000000000000 
    00007f626496a870:  0000000000000000  0000000000000000 
    00007f626496a880:  0000000000000000  0000000000000000 
    00007f626496a890:  0000000000000000  0000000000000000 
    00007f626496a8a0:  0000000000000000  0000000000000000 
    00007f626496a8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f626496a8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f626496a8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f626496a8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f626496a8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f626496a900:  ffffffffffffffff  ffffffffffffffff 
    00007f626496a910:  ffffffffffffffff  ffffffffffffffff 
    00007f626496a920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).parse(0xc00011c500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:278 +0xa5b
    text/template/parse.(*Tree).Parse(0xc00011c500, 0x55c3dbcd5440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001c4720, 0xc000142350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x55c3dbc7a9b7, 0x4, 0x55c3dbcd5440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000142350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc00003d840, 0x55c3dbcd5440, 0x16c, 0x4, 0xc0001095e8, 0x55c3dc964760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 6 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 7 [runnable]:
    text/template/parse.(*lexer).emit(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:157
    text/template/parse.lexRightDelim(0xc00014a630, 0x55c3dc3f48a8)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:345 +0x17f
    text/template/parse.(*lexer).run(0xc00014a630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:230 +0x39
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7f626876c840
    rcx    0x7f62683bef47
    rdx    0x0
    rdi    0x2
    rsi    0x7f626496a830
    rbp    0x55c3dbe3fe7c
    rsp    0x7f626496a830
    r8     0x0
    r9     0x7f626496a830
    r10    0x8
    r11    0x246
    r12    0x7f6250000c50
    r13    0x0
    r14    0x55c3dbe25d10
    r15    0x0
    rip    0x7f62683bef47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
