apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f7e76d85f47 m=4 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f7e76d85f47
    stack: frame={sp:0x7f7e73b32830, fp:0x0} stack=[0x7f7e73333288,0x7f7e73b32e88)
    00007f7e73b32730:  00007f7e73b32af0  00007f7e7736e75a 
    00007f7e73b32740:  000000000000000b  0000000000000000 
    00007f7e73b32750:  00007f7e72330700  0000561180844148 
    00007f7e73b32760:  00007f7e73b32c40  0000561180cd3540 
    00007f7e73b32770:  0000000000000000  000056117fd20d10 
    00007f7e73b32780:  0000000000000000  00007f7e77366f13 
    00007f7e73b32790:  0000000000000005  0000000000000000 
    00007f7e73b327a0:  2525252525252525  2525252525252525 
    00007f7e73b327b0:  00000000000000ff  0000000000000000 
    00007f7e73b327c0:  00000000000000ff  0000000000000000 
    00007f7e73b327d0:  00007f7e5c000010  00007f7e5c000010 
    00007f7e73b327e0:  000000000000000e  000000000000000e 
    00007f7e73b327f0:  0000000000000000  0000000000000000 
    00007f7e73b32800:  ffffffffffffffff  ffffffffffffffff 
    00007f7e73b32810:  0000000400000004  0000000400000004 
    00007f7e73b32820:  20636f6c6c616d00  203a64656c696166 
    00007f7e73b32830: <0000000000000000  0000000000000000 
    00007f7e73b32840:  0000000000000000  0000000000000000 
    00007f7e73b32850:  0000000000000000  0000000000000000 
    00007f7e73b32860:  0000000000000000  0000000000000000 
    00007f7e73b32870:  0000000000000000  0000000000000000 
    00007f7e73b32880:  0000000000000000  0000000000000000 
    00007f7e73b32890:  0000000000000000  0000000000000000 
    00007f7e73b328a0:  0000000000000000  0000000000000000 
    00007f7e73b328b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f7e73b328c0:  ffffffffffffffff  ffffffffffffffff 
    00007f7e73b328d0:  ffffffffffffffff  ffffffffffffffff 
    00007f7e73b328e0:  ffffffffffffffff  ffffffffffffffff 
    00007f7e73b328f0:  ffffffffffffffff  ffffffffffffffff 
    00007f7e73b32900:  ffffffffffffffff  ffffffffffffffff 
    00007f7e73b32910:  ffffffffffffffff  ffffffffffffffff 
    00007f7e73b32920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f7e76d85f47
    stack: frame={sp:0x7f7e73b32830, fp:0x0} stack=[0x7f7e73333288,0x7f7e73b32e88)
    00007f7e73b32730:  00007f7e73b32af0  00007f7e7736e75a 
    00007f7e73b32740:  000000000000000b  0000000000000000 
    00007f7e73b32750:  00007f7e72330700  0000561180844148 
    00007f7e73b32760:  00007f7e73b32c40  0000561180cd3540 
    00007f7e73b32770:  0000000000000000  000056117fd20d10 
    00007f7e73b32780:  0000000000000000  00007f7e77366f13 
    00007f7e73b32790:  0000000000000005  0000000000000000 
    00007f7e73b327a0:  2525252525252525  2525252525252525 
    00007f7e73b327b0:  00000000000000ff  0000000000000000 
    00007f7e73b327c0:  00000000000000ff  0000000000000000 
    00007f7e73b327d0:  00007f7e5c000010  00007f7e5c000010 
    00007f7e73b327e0:  000000000000000e  000000000000000e 
    00007f7e73b327f0:  0000000000000000  0000000000000000 
    00007f7e73b32800:  ffffffffffffffff  ffffffffffffffff 
    00007f7e73b32810:  0000000400000004  0000000400000004 
    00007f7e73b32820:  20636f6c6c616d00  203a64656c696166 
    00007f7e73b32830: <0000000000000000  0000000000000000 
    00007f7e73b32840:  0000000000000000  0000000000000000 
    00007f7e73b32850:  0000000000000000  0000000000000000 
    00007f7e73b32860:  0000000000000000  0000000000000000 
    00007f7e73b32870:  0000000000000000  0000000000000000 
    00007f7e73b32880:  0000000000000000  0000000000000000 
    00007f7e73b32890:  0000000000000000  0000000000000000 
    00007f7e73b328a0:  0000000000000000  0000000000000000 
    00007f7e73b328b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f7e73b328c0:  ffffffffffffffff  ffffffffffffffff 
    00007f7e73b328d0:  ffffffffffffffff  ffffffffffffffff 
    00007f7e73b328e0:  ffffffffffffffff  ffffffffffffffff 
    00007f7e73b328f0:  ffffffffffffffff  ffffffffffffffff 
    00007f7e73b32900:  ffffffffffffffff  ffffffffffffffff 
    00007f7e73b32910:  ffffffffffffffff  ffffffffffffffff 
    00007f7e73b32920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).parse(0xc000132500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:277 +0xbc6
    text/template/parse.(*Tree).Parse(0xc000132500, 0x56117fbd0440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001dc6f0, 0xc000158340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x56117fb759b7, 0x4, 0x56117fbd0440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000158340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc00009d7c0, 0x56117fbd0440, 0x16c, 0x4, 0xc00011f708, 0x56118085f760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 19 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 20 [runnable]:
    text/template/parse.(*lexer).run(0xc000160630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:228
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7f7e77133840
    rcx    0x7f7e76d85f47
    rdx    0x0
    rdi    0x2
    rsi    0x7f7e73b32830
    rbp    0x56117fd3ae7c
    rsp    0x7f7e73b32830
    r8     0x0
    r9     0x7f7e73b32830
    r10    0x8
    r11    0x246
    r12    0x561180cd3540
    r13    0x0
    r14    0x56117fd20d10
    r15    0x0
    rip    0x7f7e76d85f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000062c00)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000062c00)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc00004b000, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc000099f01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc00008a300)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [syscall, locked to thread]:
    reflect.mapassign(0x18bc100, 0xc000423830, 0xc00043ae10, 0xc00044f8c0)
    	/usr/local/go/src/runtime/map.go:1319 +0x3f
    reflect.Value.SetMapIndex(0x18bc100, 0xc00044f160, 0x195, 0x1858200, 0xc00043ae10, 0x98, 0x19ce1a0, 0xc00044f8c0, 0x199)
    	/usr/local/go/src/reflect/value.go:1706 +0x27c
    encoding/json.(*decodeState).object(0xc000444a50, 0x18bc100, 0xc00044f160, 0x195, 0xc000444a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:807 +0x8da
    encoding/json.(*decodeState).value(0xc000444a50, 0x18bc100, 0xc00044f160, 0x195, 0x18bc100, 0xc00044f160)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000444a50, 0x1815520, 0xc00044efc0, 0x16, 0xc000444a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000444a50, 0x1815520, 0xc00044efc0, 0x16, 0xc0003ce888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc000444a50, 0x1815520, 0xc00044efc0, 0xc000444a78, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc00036c7b5, 0x9e1, 0xb64b, 0x1815520, 0xc00044efc0, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00039f200, 0xc00036c7b5, 0x9e1, 0xb64b, 0x7f0da00bf940, 0xc00039f200)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e4b00, 0x19ce1a0, 0xc00039f200, 0x199, 0xc0000e4b28, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e4b00, 0x19ce1a0, 0xc00039f200, 0x199, 0xc00044ed80, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e4b00, 0x18e59a0, 0xc000331188, 0x195, 0xc0000e4b28, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e4b00, 0x18e59a0, 0xc000331188, 0x195, 0x18e59a0, 0xc000331188)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e4b00, 0x1815520, 0xc000330fc0, 0x16, 0xc0000e4b28, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e4b00, 0x1815520, 0xc000330fc0, 0x16, 0xc000123548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e4b00, 0x1815520, 0xc000330fc0, 0xc0000e4b28, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000368000, 0x9d38, 0xfe00, 0x1815520, 0xc000330fc0, 0x2aa0130, 0x7f0da00bf7c0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000330d80, 0xc000368000, 0x9d38, 0xfe00, 0x7f0da00bf940, 0xc000330d80)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e4a50, 0x1a89300, 0xc000330d80, 0x16, 0xc0000e4a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e4a50, 0x1a89300, 0xc000330d80, 0x16, 0xc000123c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e4a50, 0x1a89300, 0xc000330d80, 0xc0000e4a78, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000368000, 0x9d39, 0xfe00, 0x1a89300, 0xc000330d80, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc00031db30, 0xc000123d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc00031da70, 0xc00031da40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 18 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f9db6df9f47 m=5 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f9db6df9f47
    stack: frame={sp:0x7f9db33a5830, fp:0x0} stack=[0x7f9db2ba6288,0x7f9db33a5e88)
    00007f9db33a5730:  00007f9db33a5af0  00007f9db73e275a 
    00007f9db33a5740:  000000000000000b  0000000000000000 
    00007f9db33a5750:  00007f9db23a4700  000055f5c3784148 
    00007f9db33a5760:  00007f9db33a5c40  000055f5c479a3f0 
    00007f9db33a5770:  0000000000000000  000055f5c2c60d10 
    00007f9db33a5780:  0000000000000000  00007f9db73daf13 
    00007f9db33a5790:  0000000000000005  0000000000000000 
    00007f9db33a57a0:  2525252525252525  2525252525252525 
    00007f9db33a57b0:  00000000000000ff  0000000000000000 
    00007f9db33a57c0:  00000000000000ff  0000000000000000 
    00007f9db33a57d0:  00007f9d9c000010  00007f9d9c000010 
    00007f9db33a57e0:  000000000000000e  000000000000000e 
    00007f9db33a57f0:  0000000000000000  0000000000000000 
    00007f9db33a5800:  ffffffffffffffff  ffffffffffffffff 
    00007f9db33a5810:  0000000400000004  0000000400000004 
    00007f9db33a5820:  20636f6c6c616d00  203a64656c696166 
    00007f9db33a5830: <0000000000000000  0000000000000000 
    00007f9db33a5840:  0000000000000000  0000000000000000 
    00007f9db33a5850:  0000000000000000  0000000000000000 
    00007f9db33a5860:  0000000000000000  0000000000000000 
    00007f9db33a5870:  0000000000000000  0000000000000000 
    00007f9db33a5880:  0000000000000000  0000000000000000 
    00007f9db33a5890:  0000000000000000  0000000000000000 
    00007f9db33a58a0:  0000000000000000  0000000000000000 
    00007f9db33a58b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f9db33a58c0:  ffffffffffffffff  ffffffffffffffff 
    00007f9db33a58d0:  ffffffffffffffff  ffffffffffffffff 
    00007f9db33a58e0:  ffffffffffffffff  ffffffffffffffff 
    00007f9db33a58f0:  ffffffffffffffff  ffffffffffffffff 
    00007f9db33a5900:  ffffffffffffffff  ffffffffffffffff 
    00007f9db33a5910:  ffffffffffffffff  ffffffffffffffff 
    00007f9db33a5920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f9db6df9f47
    stack: frame={sp:0x7f9db33a5830, fp:0x0} stack=[0x7f9db2ba6288,0x7f9db33a5e88)
    00007f9db33a5730:  00007f9db33a5af0  00007f9db73e275a 
    00007f9db33a5740:  000000000000000b  0000000000000000 
    00007f9db33a5750:  00007f9db23a4700  000055f5c3784148 
    00007f9db33a5760:  00007f9db33a5c40  000055f5c479a3f0 
    00007f9db33a5770:  0000000000000000  000055f5c2c60d10 
    00007f9db33a5780:  0000000000000000  00007f9db73daf13 
    00007f9db33a5790:  0000000000000005  0000000000000000 
    00007f9db33a57a0:  2525252525252525  2525252525252525 
    00007f9db33a57b0:  00000000000000ff  0000000000000000 
    00007f9db33a57c0:  00000000000000ff  0000000000000000 
    00007f9db33a57d0:  00007f9d9c000010  00007f9d9c000010 
    00007f9db33a57e0:  000000000000000e  000000000000000e 
    00007f9db33a57f0:  0000000000000000  0000000000000000 
    00007f9db33a5800:  ffffffffffffffff  ffffffffffffffff 
    00007f9db33a5810:  0000000400000004  0000000400000004 
    00007f9db33a5820:  20636f6c6c616d00  203a64656c696166 
    00007f9db33a5830: <0000000000000000  0000000000000000 
    00007f9db33a5840:  0000000000000000  0000000000000000 
    00007f9db33a5850:  0000000000000000  0000000000000000 
    00007f9db33a5860:  0000000000000000  0000000000000000 
    00007f9db33a5870:  0000000000000000  0000000000000000 
    00007f9db33a5880:  0000000000000000  0000000000000000 
    00007f9db33a5890:  0000000000000000  0000000000000000 
    00007f9db33a58a0:  0000000000000000  0000000000000000 
    00007f9db33a58b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f9db33a58c0:  ffffffffffffffff  ffffffffffffffff 
    00007f9db33a58d0:  ffffffffffffffff  ffffffffffffffff 
    00007f9db33a58e0:  ffffffffffffffff  ffffffffffffffff 
    00007f9db33a58f0:  ffffffffffffffff  ffffffffffffffff 
    00007f9db33a5900:  ffffffffffffffff  ffffffffffffffff 
    00007f9db33a5910:  ffffffffffffffff  ffffffffffffffff 
    00007f9db33a5920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).parse(0xc00011c500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:277 +0xbc6
    text/template/parse.(*Tree).Parse(0xc00011c500, 0x55f5c2b10440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001c4720, 0xc000142350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x55f5c2ab59b7, 0x4, 0x55f5c2b10440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000142350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc00003d840, 0x55f5c2b10440, 0x16c, 0x4, 0xc000109708, 0x55f5c379f760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 6 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 7 [runnable]:
    text/template/parse.(*lexer).run(0xc00014a630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:228
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7f9db71a7840
    rcx    0x7f9db6df9f47
    rdx    0x0
    rdi    0x2
    rsi    0x7f9db33a5830
    rbp    0x55f5c2c7ae7c
    rsp    0x7f9db33a5830
    r8     0x0
    r9     0x7f9db33a5830
    r10    0x8
    r11    0x246
    r12    0x55f5c479a3f0
    r13    0x0
    r14    0x55f5c2c60d10
    r15    0x0
    rip    0x7f9db6df9f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
