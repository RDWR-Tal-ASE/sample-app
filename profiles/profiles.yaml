apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
    Error: bad file '-': yaml: line 11: mapping values are not allowed in this context
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000208000)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000208000)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc00004b000, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc00006df01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc000001080)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [syscall, locked to thread]:
    reflect.mapassign(0x18bbf80, 0xc00056aed0, 0xc0005821f0, 0xc0005821d0)
    	/usr/local/go/src/runtime/map.go:1319 +0x3f
    reflect.Value.SetMapIndex(0x18bbf80, 0xc0004ee438, 0x195, 0x1858200, 0xc0005821f0, 0x98, 0x1897a80, 0xc0005821d0, 0x194)
    	/usr/local/go/src/reflect/value.go:1706 +0x27c
    encoding/json.(*decodeState).object(0xc000588000, 0x1811e60, 0xc0004ee438, 0x16, 0xc000588028, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:807 +0x8da
    encoding/json.(*decodeState).value(0xc000588000, 0x1811e60, 0xc0004ee438, 0x16, 0xc000513bc8, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc000588000, 0x1811e60, 0xc0004ee438, 0xc000588028, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0004b0584, 0x37, 0xb87c, 0x1811e60, 0xc0004ee438, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00057a6c0, 0xc0004b0584, 0x37, 0xb87c, 0x7f4c676b2b00, 0xc00057a6c0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:565 +0x18b
    encoding/json.(*decodeState).object(0xc000576370, 0x19ce1a0, 0xc00057a6c0, 0x199, 0xc000576398, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc000576370, 0x19ce1a0, 0xc00057a6c0, 0x199, 0xc000584d80, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000576370, 0x18bc100, 0xc000573ee0, 0x195, 0xc000576398, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000576370, 0x18bc100, 0xc000573ee0, 0x195, 0x18bc100, 0xc000573ee0)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000576370, 0x1815520, 0xc000573d40, 0x16, 0xc000576398, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000576370, 0x1815520, 0xc000573d40, 0x16, 0xc000514888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc000576370, 0x1815520, 0xc000573d40, 0xc000576398, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0004afdc7, 0x9ca, 0xc039, 0x1815520, 0xc000573d40, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0004e26c0, 0xc0004afdc7, 0x9ca, 0xc039, 0x7f4c676b2b00, 0xc0004e26c0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0001a0a50, 0x19ce1a0, 0xc0004e26c0, 0x199, 0xc0001a0a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0001a0a50, 0x19ce1a0, 0xc0004e26c0, 0x199, 0xc000573b00, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0001a0a50, 0x18e59a0, 0xc000490648, 0x195, 0xc0001a0a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0001a0a50, 0x18e59a0, 0xc000490648, 0x195, 0x18e59a0, 0xc000490648)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0001a0a50, 0x1815520, 0xc000490480, 0x16, 0xc0001a0a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0001a0a50, 0x1815520, 0xc000490480, 0x16, 0xc0001e7548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0001a0a50, 0x1815520, 0xc000490480, 0xc0001a0a78, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0004ac000, 0x9d38, 0xfe00, 0x1815520, 0xc000490480, 0x7f4c67753eb8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000490240, 0xc0004ac000, 0x9d38, 0xfe00, 0x7f4c676b2b00, 0xc000490240)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0001a09a0, 0x1a89300, 0xc000490240, 0x16, 0xc0001a09c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0001a09a0, 0x1a89300, 0xc000490240, 0x16, 0xc0001e7c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0001a09a0, 0x1a89300, 0xc000490240, 0xc0001a09c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0004ac000, 0x9d39, 0xfe00, 0x1a89300, 0xc000490240, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc0004659e0, 0xc0001e7d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc000465920, 0xc0004658f0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 6 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
