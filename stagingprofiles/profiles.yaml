apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
    Error: bad file '-': yaml: line 11: mapping values are not allowed in this context
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 7 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000088400)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000088400)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x0, 0xc000048800, 0x6)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0xc000048800, 0x2a6cc00)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.handoffp(0xc000048800)
    	/usr/local/go/src/runtime/proc.go:2001 +0x52
    runtime.stoplockedm()
    	/usr/local/go/src/runtime/proc.go:2075 +0xf7
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2611 +0x48c
    runtime.goschedImpl(0xc000000180)
    	/usr/local/go/src/runtime/proc.go:2860 +0xda
    runtime.gopreempt_m(0xc000000180)
    	/usr/local/go/src/runtime/proc.go:2888 +0x34
    runtime.newstack()
    	/usr/local/go/src/runtime/stack.go:1047 +0x1bc
    runtime.morestack()
    	/usr/local/go/src/runtime/asm_amd64.s:449 +0x8f
    
    goroutine 1 [runnable, locked to thread]:
    reflect.mapassign(0x18bc100, 0xc0000a0780, 0xc00009ed80, 0xc0000e8000)
    	/usr/local/go/src/runtime/map.go:1319 +0x3f
    reflect.Value.SetMapIndex(0x18bc100, 0xc0000cf820, 0x195, 0x1858200, 0xc00009ed80, 0x98, 0x19ce1a0, 0xc0000e8000, 0x199)
    	/usr/local/go/src/reflect/value.go:1706 +0x27c
    encoding/json.(*decodeState).object(0xc0000d0370, 0x18bc100, 0xc0000cf820, 0x195, 0xc0000d0398, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:807 +0x8da
    encoding/json.(*decodeState).value(0xc0000d0370, 0x18bc100, 0xc0000cf820, 0x195, 0x18bc100, 0xc0000cf820)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000d0370, 0x1815520, 0xc0000cf680, 0x16, 0xc0000d0398, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000d0370, 0x1815520, 0xc0000cf680, 0x16, 0xc00041c888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000d0370, 0x1815520, 0xc0000cf680, 0xc0000d0398, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003ba7b5, 0x9e1, 0xb64b, 0x1815520, 0xc0000cf680, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0003ea6c0, 0xc0003ba7b5, 0x9e1, 0xb64b, 0x7f091a5e6b00, 0xc0003ea6c0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0001289a0, 0x19ce1a0, 0xc0003ea6c0, 0x199, 0xc0001289c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0001289a0, 0x19ce1a0, 0xc0003ea6c0, 0x199, 0xc0000cf440, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0001289a0, 0x18e59a0, 0xc00039a648, 0x195, 0xc0001289c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0001289a0, 0x18e59a0, 0xc00039a648, 0x195, 0x18e59a0, 0xc00039a648)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0001289a0, 0x1815520, 0xc00039a480, 0x16, 0xc0001289c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0001289a0, 0x1815520, 0xc00039a480, 0x16, 0xc00016f548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0001289a0, 0x1815520, 0xc00039a480, 0xc0001289c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003b6000, 0x9d38, 0xfe00, 0x1815520, 0xc00039a480, 0x7f091a646128, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00039a240, 0xc0003b6000, 0x9d38, 0xfe00, 0x7f091a5e6b00, 0xc00039a240)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0001288f0, 0x1a89300, 0xc00039a240, 0x16, 0xc000128918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0001288f0, 0x1a89300, 0xc00039a240, 0x16, 0xc00016fc18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0001288f0, 0x1a89300, 0xc00039a240, 0xc000128918, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003b6000, 0x9d39, 0xfe00, 0x1a89300, 0xc00039a240, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc0003699e0, 0xc00016fd68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc000369920, 0xc0003698f0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 6 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f0e150acf47 m=6 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f0e150acf47
    stack: frame={sp:0x7f0e10e57830, fp:0x0} stack=[0x7f0e10658288,0x7f0e10e57e88)
    00007f0e10e57730:  00007f0e10e57af0  00007f0e1569575a 
    00007f0e10e57740:  000000000000000b  0000000000000000 
    00007f0e10e57750:  00007f0e0affd700  0000561d29abf148 
    00007f0e10e57760:  00007f0e10e57c40  00007f0dfc000c50 
    00007f0e10e57770:  0000000000000000  0000561d28f9bd10 
    00007f0e10e57780:  0000000000000000  00007f0e1568df13 
    00007f0e10e57790:  0000000000000005  0000000000000000 
    00007f0e10e577a0:  2525252525252525  2525252525252525 
    00007f0e10e577b0:  00000000000000ff  0000000000000000 
    00007f0e10e577c0:  00000000000000ff  0000000000000000 
    00007f0e10e577d0:  0000000000000036  000000000000000c 
    00007f0e10e577e0:  000000000000000e  000000000000000e 
    00007f0e10e577f0:  0000000000000000  0000000000000000 
    00007f0e10e57800:  ffffffffffffffff  ffffffffffffffff 
    00007f0e10e57810:  0000000400000004  0000000400000004 
    00007f0e10e57820:  20636f6c6c616d00  203a64656c696166 
    00007f0e10e57830: <0000000000000000  0000000000000000 
    00007f0e10e57840:  0000000000000000  0000000200000000 
    00007f0e10e57850:  000000000000000b  0000000000000000 
    00007f0e10e57860:  0000000000000000  0000000000000000 
    00007f0e10e57870:  0000000000000000  000000000000000a 
    00007f0e10e57880:  0000000000000000  0000561d29ad5380 
    00007f0e10e57890:  0000000000000004  0000000000000004 
    00007f0e10e578a0:  0000000000000000  0000000000000000 
    00007f0e10e578b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f0e10e578c0:  ffffffffffffffff  ffffffffffffffff 
    00007f0e10e578d0:  ffffffffffffffff  ffffffffffffffff 
    00007f0e10e578e0:  ffffffffffffffff  ffffffffffffffff 
    00007f0e10e578f0:  ffffffffffffffff  ffffffffffffffff 
    00007f0e10e57900:  ffffffffffffffff  ffffffffffffffff 
    00007f0e10e57910:  ffffffffffffffff  ffffffffffffffff 
    00007f0e10e57920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f0e150acf47
    stack: frame={sp:0x7f0e10e57830, fp:0x0} stack=[0x7f0e10658288,0x7f0e10e57e88)
    00007f0e10e57730:  00007f0e10e57af0  00007f0e1569575a 
    00007f0e10e57740:  000000000000000b  0000000000000000 
    00007f0e10e57750:  00007f0e0affd700  0000561d29abf148 
    00007f0e10e57760:  00007f0e10e57c40  00007f0dfc000c50 
    00007f0e10e57770:  0000000000000000  0000561d28f9bd10 
    00007f0e10e57780:  0000000000000000  00007f0e1568df13 
    00007f0e10e57790:  0000000000000005  0000000000000000 
    00007f0e10e577a0:  2525252525252525  2525252525252525 
    00007f0e10e577b0:  00000000000000ff  0000000000000000 
    00007f0e10e577c0:  00000000000000ff  0000000000000000 
    00007f0e10e577d0:  0000000000000036  000000000000000c 
    00007f0e10e577e0:  000000000000000e  000000000000000e 
    00007f0e10e577f0:  0000000000000000  0000000000000000 
    00007f0e10e57800:  ffffffffffffffff  ffffffffffffffff 
    00007f0e10e57810:  0000000400000004  0000000400000004 
    00007f0e10e57820:  20636f6c6c616d00  203a64656c696166 
    00007f0e10e57830: <0000000000000000  0000000000000000 
    00007f0e10e57840:  0000000000000000  0000000200000000 
    00007f0e10e57850:  000000000000000b  0000000000000000 
    00007f0e10e57860:  0000000000000000  0000000000000000 
    00007f0e10e57870:  0000000000000000  000000000000000a 
    00007f0e10e57880:  0000000000000000  0000561d29ad5380 
    00007f0e10e57890:  0000000000000004  0000000000000004 
    00007f0e10e578a0:  0000000000000000  0000000000000000 
    00007f0e10e578b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f0e10e578c0:  ffffffffffffffff  ffffffffffffffff 
    00007f0e10e578d0:  ffffffffffffffff  ffffffffffffffff 
    00007f0e10e578e0:  ffffffffffffffff  ffffffffffffffff 
    00007f0e10e578f0:  ffffffffffffffff  ffffffffffffffff 
    00007f0e10e57900:  ffffffffffffffff  ffffffffffffffff 
    00007f0e10e57910:  ffffffffffffffff  ffffffffffffffff 
    00007f0e10e57920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).next(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:64
    text/template/parse.(*Tree).peekNonSpace(0xc00010e500, 0x11, 0x143, 0x561d28e4b583, 0x1, 0x11)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:113 +0x156
    text/template/parse.(*Tree).pipeline(0xc00010e500, 0x561d28df09eb, 0x4, 0xc0001bc4a8)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:383 +0x45
    text/template/parse.(*Tree).parseControl(0xc00010e500, 0xb1a000, 0x561d28df09eb, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:457 +0xe4
    text/template/parse.(*Tree).withControl(0xc00010e500, 0x1f, 0x13f)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:509 +0x4e
    text/template/parse.(*Tree).action(0xc00010e500, 0xa, 0x13b)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:372 +0x55f
    text/template/parse.(*Tree).textOrAction(0xc00010e500, 0x1f, 0x13f)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:345 +0x295
    text/template/parse.(*Tree).parse(0xc00010e500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:291 +0x383
    text/template/parse.(*Tree).Parse(0xc00010e500, 0x561d28e4b440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001b6720, 0xc000134350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x561d28df09b7, 0x4, 0x561d28e4b440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000134350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc00003d840, 0x561d28e4b440, 0x16c, 0x4, 0xc0000fb708, 0x561d29ada760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 6 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 7 [runnable]:
    text/template/parse.(*lexer).emit(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:157
    text/template/parse.lexSpace(0xc00013c630, 0x561d2956a8b0)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:443 +0x17c
    text/template/parse.(*lexer).run(0xc00013c630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:230 +0x39
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7f0e1545a840
    rcx    0x7f0e150acf47
    rdx    0x0
    rdi    0x2
    rsi    0x7f0e10e57830
    rbp    0x561d28fb5e7c
    rsp    0x7f0e10e57830
    r8     0x0
    r9     0x7f0e10e57830
    r10    0x8
    r11    0x246
    r12    0x7f0dfc000c50
    r13    0x0
    r14    0x561d28f9bd10
    r15    0x0
    rip    0x7f0e150acf47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
