apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7fb276237f47 m=8 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7fb276237f47
    stack: frame={sp:0x7fb270fe0840, fp:0x0} stack=[0x7fb2707e1288,0x7fb270fe0e88)
    00007fb270fe0740:  00007fb270fe0b20  00007fb276818f13 
    00007fb270fe0750:  0000000000000005  000055cb69cc2148 
    00007fb270fe0760:  00007fb270fe0c50  000055cb6b4d2540 
    00007fb270fe0770:  0000000000000000  000055cb6919ed10 
    00007fb270fe0780:  0000000000000000  00007fb276818f13 
    00007fb270fe0790:  0000000000000005  0000000000000000 
    00007fb270fe07a0:  2525252525252525  2525252525252525 
    00007fb270fe07b0:  00000000000000ff  0000000000000000 
    00007fb270fe07c0:  00000000000000ff  0000000000000000 
    00007fb270fe07d0:  00007fb258000010  00007fb258000010 
    00007fb270fe07e0:  000000000000000e  000000000000000e 
    00007fb270fe07f0:  0000000000000000  0000000000000000 
    00007fb270fe0800:  ffffffffffffffff  ffffffffffffffff 
    00007fb270fe0810:  0000000400000004  0000000400000004 
    00007fb270fe0820:  20636f6c6c616d00  203a64656c696166 
    00007fb270fe0830:  0000000000000000  0000000000000000 
    00007fb270fe0840: <0000000000000000  0000000000000000 
    00007fb270fe0850:  0000000000000000  0000000000000000 
    00007fb270fe0860:  0000000000000000  0000000000000000 
    00007fb270fe0870:  0000000000000000  0000000000000000 
    00007fb270fe0880:  0000000000000000  0000000000000000 
    00007fb270fe0890:  0000000000000000  0000000000000000 
    00007fb270fe08a0:  0000000000000000  0000000000000000 
    00007fb270fe08b0:  00007fb2765e5560  00007fb2765e8bc0 
    00007fb270fe08c0:  fffffffe7fffffff  ffffffffffffffff 
    00007fb270fe08d0:  ffffffffffffffff  ffffffffffffffff 
    00007fb270fe08e0:  ffffffffffffffff  ffffffffffffffff 
    00007fb270fe08f0:  ffffffffffffffff  ffffffffffffffff 
    00007fb270fe0900:  ffffffffffffffff  ffffffffffffffff 
    00007fb270fe0910:  ffffffffffffffff  ffffffffffffffff 
    00007fb270fe0920:  ffffffffffffffff  ffffffffffffffff 
    00007fb270fe0930:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7fb276237f47
    stack: frame={sp:0x7fb270fe0840, fp:0x0} stack=[0x7fb2707e1288,0x7fb270fe0e88)
    00007fb270fe0740:  00007fb270fe0b20  00007fb276818f13 
    00007fb270fe0750:  0000000000000005  000055cb69cc2148 
    00007fb270fe0760:  00007fb270fe0c50  000055cb6b4d2540 
    00007fb270fe0770:  0000000000000000  000055cb6919ed10 
    00007fb270fe0780:  0000000000000000  00007fb276818f13 
    00007fb270fe0790:  0000000000000005  0000000000000000 
    00007fb270fe07a0:  2525252525252525  2525252525252525 
    00007fb270fe07b0:  00000000000000ff  0000000000000000 
    00007fb270fe07c0:  00000000000000ff  0000000000000000 
    00007fb270fe07d0:  00007fb258000010  00007fb258000010 
    00007fb270fe07e0:  000000000000000e  000000000000000e 
    00007fb270fe07f0:  0000000000000000  0000000000000000 
    00007fb270fe0800:  ffffffffffffffff  ffffffffffffffff 
    00007fb270fe0810:  0000000400000004  0000000400000004 
    00007fb270fe0820:  20636f6c6c616d00  203a64656c696166 
    00007fb270fe0830:  0000000000000000  0000000000000000 
    00007fb270fe0840: <0000000000000000  0000000000000000 
    00007fb270fe0850:  0000000000000000  0000000000000000 
    00007fb270fe0860:  0000000000000000  0000000000000000 
    00007fb270fe0870:  0000000000000000  0000000000000000 
    00007fb270fe0880:  0000000000000000  0000000000000000 
    00007fb270fe0890:  0000000000000000  0000000000000000 
    00007fb270fe08a0:  0000000000000000  0000000000000000 
    00007fb270fe08b0:  00007fb2765e5560  00007fb2765e8bc0 
    00007fb270fe08c0:  fffffffe7fffffff  ffffffffffffffff 
    00007fb270fe08d0:  ffffffffffffffff  ffffffffffffffff 
    00007fb270fe08e0:  ffffffffffffffff  ffffffffffffffff 
    00007fb270fe08f0:  ffffffffffffffff  ffffffffffffffff 
    00007fb270fe0900:  ffffffffffffffff  ffffffffffffffff 
    00007fb270fe0910:  ffffffffffffffff  ffffffffffffffff 
    00007fb270fe0920:  ffffffffffffffff  ffffffffffffffff 
    00007fb270fe0930:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).next(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:64
    text/template/parse.(*Tree).nextNonSpace(0xc000132500, 0x0, 0x0, 0x0, 0x0, 0x0)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:102 +0x14e
    text/template/parse.(*Tree).parse(0xc000132500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:281 +0x2f6
    text/template/parse.(*Tree).Parse(0xc000132500, 0x55cb6904e440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001dc6f0, 0xc000158340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x55cb68ff39b7, 0x4, 0x55cb6904e440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000158340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc00009d7c0, 0x55cb6904e440, 0x16c, 0x4, 0xc00011f5e8, 0x55cb69cdd760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 19 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 20 [runnable]:
    text/template/parse.(*lexer).emit(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:157
    text/template/parse.lexLeftDelim(0xc000160630, 0x55cb6976d888)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:307 +0x1e0
    text/template/parse.(*lexer).run(0xc000160630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:230 +0x39
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7fb2765e5840
    rcx    0x7fb276237f47
    rdx    0x0
    rdi    0x2
    rsi    0x7fb270fe0840
    rbp    0x55cb691b8e7c
    rsp    0x7fb270fe0840
    r8     0x0
    r9     0x7fb270fe0840
    r10    0x8
    r11    0x246
    r12    0x55cb6b4d2540
    r13    0x0
    r14    0x55cb6919ed10
    r15    0x0
    rip    0x7fb276237f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000062c00)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000062c00)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc00004d800, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc00006df01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.mstart1()
    	/usr/local/go/src/runtime/proc.go:1179 +0x93
    runtime.mstart()
    	/usr/local/go/src/runtime/proc.go:1137 +0x6e
    
    goroutine 1 [syscall, locked to thread]:
    net/url.parse(0xc0004d19c0, 0x0, 0x100, 0xc0004d19c0, 0x0, 0xc0004d19c1)
    	/usr/local/go/src/net/url/url.go:519 +0x85
    net/url.Parse(0xc0004d19c0, 0x12, 0x0, 0x32, 0x0)
    	/usr/local/go/src/net/url/url.go:478 +0x85
    k8s.io/kubernetes/vendor/github.com/go-openapi/jsonreference.(*Ref).parse(0xc0004b3bc8, 0xc0004d19c0, 0x12, 0x4, 0xc00051f5e8)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/jsonreference/reference.go:112 +0x39
    k8s.io/kubernetes/vendor/github.com/go-openapi/jsonreference.New(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/jsonreference/reference.go:45
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Ref).fromMap(0xc0004b3d48, 0xc000509200, 0xb6ff, 0x1811e60)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/ref.go:182 +0xe8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00051cb40, 0xc000454701, 0x32, 0xb6ff, 0x7f9c40557f00, 0xc00051cb40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:569 +0x1bc
    encoding/json.(*decodeState).object(0xc000518210, 0x19ce1a0, 0xc00051cb40, 0x199, 0xc000518238, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc000518210, 0x19ce1a0, 0xc00051cb40, 0x199, 0xc000531440, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000518210, 0x18bc100, 0xc00051c3e0, 0x195, 0xc000518238, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000518210, 0x18bc100, 0xc00051c3e0, 0x195, 0x18bc100, 0xc00051c3e0)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000518210, 0x1815520, 0xc00051c240, 0x16, 0xc000518238, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000518210, 0x1815520, 0xc00051c240, 0x16, 0xc0004b4888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc000518210, 0x1815520, 0xc00051c240, 0xc000518238, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000453dc7, 0x9ca, 0xc039, 0x1815520, 0xc00051c240, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000484b40, 0xc000453dc7, 0x9ca, 0xc039, 0x7f9c40557f00, 0xc000484b40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc00014a8f0, 0x19ce1a0, 0xc000484b40, 0x199, 0xc00014a918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc00014a8f0, 0x19ce1a0, 0xc000484b40, 0x199, 0xc00051c000, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc00014a8f0, 0x18e59a0, 0xc00041aac8, 0x195, 0xc00014a918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc00014a8f0, 0x18e59a0, 0xc00041aac8, 0x195, 0x18e59a0, 0xc00041aac8)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc00014a8f0, 0x1815520, 0xc00041a900, 0x16, 0xc00014a918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc00014a8f0, 0x1815520, 0xc00041a900, 0x16, 0xc00020b548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc00014a8f0, 0x1815520, 0xc00041a900, 0xc00014a918, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000450000, 0x9d38, 0xfe00, 0x1815520, 0xc00041a900, 0x7f9c40759c40, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00041a6c0, 0xc000450000, 0x9d38, 0xfe00, 0x7f9c40557f00, 0xc00041a6c0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc00014a840, 0x1a89300, 0xc00041a6c0, 0x16, 0xc00014a868, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc00014a840, 0x1a89300, 0xc00041a6c0, 0x16, 0xc00020bc18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc00014a840, 0x1a89300, 0xc00041a6c0, 0xc00014a868, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000450000, 0x9d39, 0xfe00, 0x1a89300, 0xc00041a6c0, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc000405b30, 0xc00020bd68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc000405a70, 0xc000405a40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 18 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
