apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7fa09757ff47 m=7 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7fa09757ff47
    stack: frame={sp:0x7fa08e7fb830, fp:0x0} stack=[0x7fa08dffc288,0x7fa08e7fbe88)
    00007fa08e7fb730:  00007fa08e7fbaf0  00007fa097b6875a 
    00007fa08e7fb740:  000000000000000b  0000000000000000 
    00007fa08e7fb750:  00007fa08dffb700  0000561a495a3148 
    00007fa08e7fb760:  00007fa08e7fbc40  0000561a496963f0 
    00007fa08e7fb770:  0000000000000000  0000561a48a7fd10 
    00007fa08e7fb780:  0000000000000000  00007fa097b60f13 
    00007fa08e7fb790:  0000000000000005  0000000000000000 
    00007fa08e7fb7a0:  2525252525252525  2525252525252525 
    00007fa08e7fb7b0:  00000000000000ff  0000000000000000 
    00007fa08e7fb7c0:  00000000000000ff  0000000000000000 
    00007fa08e7fb7d0:  0000000000000003  0000000000000003 
    00007fa08e7fb7e0:  000000000000000e  000000000000000e 
    00007fa08e7fb7f0:  0000000000000000  0000000000000000 
    00007fa08e7fb800:  ffffffffffffffff  ffffffffffffffff 
    00007fa08e7fb810:  0000000400000004  0000000400000004 
    00007fa08e7fb820:  20636f6c6c616d00  203a64656c696166 
    00007fa08e7fb830: <0000000000000000  0000000000000000 
    00007fa08e7fb840:  0000000000000000  0000000000000000 
    00007fa08e7fb850:  0000000000000000  0000000000000000 
    00007fa08e7fb860:  0000000000000000  0000000000000000 
    00007fa08e7fb870:  0000000000000000  0000000000000000 
    00007fa08e7fb880:  0000000000000000  0000000000000000 
    00007fa08e7fb890:  0000000000000000  0000000000000000 
    00007fa08e7fb8a0:  0000000000000000  0000000000000000 
    00007fa08e7fb8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007fa08e7fb8c0:  ffffffffffffffff  ffffffffffffffff 
    00007fa08e7fb8d0:  ffffffffffffffff  ffffffffffffffff 
    00007fa08e7fb8e0:  ffffffffffffffff  ffffffffffffffff 
    00007fa08e7fb8f0:  ffffffffffffffff  ffffffffffffffff 
    00007fa08e7fb900:  ffffffffffffffff  ffffffffffffffff 
    00007fa08e7fb910:  ffffffffffffffff  ffffffffffffffff 
    00007fa08e7fb920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7fa09757ff47
    stack: frame={sp:0x7fa08e7fb830, fp:0x0} stack=[0x7fa08dffc288,0x7fa08e7fbe88)
    00007fa08e7fb730:  00007fa08e7fbaf0  00007fa097b6875a 
    00007fa08e7fb740:  000000000000000b  0000000000000000 
    00007fa08e7fb750:  00007fa08dffb700  0000561a495a3148 
    00007fa08e7fb760:  00007fa08e7fbc40  0000561a496963f0 
    00007fa08e7fb770:  0000000000000000  0000561a48a7fd10 
    00007fa08e7fb780:  0000000000000000  00007fa097b60f13 
    00007fa08e7fb790:  0000000000000005  0000000000000000 
    00007fa08e7fb7a0:  2525252525252525  2525252525252525 
    00007fa08e7fb7b0:  00000000000000ff  0000000000000000 
    00007fa08e7fb7c0:  00000000000000ff  0000000000000000 
    00007fa08e7fb7d0:  0000000000000003  0000000000000003 
    00007fa08e7fb7e0:  000000000000000e  000000000000000e 
    00007fa08e7fb7f0:  0000000000000000  0000000000000000 
    00007fa08e7fb800:  ffffffffffffffff  ffffffffffffffff 
    00007fa08e7fb810:  0000000400000004  0000000400000004 
    00007fa08e7fb820:  20636f6c6c616d00  203a64656c696166 
    00007fa08e7fb830: <0000000000000000  0000000000000000 
    00007fa08e7fb840:  0000000000000000  0000000000000000 
    00007fa08e7fb850:  0000000000000000  0000000000000000 
    00007fa08e7fb860:  0000000000000000  0000000000000000 
    00007fa08e7fb870:  0000000000000000  0000000000000000 
    00007fa08e7fb880:  0000000000000000  0000000000000000 
    00007fa08e7fb890:  0000000000000000  0000000000000000 
    00007fa08e7fb8a0:  0000000000000000  0000000000000000 
    00007fa08e7fb8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007fa08e7fb8c0:  ffffffffffffffff  ffffffffffffffff 
    00007fa08e7fb8d0:  ffffffffffffffff  ffffffffffffffff 
    00007fa08e7fb8e0:  ffffffffffffffff  ffffffffffffffff 
    00007fa08e7fb8f0:  ffffffffffffffff  ffffffffffffffff 
    00007fa08e7fb900:  ffffffffffffffff  ffffffffffffffff 
    00007fa08e7fb910:  ffffffffffffffff  ffffffffffffffff 
    00007fa08e7fb920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).parse(0xc00011c500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:278 +0xa5b
    text/template/parse.(*Tree).Parse(0xc00011c500, 0x561a4892f440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001c4720, 0xc000142350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x561a488d49b7, 0x4, 0x561a4892f440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000142350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc00003d840, 0x561a4892f440, 0x16c, 0x4, 0xc000109708, 0x561a495be760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 6 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 7 [runnable]:
    text/template/parse.(*lexer).emit(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:157
    text/template/parse.lexRightDelim(0xc00014a630, 0x561a4904e8a8)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:345 +0x17f
    text/template/parse.(*lexer).run(0xc00014a630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:230 +0x39
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7fa09792d840
    rcx    0x7fa09757ff47
    rdx    0x0
    rdi    0x2
    rsi    0x7fa08e7fb830
    rbp    0x561a48a99e7c
    rsp    0x7fa08e7fb830
    r8     0x0
    r9     0x7fa08e7fb830
    r10    0x8
    r11    0x246
    r12    0x561a496963f0
    r13    0x0
    r14    0x561a48a7fd10
    r15    0x0
    rip    0x7fa09757ff47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000088400)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000088400)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc00004b000, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc000099f01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc000001080)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [syscall, locked to thread]:
    reflect.mapassign(0x18bbf80, 0xc000473b90, 0xc00048d060, 0xc00048d040)
    	/usr/local/go/src/runtime/map.go:1319 +0x3f
    reflect.Value.SetMapIndex(0x18bbf80, 0xc0003fa4e0, 0x195, 0x1858200, 0xc00048d060, 0x98, 0x1897a80, 0xc00048d040, 0x194)
    	/usr/local/go/src/reflect/value.go:1706 +0x27c
    encoding/json.(*decodeState).object(0xc0004b0210, 0x1811e60, 0xc0003fa4e0, 0x16, 0xc0004b0238, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:807 +0x8da
    encoding/json.(*decodeState).value(0xc0004b0210, 0x1811e60, 0xc0003fa4e0, 0x16, 0xc00041fbc8, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0004b0210, 0x1811e60, 0xc0003fa4e0, 0xc0004b0238, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003bee93, 0x35, 0xaf6d, 0x1811e60, 0xc0003fa4e0, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0004a3200, 0xc0003bee93, 0x35, 0xaf6d, 0x7f3e5da4fb00, 0xc0004a3200)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:565 +0x18b
    encoding/json.(*decodeState).object(0xc0004989a0, 0x19ce1a0, 0xc0004a3200, 0x199, 0xc0004989c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0004989a0, 0x19ce1a0, 0xc0004a3200, 0x199, 0xc0004ae480, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004989a0, 0x18bc100, 0xc0004a2aa0, 0x195, 0xc0004989c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004989a0, 0x18bc100, 0xc0004a2aa0, 0x195, 0x18bc100, 0xc0004a2aa0)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004989a0, 0x1815520, 0xc0004a2900, 0x16, 0xc0004989c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004989a0, 0x1815520, 0xc0004a2900, 0x16, 0xc000420888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0004989a0, 0x1815520, 0xc0004a2900, 0xc0004989c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003be7b5, 0x9e1, 0xb64b, 0x1815520, 0xc0004a2900, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0003eeb40, 0xc0003be7b5, 0x9e1, 0xb64b, 0x7f3e5da4fb00, 0xc0003eeb40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc000136a50, 0x19ce1a0, 0xc0003eeb40, 0x199, 0xc000136a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc000136a50, 0x19ce1a0, 0xc0003eeb40, 0x199, 0xc0004a26c0, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000136a50, 0x18e59a0, 0xc00037eac8, 0x195, 0xc000136a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000136a50, 0x18e59a0, 0xc00037eac8, 0x195, 0x18e59a0, 0xc00037eac8)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000136a50, 0x1815520, 0xc00037e900, 0x16, 0xc000136a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000136a50, 0x1815520, 0xc00037e900, 0x16, 0xc000173548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc000136a50, 0x1815520, 0xc00037e900, 0xc000136a78, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003ba000, 0x9d38, 0xfe00, 0x1815520, 0xc00037e900, 0x7f3e5dab0898, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00037e6c0, 0xc0003ba000, 0x9d38, 0xfe00, 0x7f3e5da4fb00, 0xc00037e6c0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0001369a0, 0x1a89300, 0xc00037e6c0, 0x16, 0xc0001369c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0001369a0, 0x1a89300, 0xc00037e6c0, 0x16, 0xc000173c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0001369a0, 0x1a89300, 0xc00037e6c0, 0xc0001369c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003ba000, 0x9d39, 0xfe00, 0x1a89300, 0xc00037e6c0, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc00036db30, 0xc000173d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc00036da70, 0xc00036da40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 6 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f8f4a891f47 m=7 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f8f4a891f47
    stack: frame={sp:0x7f8f45e3b840, fp:0x0} stack=[0x7f8f4563c288,0x7f8f45e3be88)
    00007f8f45e3b740:  0000000000000000  0000000000000000 
    00007f8f45e3b750:  0000000000000000  0000557aec124148 
    00007f8f45e3b760:  00007f8f45e3bc50  0000557aed1ea540 
    00007f8f45e3b770:  0000000000000000  0000557aeb600d10 
    00007f8f45e3b780:  0000000000000000  00007f8f4ae72f13 
    00007f8f45e3b790:  0000000000000005  0000000000000000 
    00007f8f45e3b7a0:  2525252525252525  2525252525252525 
    00007f8f45e3b7b0:  00000000000000ff  0000000000000000 
    00007f8f45e3b7c0:  00000000000000ff  0000000000000000 
    00007f8f45e3b7d0:  00007f8f28000010  00007f8f28000010 
    00007f8f45e3b7e0:  000000000000000e  000000000000000e 
    00007f8f45e3b7f0:  0000000000000000  0000000000000000 
    00007f8f45e3b800:  ffffffffffffffff  ffffffffffffffff 
    00007f8f45e3b810:  0000000400000004  0000000400000004 
    00007f8f45e3b820:  20636f6c6c616d00  203a64656c696166 
    00007f8f45e3b830:  0000000000000000  0000000000000000 
    00007f8f45e3b840: <0000000000000000  0000000000000000 
    00007f8f45e3b850:  0000000000000000  0000000000000000 
    00007f8f45e3b860:  0000000000000000  0000000000000000 
    00007f8f45e3b870:  0000000000000000  0000000000000000 
    00007f8f45e3b880:  0000000000000000  0000000000000000 
    00007f8f45e3b890:  0000000000000000  0000000000000000 
    00007f8f45e3b8a0:  0000000000000000  0000000000000000 
    00007f8f45e3b8b0:  00007f8f4ac3f560  00007f8f4ac42bc0 
    00007f8f45e3b8c0:  fffffffe7fffffff  ffffffffffffffff 
    00007f8f45e3b8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f8f45e3b8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f8f45e3b8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f8f45e3b900:  ffffffffffffffff  ffffffffffffffff 
    00007f8f45e3b910:  ffffffffffffffff  ffffffffffffffff 
    00007f8f45e3b920:  ffffffffffffffff  ffffffffffffffff 
    00007f8f45e3b930:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f8f4a891f47
    stack: frame={sp:0x7f8f45e3b840, fp:0x0} stack=[0x7f8f4563c288,0x7f8f45e3be88)
    00007f8f45e3b740:  0000000000000000  0000000000000000 
    00007f8f45e3b750:  0000000000000000  0000557aec124148 
    00007f8f45e3b760:  00007f8f45e3bc50  0000557aed1ea540 
    00007f8f45e3b770:  0000000000000000  0000557aeb600d10 
    00007f8f45e3b780:  0000000000000000  00007f8f4ae72f13 
    00007f8f45e3b790:  0000000000000005  0000000000000000 
    00007f8f45e3b7a0:  2525252525252525  2525252525252525 
    00007f8f45e3b7b0:  00000000000000ff  0000000000000000 
    00007f8f45e3b7c0:  00000000000000ff  0000000000000000 
    00007f8f45e3b7d0:  00007f8f28000010  00007f8f28000010 
    00007f8f45e3b7e0:  000000000000000e  000000000000000e 
    00007f8f45e3b7f0:  0000000000000000  0000000000000000 
    00007f8f45e3b800:  ffffffffffffffff  ffffffffffffffff 
    00007f8f45e3b810:  0000000400000004  0000000400000004 
    00007f8f45e3b820:  20636f6c6c616d00  203a64656c696166 
    00007f8f45e3b830:  0000000000000000  0000000000000000 
    00007f8f45e3b840: <0000000000000000  0000000000000000 
    00007f8f45e3b850:  0000000000000000  0000000000000000 
    00007f8f45e3b860:  0000000000000000  0000000000000000 
    00007f8f45e3b870:  0000000000000000  0000000000000000 
    00007f8f45e3b880:  0000000000000000  0000000000000000 
    00007f8f45e3b890:  0000000000000000  0000000000000000 
    00007f8f45e3b8a0:  0000000000000000  0000000000000000 
    00007f8f45e3b8b0:  00007f8f4ac3f560  00007f8f4ac42bc0 
    00007f8f45e3b8c0:  fffffffe7fffffff  ffffffffffffffff 
    00007f8f45e3b8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f8f45e3b8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f8f45e3b8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f8f45e3b900:  ffffffffffffffff  ffffffffffffffff 
    00007f8f45e3b910:  ffffffffffffffff  ffffffffffffffff 
    00007f8f45e3b920:  ffffffffffffffff  ffffffffffffffff 
    00007f8f45e3b930:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).next(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:64
    text/template/parse.(*Tree).nextNonSpace(0xc000134500, 0x0, 0x0, 0x0, 0x0, 0x0)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:102 +0x14e
    text/template/parse.(*Tree).parse(0xc000134500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:281 +0x2f6
    text/template/parse.(*Tree).Parse(0xc000134500, 0x557aeb4b0440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001de6f0, 0xc00015a340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x557aeb4559b7, 0x4, 0x557aeb4b0440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc00015a340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc0000d5780, 0x557aeb4b0440, 0x16c, 0x4, 0xc0001215e8, 0x557aec13f760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 19 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 20 [runnable]:
    text/template/parse.(*lexer).emit(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:157
    text/template/parse.lexLeftDelim(0xc000162630, 0x557aebbcf888)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:307 +0x1e0
    text/template/parse.(*lexer).run(0xc000162630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:230 +0x39
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7f8f4ac3f840
    rcx    0x7f8f4a891f47
    rdx    0x0
    rdi    0x2
    rsi    0x7f8f45e3b840
    rbp    0x557aeb61ae7c
    rsp    0x7f8f45e3b840
    r8     0x0
    r9     0x7f8f45e3b840
    r10    0x8
    r11    0x246
    r12    0x557aed1ea540
    r13    0x0
    r14    0x557aeb600d10
    r15    0x0
    rip    0x7f8f4a891f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
