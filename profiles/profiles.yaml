apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f30277d9f47 m=3 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f30277d9f47
    stack: frame={sp:0x7f3024d87830, fp:0x0} stack=[0x7f3024588288,0x7f3024d87e88)
    00007f3024d87730:  00007f3024d87af0  00007f3027dc275a 
    00007f3024d87740:  000000000000000b  0000000000000000 
    00007f3024d87750:  00007f301d3ce700  00005602ef1d0148 
    00007f3024d87760:  00007f3024d87c40  00007f3018000ef0 
    00007f3024d87770:  0000000000000000  00005602ee6acd10 
    00007f3024d87780:  0000000000000000  00007f3027dbaf13 
    00007f3024d87790:  0000000000000005  0000000000000000 
    00007f3024d877a0:  2525252525252525  2525252525252525 
    00007f3024d877b0:  00000000000000ff  0000000000000000 
    00007f3024d877c0:  00000000000000ff  0000000000000000 
    00007f3024d877d0:  000000000000ff00  0000000000000000 
    00007f3024d877e0:  00005602edf9349a <net.unixSocket+314>  00005602eecab300 
    00007f3024d877f0:  0000000000000000  0000000000000000 
    00007f3024d87800:  0000000000000000  0000000000000000 
    00007f3024d87810:  0000000000000000  0000000000000000 
    00007f3024d87820:  20636f6c6c616d00  203a64656c696166 
    00007f3024d87830: <0000000000000000  0000000000000000 
    00007f3024d87840:  000000c0003c37c0  000000c0003f7d90 
    00007f3024d87850:  0000000000000000  0000000000000000 
    00007f3024d87860:  0000000000000000  0000000000000000 
    00007f3024d87870:  0000000000000000  0000000000000000 
    00007f3024d87880:  0000000000000000  0000000000000000 
    00007f3024d87890:  0000000000000000  0000000000000000 
    00007f3024d878a0:  0000000000000000  0000000000000000 
    00007f3024d878b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f3024d878c0:  ffffffffffffffff  ffffffffffffffff 
    00007f3024d878d0:  ffffffffffffffff  ffffffffffffffff 
    00007f3024d878e0:  ffffffffffffffff  ffffffffffffffff 
    00007f3024d878f0:  ffffffffffffffff  ffffffffffffffff 
    00007f3024d87900:  ffffffffffffffff  ffffffffffffffff 
    00007f3024d87910:  ffffffffffffffff  ffffffffffffffff 
    00007f3024d87920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f30277d9f47
    stack: frame={sp:0x7f3024d87830, fp:0x0} stack=[0x7f3024588288,0x7f3024d87e88)
    00007f3024d87730:  00007f3024d87af0  00007f3027dc275a 
    00007f3024d87740:  000000000000000b  0000000000000000 
    00007f3024d87750:  00007f301d3ce700  00005602ef1d0148 
    00007f3024d87760:  00007f3024d87c40  00007f3018000ef0 
    00007f3024d87770:  0000000000000000  00005602ee6acd10 
    00007f3024d87780:  0000000000000000  00007f3027dbaf13 
    00007f3024d87790:  0000000000000005  0000000000000000 
    00007f3024d877a0:  2525252525252525  2525252525252525 
    00007f3024d877b0:  00000000000000ff  0000000000000000 
    00007f3024d877c0:  00000000000000ff  0000000000000000 
    00007f3024d877d0:  000000000000ff00  0000000000000000 
    00007f3024d877e0:  00005602edf9349a <net.unixSocket+314>  00005602eecab300 
    00007f3024d877f0:  0000000000000000  0000000000000000 
    00007f3024d87800:  0000000000000000  0000000000000000 
    00007f3024d87810:  0000000000000000  0000000000000000 
    00007f3024d87820:  20636f6c6c616d00  203a64656c696166 
    00007f3024d87830: <0000000000000000  0000000000000000 
    00007f3024d87840:  000000c0003c37c0  000000c0003f7d90 
    00007f3024d87850:  0000000000000000  0000000000000000 
    00007f3024d87860:  0000000000000000  0000000000000000 
    00007f3024d87870:  0000000000000000  0000000000000000 
    00007f3024d87880:  0000000000000000  0000000000000000 
    00007f3024d87890:  0000000000000000  0000000000000000 
    00007f3024d878a0:  0000000000000000  0000000000000000 
    00007f3024d878b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f3024d878c0:  ffffffffffffffff  ffffffffffffffff 
    00007f3024d878d0:  ffffffffffffffff  ffffffffffffffff 
    00007f3024d878e0:  ffffffffffffffff  ffffffffffffffff 
    00007f3024d878f0:  ffffffffffffffff  ffffffffffffffff 
    00007f3024d87900:  ffffffffffffffff  ffffffffffffffff 
    00007f3024d87910:  ffffffffffffffff  ffffffffffffffff 
    00007f3024d87920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [runnable]:
    github.com/snapcore/snapd/client.(*Client).do(0xc0003841c0, 0x5602ee500ee7, 0x3, 0x5602ee50ad78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x5602eeb5af40, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:394 +0x2f9
    github.com/snapcore/snapd/client.(*Client).doSyncWithOpts(0xc0003841c0, 0x5602ee500ee7, 0x3, 0x5602ee50ad78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x5602eeaf69a0, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:492 +0xf6
    github.com/snapcore/snapd/client.(*Client).SysInfo(0xc0003841c0, 0x46, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/client/client.go:727 +0xd4
    main.maybeWaitForSecurityProfileRegeneration(0xc0003841c0, 0xc0003c37c0, 0xd)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:200 +0x1aa
    main.(*cmdRun).Execute(0xc000251eb8, 0xc0000a8160, 0x2, 0x3, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:240 +0x172
    main.main()
    	/build/snapd/parts/snapd-deb/build/cmd/snap/main.go:482 +0x581
    
    goroutine 19 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    rax    0x0
    rbx    0x7f3027b87840
    rcx    0x7f30277d9f47
    rdx    0x0
    rdi    0x2
    rsi    0x7f3024d87830
    rbp    0x5602ee6c6e7c
    rsp    0x7f3024d87830
    r8     0x0
    r9     0x7f3024d87830
    r10    0x8
    r11    0x246
    r12    0x7f3018000ef0
    r13    0x0
    r14    0x5602ee6acd10
    r15    0x0
    rip    0x7f30277d9f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000062c00)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000062c00)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc00004b000, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc000073f01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc00008a300)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [syscall, locked to thread]:
    reflect.MakeSlice(0x1d4e220, 0x181c100, 0x0, 0x4, 0x181c100, 0x0, 0x0)
    	/usr/local/go/src/reflect/value.go:2299 +0x85
    encoding/json.(*decodeState).array(0xc000447600, 0x181c100, 0xc000455788, 0x197, 0xc000447628, 0x5b)
    	/usr/local/go/src/encoding/json/decode.go:547 +0x716
    encoding/json.(*decodeState).value(0xc000447600, 0x181c100, 0xc000455788, 0x197, 0x181c100, 0xc000455788)
    	/usr/local/go/src/encoding/json/decode.go:360 +0x105
    encoding/json.(*decodeState).object(0xc000447600, 0x1815520, 0xc000455680, 0x16, 0xc000447628, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000447600, 0x1815520, 0xc000455680, 0x16, 0xc0003cfbc8, 0x6fa34b)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc000447600, 0x1815520, 0xc000455680, 0xc000447628, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc00036ebd6, 0xc9, 0xb22a, 0x1815520, 0xc000455680, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000451200, 0xc00036ebd6, 0xc9, 0xb22a, 0x7f4269afc400, 0xc000451200)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0004469a0, 0x19ce1a0, 0xc000451200, 0x199, 0xc0004469c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0004469a0, 0x19ce1a0, 0xc000451200, 0x199, 0xc000455440, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004469a0, 0x18bc100, 0xc000450aa0, 0x195, 0xc0004469c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004469a0, 0x18bc100, 0xc000450aa0, 0x195, 0x18bc100, 0xc000450aa0)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004469a0, 0x1815520, 0xc000450900, 0x16, 0xc0004469c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004469a0, 0x1815520, 0xc000450900, 0x16, 0xc0003d0888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0004469a0, 0x1815520, 0xc000450900, 0xc0004469c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc00036e7b5, 0x9e1, 0xb64b, 0x1815520, 0xc000450900, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0003a0b40, 0xc00036e7b5, 0x9e1, 0xb64b, 0x7f4269afc400, 0xc0003a0b40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e4a50, 0x19ce1a0, 0xc0003a0b40, 0x199, 0xc0000e4a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e4a50, 0x19ce1a0, 0xc0003a0b40, 0x199, 0xc0004506c0, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e4a50, 0x18e59a0, 0xc000334ac8, 0x195, 0xc0000e4a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e4a50, 0x18e59a0, 0xc000334ac8, 0x195, 0x18e59a0, 0xc000334ac8)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e4a50, 0x1815520, 0xc000334900, 0x16, 0xc0000e4a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e4a50, 0x1815520, 0xc000334900, 0x16, 0xc000123548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e4a50, 0x1815520, 0xc000334900, 0xc0000e4a78, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc00036a000, 0x9d38, 0xfe00, 0x1815520, 0xc000334900, 0x7f4269cbe6a8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0003346c0, 0xc00036a000, 0x9d38, 0xfe00, 0x7f4269afc400, 0xc0003346c0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e49a0, 0x1a89300, 0xc0003346c0, 0x16, 0xc0000e49c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e49a0, 0x1a89300, 0xc0003346c0, 0x16, 0xc000123c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e49a0, 0x1a89300, 0xc0003346c0, 0xc0000e49c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc00036a000, 0x9d39, 0xfe00, 0x1a89300, 0xc0003346c0, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc00031db30, 0xc000123d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc00031da70, 0xc00031da40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 18 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7fc722f96f47 m=7 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7fc722f96f47
    stack: frame={sp:0x7fc71e3e0830, fp:0x0} stack=[0x7fc71dbe1288,0x7fc71e3e0e88)
    00007fc71e3e0730:  00007fc71e3e0af0  00007fc72357f75a 
    00007fc71e3e0740:  000000000000000b  0000000000000000 
    00007fc71e3e0750:  00007fc71cb9d700  0000559b977fd148 
    00007fc71e3e0760:  00007fc71e3e0c40  00007fc700000c50 
    00007fc71e3e0770:  0000000000000000  0000559b96cd9d10 
    00007fc71e3e0780:  0000000000000000  00007fc723577f13 
    00007fc71e3e0790:  0000000000000005  0000000000000000 
    00007fc71e3e07a0:  2525252525252525  2525252525252525 
    00007fc71e3e07b0:  00000000000000ff  0000000000000000 
    00007fc71e3e07c0:  00000000000000ff  0000000000000000 
    00007fc71e3e07d0:  000000000000ff00  0000000000000000 
    00007fc71e3e07e0:  0000559b965c049a <net.unixSocket+314>  0000559b972d8300 
    00007fc71e3e07f0:  0000000000000000  0000000000000000 
    00007fc71e3e0800:  0000000000000000  0000000000000000 
    00007fc71e3e0810:  0000000000000000  0000000000000000 
    00007fc71e3e0820:  20636f6c6c616d00  203a64656c696166 
    00007fc71e3e0830: <0000000000000000  0000000000000000 
    00007fc71e3e0840:  000000c0003b77c0  000000c000440000 
    00007fc71e3e0850:  0000000000000000  0000000000000000 
    00007fc71e3e0860:  0000000000000000  0000000000000000 
    00007fc71e3e0870:  0000000000000000  0000000000000000 
    00007fc71e3e0880:  0000000000000000  0000000000000000 
    00007fc71e3e0890:  0000000000000000  0000000000000000 
    00007fc71e3e08a0:  0000000000000000  0000000000000000 
    00007fc71e3e08b0:  fffffffe7fffffff  ffffffffffffffff 
    00007fc71e3e08c0:  ffffffffffffffff  ffffffffffffffff 
    00007fc71e3e08d0:  ffffffffffffffff  ffffffffffffffff 
    00007fc71e3e08e0:  ffffffffffffffff  ffffffffffffffff 
    00007fc71e3e08f0:  ffffffffffffffff  ffffffffffffffff 
    00007fc71e3e0900:  ffffffffffffffff  ffffffffffffffff 
    00007fc71e3e0910:  ffffffffffffffff  ffffffffffffffff 
    00007fc71e3e0920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7fc722f96f47
    stack: frame={sp:0x7fc71e3e0830, fp:0x0} stack=[0x7fc71dbe1288,0x7fc71e3e0e88)
    00007fc71e3e0730:  00007fc71e3e0af0  00007fc72357f75a 
    00007fc71e3e0740:  000000000000000b  0000000000000000 
    00007fc71e3e0750:  00007fc71cb9d700  0000559b977fd148 
    00007fc71e3e0760:  00007fc71e3e0c40  00007fc700000c50 
    00007fc71e3e0770:  0000000000000000  0000559b96cd9d10 
    00007fc71e3e0780:  0000000000000000  00007fc723577f13 
    00007fc71e3e0790:  0000000000000005  0000000000000000 
    00007fc71e3e07a0:  2525252525252525  2525252525252525 
    00007fc71e3e07b0:  00000000000000ff  0000000000000000 
    00007fc71e3e07c0:  00000000000000ff  0000000000000000 
    00007fc71e3e07d0:  000000000000ff00  0000000000000000 
    00007fc71e3e07e0:  0000559b965c049a <net.unixSocket+314>  0000559b972d8300 
    00007fc71e3e07f0:  0000000000000000  0000000000000000 
    00007fc71e3e0800:  0000000000000000  0000000000000000 
    00007fc71e3e0810:  0000000000000000  0000000000000000 
    00007fc71e3e0820:  20636f6c6c616d00  203a64656c696166 
    00007fc71e3e0830: <0000000000000000  0000000000000000 
    00007fc71e3e0840:  000000c0003b77c0  000000c000440000 
    00007fc71e3e0850:  0000000000000000  0000000000000000 
    00007fc71e3e0860:  0000000000000000  0000000000000000 
    00007fc71e3e0870:  0000000000000000  0000000000000000 
    00007fc71e3e0880:  0000000000000000  0000000000000000 
    00007fc71e3e0890:  0000000000000000  0000000000000000 
    00007fc71e3e08a0:  0000000000000000  0000000000000000 
    00007fc71e3e08b0:  fffffffe7fffffff  ffffffffffffffff 
    00007fc71e3e08c0:  ffffffffffffffff  ffffffffffffffff 
    00007fc71e3e08d0:  ffffffffffffffff  ffffffffffffffff 
    00007fc71e3e08e0:  ffffffffffffffff  ffffffffffffffff 
    00007fc71e3e08f0:  ffffffffffffffff  ffffffffffffffff 
    00007fc71e3e0900:  ffffffffffffffff  ffffffffffffffff 
    00007fc71e3e0910:  ffffffffffffffff  ffffffffffffffff 
    00007fc71e3e0920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [runnable]:
    github.com/snapcore/snapd/client.(*Client).do(0xc0003861c0, 0x559b96b2dee7, 0x3, 0x559b96b37d78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x559b97187f40, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:394 +0x2f9
    github.com/snapcore/snapd/client.(*Client).doSyncWithOpts(0xc0003861c0, 0x559b96b2dee7, 0x3, 0x559b96b37d78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x559b971239a0, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:492 +0xf6
    github.com/snapcore/snapd/client.(*Client).SysInfo(0xc0003861c0, 0x46, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/client/client.go:727 +0xd4
    main.maybeWaitForSecurityProfileRegeneration(0xc0003861c0, 0xc0003b77c0, 0xd)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:200 +0x1aa
    main.(*cmdRun).Execute(0xc000251eb8, 0xc0000a8160, 0x2, 0x3, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:240 +0x172
    main.main()
    	/build/snapd/parts/snapd-deb/build/cmd/snap/main.go:482 +0x581
    
    goroutine 19 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    rax    0x0
    rbx    0x7fc723344840
    rcx    0x7fc722f96f47
    rdx    0x0
    rdi    0x2
    rsi    0x7fc71e3e0830
    rbp    0x559b96cf3e7c
    rsp    0x7fc71e3e0830
    r8     0x0
    r9     0x7fc71e3e0830
    r10    0x8
    r11    0x246
    r12    0x7fc700000c50
    r13    0x0
    r14    0x559b96cd9d10
    r15    0x0
    rip    0x7fc722f96f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
