apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f1570306f47 m=5 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f1570306f47
    stack: frame={sp:0x7f156c8b2830, fp:0x0} stack=[0x7f156c0b3288,0x7f156c8b2e88)
    00007f156c8b2730:  00007f156c8b2af0  00007f15708ef75a 
    00007f156c8b2740:  000000000000000b  0000000000000000 
    00007f156c8b2750:  00007f15677fe700  000055dfe6307148 
    00007f156c8b2760:  00007f156c8b2c40  000055dfe7edf3f0 
    00007f156c8b2770:  0000000000000000  000055dfe57e3d10 
    00007f156c8b2780:  0000000000000000  00007f15708e7f13 
    00007f156c8b2790:  0000000000000005  0000000000000000 
    00007f156c8b27a0:  2525252525252525  2525252525252525 
    00007f156c8b27b0:  00000000000000ff  0000000000000000 
    00007f156c8b27c0:  00000000000000ff  0000000000000000 
    00007f156c8b27d0:  00007f155c000010  00007f155c000010 
    00007f156c8b27e0:  000000000000000e  000000000000000e 
    00007f156c8b27f0:  0000000000000000  0000000000000000 
    00007f156c8b2800:  ffffffffffffffff  ffffffffffffffff 
    00007f156c8b2810:  0000000400000004  0000000400000004 
    00007f156c8b2820:  20636f6c6c616d00  203a64656c696166 
    00007f156c8b2830: <0000000000000000  0000000000000000 
    00007f156c8b2840:  0000000000000000  0000000000000000 
    00007f156c8b2850:  0000000000000000  0000000000000000 
    00007f156c8b2860:  0000000000000000  0000000000000000 
    00007f156c8b2870:  0000000000000000  0000000000000000 
    00007f156c8b2880:  0000000000000000  0000000000000000 
    00007f156c8b2890:  0000000000000000  0000000000000000 
    00007f156c8b28a0:  0000000000000000  0000000000000000 
    00007f156c8b28b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f156c8b28c0:  ffffffffffffffff  ffffffffffffffff 
    00007f156c8b28d0:  ffffffffffffffff  ffffffffffffffff 
    00007f156c8b28e0:  ffffffffffffffff  ffffffffffffffff 
    00007f156c8b28f0:  ffffffffffffffff  ffffffffffffffff 
    00007f156c8b2900:  ffffffffffffffff  ffffffffffffffff 
    00007f156c8b2910:  ffffffffffffffff  ffffffffffffffff 
    00007f156c8b2920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f1570306f47
    stack: frame={sp:0x7f156c8b2830, fp:0x0} stack=[0x7f156c0b3288,0x7f156c8b2e88)
    00007f156c8b2730:  00007f156c8b2af0  00007f15708ef75a 
    00007f156c8b2740:  000000000000000b  0000000000000000 
    00007f156c8b2750:  00007f15677fe700  000055dfe6307148 
    00007f156c8b2760:  00007f156c8b2c40  000055dfe7edf3f0 
    00007f156c8b2770:  0000000000000000  000055dfe57e3d10 
    00007f156c8b2780:  0000000000000000  00007f15708e7f13 
    00007f156c8b2790:  0000000000000005  0000000000000000 
    00007f156c8b27a0:  2525252525252525  2525252525252525 
    00007f156c8b27b0:  00000000000000ff  0000000000000000 
    00007f156c8b27c0:  00000000000000ff  0000000000000000 
    00007f156c8b27d0:  00007f155c000010  00007f155c000010 
    00007f156c8b27e0:  000000000000000e  000000000000000e 
    00007f156c8b27f0:  0000000000000000  0000000000000000 
    00007f156c8b2800:  ffffffffffffffff  ffffffffffffffff 
    00007f156c8b2810:  0000000400000004  0000000400000004 
    00007f156c8b2820:  20636f6c6c616d00  203a64656c696166 
    00007f156c8b2830: <0000000000000000  0000000000000000 
    00007f156c8b2840:  0000000000000000  0000000000000000 
    00007f156c8b2850:  0000000000000000  0000000000000000 
    00007f156c8b2860:  0000000000000000  0000000000000000 
    00007f156c8b2870:  0000000000000000  0000000000000000 
    00007f156c8b2880:  0000000000000000  0000000000000000 
    00007f156c8b2890:  0000000000000000  0000000000000000 
    00007f156c8b28a0:  0000000000000000  0000000000000000 
    00007f156c8b28b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f156c8b28c0:  ffffffffffffffff  ffffffffffffffff 
    00007f156c8b28d0:  ffffffffffffffff  ffffffffffffffff 
    00007f156c8b28e0:  ffffffffffffffff  ffffffffffffffff 
    00007f156c8b28f0:  ffffffffffffffff  ffffffffffffffff 
    00007f156c8b2900:  ffffffffffffffff  ffffffffffffffff 
    00007f156c8b2910:  ffffffffffffffff  ffffffffffffffff 
    00007f156c8b2920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).parse(0xc00011c500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:277 +0xbc6
    text/template/parse.(*Tree).Parse(0xc00011c500, 0x55dfe5693440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001c4720, 0xc000142350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x55dfe56389b7, 0x4, 0x55dfe5693440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000142350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc00003d840, 0x55dfe5693440, 0x16c, 0x4, 0xc000109708, 0x55dfe6322760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 6 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 7 [runnable]:
    text/template/parse.(*lexer).run(0xc00014a630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:228
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7f15706b4840
    rcx    0x7f1570306f47
    rdx    0x0
    rdi    0x2
    rsi    0x7f156c8b2830
    rbp    0x55dfe57fde7c
    rsp    0x7f156c8b2830
    r8     0x0
    r9     0x7f156c8b2830
    r10    0x8
    r11    0x246
    r12    0x55dfe7edf3f0
    r13    0x0
    r14    0x55dfe57e3d10
    r15    0x0
    rip    0x7f1570306f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000188000)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000188000)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc000046000, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc00006df01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc00008a300)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [syscall, locked to thread]:
    reflect.mapassign(0x18bc100, 0xc000522ba0, 0xc00053a530, 0xc000535200)
    	/usr/local/go/src/runtime/map.go:1319 +0x3f
    reflect.Value.SetMapIndex(0x18bc100, 0xc000534aa0, 0x195, 0x1858200, 0xc00053a530, 0x98, 0x19ce1a0, 0xc000535200, 0x199)
    	/usr/local/go/src/reflect/value.go:1706 +0x27c
    encoding/json.(*decodeState).object(0xc000530420, 0x18bc100, 0xc000534aa0, 0x195, 0xc000530448, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:807 +0x8da
    encoding/json.(*decodeState).value(0xc000530420, 0x18bc100, 0xc000534aa0, 0x195, 0x18bc100, 0xc000534aa0)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000530420, 0x1815520, 0xc000534900, 0x16, 0xc000530448, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000530420, 0x1815520, 0xc000534900, 0x16, 0xc0004ce888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc000530420, 0x1815520, 0xc000534900, 0xc000530448, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc00046bdc7, 0x9ca, 0xc039, 0x1815520, 0xc000534900, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00049f200, 0xc00046bdc7, 0x9ca, 0xc039, 0x7f86a5974680, 0xc00049f200)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e4b00, 0x19ce1a0, 0xc00049f200, 0x199, 0xc0000e4b28, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e4b00, 0x19ce1a0, 0xc00049f200, 0x199, 0xc0005346c0, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e4b00, 0x18e59a0, 0xc000431188, 0x195, 0xc0000e4b28, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e4b00, 0x18e59a0, 0xc000431188, 0x195, 0x18e59a0, 0xc000431188)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e4b00, 0x1815520, 0xc000430fc0, 0x16, 0xc0000e4b28, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e4b00, 0x1815520, 0xc000430fc0, 0x16, 0xc000223548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e4b00, 0x1815520, 0xc000430fc0, 0xc0000e4b28, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000468000, 0x9d38, 0xfe00, 0x1815520, 0xc000430fc0, 0x7f86a5b76cb0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000430d80, 0xc000468000, 0x9d38, 0xfe00, 0x7f86a5974680, 0xc000430d80)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e4a50, 0x1a89300, 0xc000430d80, 0x16, 0xc0000e4a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e4a50, 0x1a89300, 0xc000430d80, 0x16, 0xc000223c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e4a50, 0x1a89300, 0xc000430d80, 0xc0000e4a78, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000468000, 0x9d39, 0xfe00, 0x1a89300, 0xc000430d80, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc00041bb30, 0xc000223d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc00041ba70, 0xc00041ba40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 18 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7fe3f9923f47 m=5 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7fe3f9923f47
    stack: frame={sp:0x7fe3f5ecf830, fp:0x0} stack=[0x7fe3f56d0288,0x7fe3f5ecfe88)
    00007fe3f5ecf730:  00007fe3f5ecfaf0  00007fe3f9f0c75a 
    00007fe3f5ecf740:  000000000000000b  0000000000000000 
    00007fe3f5ecf750:  00007fe3f4d6e700  000055c20bcc8148 
    00007fe3f5ecf760:  00007fe3f5ecfc40  000055c20d1453f0 
    00007fe3f5ecf770:  0000000000000000  000055c20b1a4d10 
    00007fe3f5ecf780:  0000000000000000  00007fe3f9f04f13 
    00007fe3f5ecf790:  0000000000000005  0000000000000000 
    00007fe3f5ecf7a0:  2525252525252525  2525252525252525 
    00007fe3f5ecf7b0:  00000000000000ff  0000000000000000 
    00007fe3f5ecf7c0:  00000000000000ff  0000000000000000 
    00007fe3f5ecf7d0:  00007fe3e0000010  00007fe3e0000010 
    00007fe3f5ecf7e0:  000000000000000e  000000000000000e 
    00007fe3f5ecf7f0:  0000000000000000  0000000000000000 
    00007fe3f5ecf800:  ffffffffffffffff  ffffffffffffffff 
    00007fe3f5ecf810:  0000000400000004  0000000400000004 
    00007fe3f5ecf820:  20636f6c6c616d00  203a64656c696166 
    00007fe3f5ecf830: <0000000000000000  0000000000000000 
    00007fe3f5ecf840:  0000000000000000  0000000000000000 
    00007fe3f5ecf850:  0000000000000000  0000000000000000 
    00007fe3f5ecf860:  0000000000000000  0000000000000000 
    00007fe3f5ecf870:  0000000000000000  0000000000000000 
    00007fe3f5ecf880:  0000000000000000  0000000000000000 
    00007fe3f5ecf890:  0000000000000000  0000000000000000 
    00007fe3f5ecf8a0:  0000000000000000  0000000000000000 
    00007fe3f5ecf8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007fe3f5ecf8c0:  ffffffffffffffff  ffffffffffffffff 
    00007fe3f5ecf8d0:  ffffffffffffffff  ffffffffffffffff 
    00007fe3f5ecf8e0:  ffffffffffffffff  ffffffffffffffff 
    00007fe3f5ecf8f0:  ffffffffffffffff  ffffffffffffffff 
    00007fe3f5ecf900:  ffffffffffffffff  ffffffffffffffff 
    00007fe3f5ecf910:  ffffffffffffffff  ffffffffffffffff 
    00007fe3f5ecf920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7fe3f9923f47
    stack: frame={sp:0x7fe3f5ecf830, fp:0x0} stack=[0x7fe3f56d0288,0x7fe3f5ecfe88)
    00007fe3f5ecf730:  00007fe3f5ecfaf0  00007fe3f9f0c75a 
    00007fe3f5ecf740:  000000000000000b  0000000000000000 
    00007fe3f5ecf750:  00007fe3f4d6e700  000055c20bcc8148 
    00007fe3f5ecf760:  00007fe3f5ecfc40  000055c20d1453f0 
    00007fe3f5ecf770:  0000000000000000  000055c20b1a4d10 
    00007fe3f5ecf780:  0000000000000000  00007fe3f9f04f13 
    00007fe3f5ecf790:  0000000000000005  0000000000000000 
    00007fe3f5ecf7a0:  2525252525252525  2525252525252525 
    00007fe3f5ecf7b0:  00000000000000ff  0000000000000000 
    00007fe3f5ecf7c0:  00000000000000ff  0000000000000000 
    00007fe3f5ecf7d0:  00007fe3e0000010  00007fe3e0000010 
    00007fe3f5ecf7e0:  000000000000000e  000000000000000e 
    00007fe3f5ecf7f0:  0000000000000000  0000000000000000 
    00007fe3f5ecf800:  ffffffffffffffff  ffffffffffffffff 
    00007fe3f5ecf810:  0000000400000004  0000000400000004 
    00007fe3f5ecf820:  20636f6c6c616d00  203a64656c696166 
    00007fe3f5ecf830: <0000000000000000  0000000000000000 
    00007fe3f5ecf840:  0000000000000000  0000000000000000 
    00007fe3f5ecf850:  0000000000000000  0000000000000000 
    00007fe3f5ecf860:  0000000000000000  0000000000000000 
    00007fe3f5ecf870:  0000000000000000  0000000000000000 
    00007fe3f5ecf880:  0000000000000000  0000000000000000 
    00007fe3f5ecf890:  0000000000000000  0000000000000000 
    00007fe3f5ecf8a0:  0000000000000000  0000000000000000 
    00007fe3f5ecf8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007fe3f5ecf8c0:  ffffffffffffffff  ffffffffffffffff 
    00007fe3f5ecf8d0:  ffffffffffffffff  ffffffffffffffff 
    00007fe3f5ecf8e0:  ffffffffffffffff  ffffffffffffffff 
    00007fe3f5ecf8f0:  ffffffffffffffff  ffffffffffffffff 
    00007fe3f5ecf900:  ffffffffffffffff  ffffffffffffffff 
    00007fe3f5ecf910:  ffffffffffffffff  ffffffffffffffff 
    00007fe3f5ecf920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).parse(0xc00012c500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:277 +0xbc6
    text/template/parse.(*Tree).Parse(0xc00012c500, 0x55c20b054440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001d66f0, 0xc000152340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x55c20aff99b7, 0x4, 0x55c20b054440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000152340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc0000cd780, 0x55c20b054440, 0x16c, 0x4, 0xc0001195e8, 0x55c20bce3760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 19 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 20 [runnable]:
    text/template/parse.(*lexer).run(0xc00015a630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:228
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7fe3f9cd1840
    rcx    0x7fe3f9923f47
    rdx    0x0
    rdi    0x2
    rsi    0x7fe3f5ecf830
    rbp    0x55c20b1bee7c
    rsp    0x7fe3f5ecf830
    r8     0x0
    r9     0x7fe3f5ecf830
    r10    0x8
    r11    0x246
    r12    0x55c20d1453f0
    r13    0x0
    r14    0x55c20b1a4d10
    r15    0x0
    rip    0x7fe3f9923f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
