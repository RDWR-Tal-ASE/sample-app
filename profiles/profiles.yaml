apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f610fe3df47 m=3 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f610fe3df47
    stack: frame={sp:0x7f610d3eb830, fp:0x0} stack=[0x7f610cbec288,0x7f610d3ebe88)
    00007f610d3eb730:  00007f610d3ebaf0  00007f611042675a 
    00007f610d3eb740:  000000000000000b  0000000000000000 
    00007f610d3eb750:  00007f6106ffd700  0000556ff0b83148 
    00007f610d3eb760:  00007f610d3ebc40  00007f6100000c50 
    00007f610d3eb770:  0000000000000000  0000556ff005fd10 
    00007f610d3eb780:  0000000000000000  00007f611041ef13 
    00007f610d3eb790:  0000000000000005  0000000000000000 
    00007f610d3eb7a0:  2525252525252525  2525252525252525 
    00007f610d3eb7b0:  00000000000000ff  0000000000000000 
    00007f610d3eb7c0:  00000000000000ff  0000000000000000 
    00007f610d3eb7d0:  00007f6100000010  00007f6100000010 
    00007f610d3eb7e0:  000000000000000e  000000000000000e 
    00007f610d3eb7f0:  0000000000000000  0000000000000000 
    00007f610d3eb800:  ffffffffffffffff  ffffffffffffffff 
    00007f610d3eb810:  0000000400000004  0000000400000004 
    00007f610d3eb820:  20636f6c6c616d00  203a64656c696166 
    00007f610d3eb830: <0000000000000000  0000000000000000 
    00007f610d3eb840:  0000000000000000  0000000000000000 
    00007f610d3eb850:  0000000000000000  0000000000000000 
    00007f610d3eb860:  0000000000000000  0000000000000000 
    00007f610d3eb870:  0000000000000000  0000000000000000 
    00007f610d3eb880:  0000000000000000  0000000000000000 
    00007f610d3eb890:  0000000000000000  0000000000000000 
    00007f610d3eb8a0:  0000000000000000  0000000000000000 
    00007f610d3eb8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f610d3eb8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f610d3eb8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f610d3eb8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f610d3eb8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f610d3eb900:  ffffffffffffffff  ffffffffffffffff 
    00007f610d3eb910:  ffffffffffffffff  ffffffffffffffff 
    00007f610d3eb920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f610fe3df47
    stack: frame={sp:0x7f610d3eb830, fp:0x0} stack=[0x7f610cbec288,0x7f610d3ebe88)
    00007f610d3eb730:  00007f610d3ebaf0  00007f611042675a 
    00007f610d3eb740:  000000000000000b  0000000000000000 
    00007f610d3eb750:  00007f6106ffd700  0000556ff0b83148 
    00007f610d3eb760:  00007f610d3ebc40  00007f6100000c50 
    00007f610d3eb770:  0000000000000000  0000556ff005fd10 
    00007f610d3eb780:  0000000000000000  00007f611041ef13 
    00007f610d3eb790:  0000000000000005  0000000000000000 
    00007f610d3eb7a0:  2525252525252525  2525252525252525 
    00007f610d3eb7b0:  00000000000000ff  0000000000000000 
    00007f610d3eb7c0:  00000000000000ff  0000000000000000 
    00007f610d3eb7d0:  00007f6100000010  00007f6100000010 
    00007f610d3eb7e0:  000000000000000e  000000000000000e 
    00007f610d3eb7f0:  0000000000000000  0000000000000000 
    00007f610d3eb800:  ffffffffffffffff  ffffffffffffffff 
    00007f610d3eb810:  0000000400000004  0000000400000004 
    00007f610d3eb820:  20636f6c6c616d00  203a64656c696166 
    00007f610d3eb830: <0000000000000000  0000000000000000 
    00007f610d3eb840:  0000000000000000  0000000000000000 
    00007f610d3eb850:  0000000000000000  0000000000000000 
    00007f610d3eb860:  0000000000000000  0000000000000000 
    00007f610d3eb870:  0000000000000000  0000000000000000 
    00007f610d3eb880:  0000000000000000  0000000000000000 
    00007f610d3eb890:  0000000000000000  0000000000000000 
    00007f610d3eb8a0:  0000000000000000  0000000000000000 
    00007f610d3eb8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f610d3eb8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f610d3eb8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f610d3eb8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f610d3eb8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f610d3eb900:  ffffffffffffffff  ffffffffffffffff 
    00007f610d3eb910:  ffffffffffffffff  ffffffffffffffff 
    00007f610d3eb920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).parse(0xc00012c500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:277 +0xbc6
    text/template/parse.(*Tree).Parse(0xc00012c500, 0x556feff0f440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001d66f0, 0xc000152340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x556fefeb49b7, 0x4, 0x556feff0f440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000152340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc0000cd780, 0x556feff0f440, 0x16c, 0x4, 0xc000119708, 0x556ff0b9e760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 19 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 20 [runnable]:
    text/template/parse.(*lexer).run(0xc00015a630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:228
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7f61101eb840
    rcx    0x7f610fe3df47
    rdx    0x0
    rdi    0x2
    rsi    0x7f610d3eb830
    rbp    0x556ff0079e7c
    rsp    0x7f610d3eb830
    r8     0x0
    r9     0x7f610d3eb830
    r10    0x8
    r11    0x246
    r12    0x7f6100000c50
    r13    0x0
    r14    0x556ff005fd10
    r15    0x0
    rip    0x7f610fe3df47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000088400)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000088400)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc00004b000, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc000099f01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc000001080)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [syscall, locked to thread]:
    reflect.mapassign(0x18bc100, 0xc000475830, 0xc00048f0d0, 0xc0004a4240)
    	/usr/local/go/src/runtime/map.go:1319 +0x3f
    reflect.Value.SetMapIndex(0x18bc100, 0xc00049da60, 0x195, 0x1858200, 0xc00048f0d0, 0x98, 0x19ce1a0, 0xc0004a4240, 0x199)
    	/usr/local/go/src/reflect/value.go:1706 +0x27c
    encoding/json.(*decodeState).object(0xc0004989a0, 0x18bc100, 0xc00049da60, 0x195, 0xc0004989c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:807 +0x8da
    encoding/json.(*decodeState).value(0xc0004989a0, 0x18bc100, 0xc00049da60, 0x195, 0x18bc100, 0xc00049da60)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004989a0, 0x1815520, 0xc00049d8c0, 0x16, 0xc0004989c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004989a0, 0x1815520, 0xc00049d8c0, 0x16, 0xc000422888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0004989a0, 0x1815520, 0xc00049d8c0, 0xc0004989c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003c07b5, 0x9e1, 0xb64b, 0x1815520, 0xc00049d8c0, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0003f1b00, 0xc0003c07b5, 0x9e1, 0xb64b, 0x7f00d181fb00, 0xc0003f1b00)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc000136a50, 0x19ce1a0, 0xc0003f1b00, 0x199, 0xc000136a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc000136a50, 0x19ce1a0, 0xc0003f1b00, 0x199, 0xc00049d680, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000136a50, 0x18e59a0, 0xc000379a88, 0x195, 0xc000136a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000136a50, 0x18e59a0, 0xc000379a88, 0x195, 0x18e59a0, 0xc000379a88)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000136a50, 0x1815520, 0xc0003798c0, 0x16, 0xc000136a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000136a50, 0x1815520, 0xc0003798c0, 0x16, 0xc000173548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc000136a50, 0x1815520, 0xc0003798c0, 0xc000136a78, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003bc000, 0x9d38, 0xfe00, 0x1815520, 0xc0003798c0, 0x7f00d1880810, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000379680, 0xc0003bc000, 0x9d38, 0xfe00, 0x7f00d181fb00, 0xc000379680)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0001369a0, 0x1a89300, 0xc000379680, 0x16, 0xc0001369c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0001369a0, 0x1a89300, 0xc000379680, 0x16, 0xc000173c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0001369a0, 0x1a89300, 0xc000379680, 0xc0001369c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003bc000, 0x9d39, 0xfe00, 0x1a89300, 0xc000379680, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc000371b30, 0xc000173d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc000371a70, 0xc000371a40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 6 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f8ba0f42f47 m=5 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f8ba0f42f47
    stack: frame={sp:0x7f8b9dcef830, fp:0x0} stack=[0x7f8b9d4f0288,0x7f8b9dcefe88)
    00007f8b9dcef730:  00007f8b9dcefaf0  00007f8ba152b75a 
    00007f8b9dcef740:  000000000000000b  0000000000000000 
    00007f8b9dcef750:  00007f8b9cb8e700  0000560137cb7148 
    00007f8b9dcef760:  00007f8b9dcefc40  000056013944e3f0 
    00007f8b9dcef770:  0000000000000000  0000560137193d10 
    00007f8b9dcef780:  0000000000000000  00007f8ba1523f13 
    00007f8b9dcef790:  0000000000000005  0000000000000000 
    00007f8b9dcef7a0:  2525252525252525  2525252525252525 
    00007f8b9dcef7b0:  00000000000000ff  0000000000000000 
    00007f8b9dcef7c0:  00000000000000ff  0000000000000000 
    00007f8b9dcef7d0:  00007f8b80000010  00007f8b80000010 
    00007f8b9dcef7e0:  000000000000000e  000000000000000e 
    00007f8b9dcef7f0:  0000000000000000  0000000000000000 
    00007f8b9dcef800:  ffffffffffffffff  ffffffffffffffff 
    00007f8b9dcef810:  0000000400000004  0000000400000004 
    00007f8b9dcef820:  20636f6c6c616d00  203a64656c696166 
    00007f8b9dcef830: <0000000000000000  0000000000000000 
    00007f8b9dcef840:  0000000000000000  0000000000000000 
    00007f8b9dcef850:  0000000000000000  0000000000000000 
    00007f8b9dcef860:  0000000000000000  0000000000000000 
    00007f8b9dcef870:  0000000000000000  0000000000000000 
    00007f8b9dcef880:  0000000000000000  0000000000000000 
    00007f8b9dcef890:  0000000000000000  0000000000000000 
    00007f8b9dcef8a0:  0000000000000000  0000000000000000 
    00007f8b9dcef8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f8b9dcef8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f8b9dcef8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f8b9dcef8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f8b9dcef8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f8b9dcef900:  ffffffffffffffff  ffffffffffffffff 
    00007f8b9dcef910:  ffffffffffffffff  ffffffffffffffff 
    00007f8b9dcef920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f8ba0f42f47
    stack: frame={sp:0x7f8b9dcef830, fp:0x0} stack=[0x7f8b9d4f0288,0x7f8b9dcefe88)
    00007f8b9dcef730:  00007f8b9dcefaf0  00007f8ba152b75a 
    00007f8b9dcef740:  000000000000000b  0000000000000000 
    00007f8b9dcef750:  00007f8b9cb8e700  0000560137cb7148 
    00007f8b9dcef760:  00007f8b9dcefc40  000056013944e3f0 
    00007f8b9dcef770:  0000000000000000  0000560137193d10 
    00007f8b9dcef780:  0000000000000000  00007f8ba1523f13 
    00007f8b9dcef790:  0000000000000005  0000000000000000 
    00007f8b9dcef7a0:  2525252525252525  2525252525252525 
    00007f8b9dcef7b0:  00000000000000ff  0000000000000000 
    00007f8b9dcef7c0:  00000000000000ff  0000000000000000 
    00007f8b9dcef7d0:  00007f8b80000010  00007f8b80000010 
    00007f8b9dcef7e0:  000000000000000e  000000000000000e 
    00007f8b9dcef7f0:  0000000000000000  0000000000000000 
    00007f8b9dcef800:  ffffffffffffffff  ffffffffffffffff 
    00007f8b9dcef810:  0000000400000004  0000000400000004 
    00007f8b9dcef820:  20636f6c6c616d00  203a64656c696166 
    00007f8b9dcef830: <0000000000000000  0000000000000000 
    00007f8b9dcef840:  0000000000000000  0000000000000000 
    00007f8b9dcef850:  0000000000000000  0000000000000000 
    00007f8b9dcef860:  0000000000000000  0000000000000000 
    00007f8b9dcef870:  0000000000000000  0000000000000000 
    00007f8b9dcef880:  0000000000000000  0000000000000000 
    00007f8b9dcef890:  0000000000000000  0000000000000000 
    00007f8b9dcef8a0:  0000000000000000  0000000000000000 
    00007f8b9dcef8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f8b9dcef8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f8b9dcef8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f8b9dcef8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f8b9dcef8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f8b9dcef900:  ffffffffffffffff  ffffffffffffffff 
    00007f8b9dcef910:  ffffffffffffffff  ffffffffffffffff 
    00007f8b9dcef920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).parse(0xc00012c500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:277 +0xbc6
    text/template/parse.(*Tree).Parse(0xc00012c500, 0x560137043440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001d66f0, 0xc000152340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x560136fe89b7, 0x4, 0x560137043440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000152340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc0000cd780, 0x560137043440, 0x16c, 0x4, 0xc0001195e8, 0x560137cd2760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 19 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 20 [runnable]:
    text/template/parse.(*lexer).run(0xc00015a630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:228
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7f8ba12f0840
    rcx    0x7f8ba0f42f47
    rdx    0x0
    rdi    0x2
    rsi    0x7f8b9dcef830
    rbp    0x5601371ade7c
    rsp    0x7f8b9dcef830
    r8     0x0
    r9     0x7f8b9dcef830
    r10    0x8
    r11    0x246
    r12    0x56013944e3f0
    r13    0x0
    r14    0x560137193d10
    r15    0x0
    rip    0x7f8ba0f42f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
