apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7ff7fb29ff47 m=5 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7ff7fb29ff47
    stack: frame={sp:0x7ff7f37fd830, fp:0x0} stack=[0x7ff7f2ffe288,0x7ff7f37fde88)
    00007ff7f37fd730:  00007ff7f37fdaf0  00007ff7fb88875a 
    00007ff7f37fd740:  000000000000000b  0000000000000000 
    00007ff7f37fd750:  00007ff7f269c700  00005633f8fd1148 
    00007ff7f37fd760:  00007ff7f37fdc40  00005633f9c853f0 
    00007ff7f37fd770:  0000000000000000  00005633f84add10 
    00007ff7f37fd780:  0000000000000000  00007ff7fb880f13 
    00007ff7f37fd790:  0000000000000005  0000000000000000 
    00007ff7f37fd7a0:  2525252525252525  2525252525252525 
    00007ff7f37fd7b0:  00000000000000ff  0000000000000000 
    00007ff7f37fd7c0:  00000000000000ff  0000000000000000 
    00007ff7f37fd7d0:  00007ff7e0000010  00007ff7e0000010 
    00007ff7f37fd7e0:  000000000000000e  000000000000000e 
    00007ff7f37fd7f0:  0000000000000000  0000000000000000 
    00007ff7f37fd800:  ffffffffffffffff  ffffffffffffffff 
    00007ff7f37fd810:  0000000400000004  0000000400000004 
    00007ff7f37fd820:  20636f6c6c616d00  203a64656c696166 
    00007ff7f37fd830: <0000000000000000  0000000000000000 
    00007ff7f37fd840:  0000000000000000  0000000000000000 
    00007ff7f37fd850:  0000000000000000  0000000000000000 
    00007ff7f37fd860:  0000000000000000  0000000000000000 
    00007ff7f37fd870:  0000000000000000  0000000000000000 
    00007ff7f37fd880:  0000000000000000  0000000000000000 
    00007ff7f37fd890:  0000000000000000  0000000000000000 
    00007ff7f37fd8a0:  0000000000000000  0000000000000000 
    00007ff7f37fd8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007ff7f37fd8c0:  ffffffffffffffff  ffffffffffffffff 
    00007ff7f37fd8d0:  ffffffffffffffff  ffffffffffffffff 
    00007ff7f37fd8e0:  ffffffffffffffff  ffffffffffffffff 
    00007ff7f37fd8f0:  ffffffffffffffff  ffffffffffffffff 
    00007ff7f37fd900:  ffffffffffffffff  ffffffffffffffff 
    00007ff7f37fd910:  ffffffffffffffff  ffffffffffffffff 
    00007ff7f37fd920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7ff7fb29ff47
    stack: frame={sp:0x7ff7f37fd830, fp:0x0} stack=[0x7ff7f2ffe288,0x7ff7f37fde88)
    00007ff7f37fd730:  00007ff7f37fdaf0  00007ff7fb88875a 
    00007ff7f37fd740:  000000000000000b  0000000000000000 
    00007ff7f37fd750:  00007ff7f269c700  00005633f8fd1148 
    00007ff7f37fd760:  00007ff7f37fdc40  00005633f9c853f0 
    00007ff7f37fd770:  0000000000000000  00005633f84add10 
    00007ff7f37fd780:  0000000000000000  00007ff7fb880f13 
    00007ff7f37fd790:  0000000000000005  0000000000000000 
    00007ff7f37fd7a0:  2525252525252525  2525252525252525 
    00007ff7f37fd7b0:  00000000000000ff  0000000000000000 
    00007ff7f37fd7c0:  00000000000000ff  0000000000000000 
    00007ff7f37fd7d0:  00007ff7e0000010  00007ff7e0000010 
    00007ff7f37fd7e0:  000000000000000e  000000000000000e 
    00007ff7f37fd7f0:  0000000000000000  0000000000000000 
    00007ff7f37fd800:  ffffffffffffffff  ffffffffffffffff 
    00007ff7f37fd810:  0000000400000004  0000000400000004 
    00007ff7f37fd820:  20636f6c6c616d00  203a64656c696166 
    00007ff7f37fd830: <0000000000000000  0000000000000000 
    00007ff7f37fd840:  0000000000000000  0000000000000000 
    00007ff7f37fd850:  0000000000000000  0000000000000000 
    00007ff7f37fd860:  0000000000000000  0000000000000000 
    00007ff7f37fd870:  0000000000000000  0000000000000000 
    00007ff7f37fd880:  0000000000000000  0000000000000000 
    00007ff7f37fd890:  0000000000000000  0000000000000000 
    00007ff7f37fd8a0:  0000000000000000  0000000000000000 
    00007ff7f37fd8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007ff7f37fd8c0:  ffffffffffffffff  ffffffffffffffff 
    00007ff7f37fd8d0:  ffffffffffffffff  ffffffffffffffff 
    00007ff7f37fd8e0:  ffffffffffffffff  ffffffffffffffff 
    00007ff7f37fd8f0:  ffffffffffffffff  ffffffffffffffff 
    00007ff7f37fd900:  ffffffffffffffff  ffffffffffffffff 
    00007ff7f37fd910:  ffffffffffffffff  ffffffffffffffff 
    00007ff7f37fd920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).parse(0xc00012c500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:277 +0xbc6
    text/template/parse.(*Tree).Parse(0xc00012c500, 0x5633f835d440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001d66f0, 0xc000152340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x5633f83029b7, 0x4, 0x5633f835d440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000152340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc0000cd780, 0x5633f835d440, 0x16c, 0x4, 0xc0001195e8, 0x5633f8fec760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 19 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 20 [runnable]:
    text/template/parse.(*lexer).run(0xc00015a630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:228
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7ff7fb64d840
    rcx    0x7ff7fb29ff47
    rdx    0x0
    rdi    0x2
    rsi    0x7ff7f37fd830
    rbp    0x5633f84c7e7c
    rsp    0x7ff7f37fd830
    r8     0x0
    r9     0x7ff7f37fd830
    r10    0x8
    r11    0x246
    r12    0x5633f9c853f0
    r13    0x0
    r14    0x5633f84add10
    r15    0x0
    rip    0x7ff7fb29ff47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000408000)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000408000)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc000048800, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc00006df01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc000000c00)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [syscall, locked to thread]:
    reflect.mapassign(0x18bc100, 0xc0004f7830, 0xc000510f40, 0xc000526480)
    	/usr/local/go/src/runtime/map.go:1319 +0x3f
    reflect.Value.SetMapIndex(0x18bc100, 0xc00051fca0, 0x195, 0x1858200, 0xc000510f40, 0x98, 0x19ce1a0, 0xc000526480, 0x199)
    	/usr/local/go/src/reflect/value.go:1706 +0x27c
    encoding/json.(*decodeState).object(0xc00051a840, 0x18bc100, 0xc00051fca0, 0x195, 0xc00051a868, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:807 +0x8da
    encoding/json.(*decodeState).value(0xc00051a840, 0x18bc100, 0xc00051fca0, 0x195, 0x18bc100, 0xc00051fca0)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc00051a840, 0x1815520, 0xc00051fb00, 0x16, 0xc00051a868, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc00051a840, 0x1815520, 0xc00051fb00, 0x16, 0xc0004a2888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc00051a840, 0x1815520, 0xc00051fb00, 0xc00051a868, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003c27b5, 0x9e1, 0xb64b, 0x1815520, 0xc00051fb00, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0003efd40, 0xc0003c27b5, 0x9e1, 0xb64b, 0x7ff7e9195b00, 0xc0003efd40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0001368f0, 0x19ce1a0, 0xc0003efd40, 0x199, 0xc000136918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0001368f0, 0x19ce1a0, 0xc0003efd40, 0x199, 0xc00051f8c0, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0001368f0, 0x18e59a0, 0xc000375cc8, 0x195, 0xc000136918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0001368f0, 0x18e59a0, 0xc000375cc8, 0x195, 0x18e59a0, 0xc000375cc8)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0001368f0, 0x1815520, 0xc000375b00, 0x16, 0xc000136918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0001368f0, 0x1815520, 0xc000375b00, 0x16, 0xc000173548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0001368f0, 0x1815520, 0xc000375b00, 0xc000136918, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003be000, 0x9d38, 0xfe00, 0x1815520, 0xc000375b00, 0x7ff7e91f6858, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0003758c0, 0xc0003be000, 0x9d38, 0xfe00, 0x7ff7e9195b00, 0xc0003758c0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc000136840, 0x1a89300, 0xc0003758c0, 0x16, 0xc000136868, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc000136840, 0x1a89300, 0xc0003758c0, 0x16, 0xc000173c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc000136840, 0x1a89300, 0xc0003758c0, 0xc000136868, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003be000, 0x9d39, 0xfe00, 0x1a89300, 0xc0003758c0, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc00036fb30, 0xc000173d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc00036fa70, 0xc00036fa40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 6 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7ffa2e0a7f47 m=3 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7ffa2e0a7f47
    stack: frame={sp:0x7ffa2b655830, fp:0x0} stack=[0x7ffa2ae56288,0x7ffa2b655e88)
    00007ffa2b655730:  00007ffa2b655af0  00007ffa2e69075a 
    00007ffa2b655740:  000000000000000b  0000000000000000 
    00007ffa2b655750:  00007ffa29652700  0000558d2001a148 
    00007ffa2b655760:  00007ffa2b655c40  0000558d2186f3f0 
    00007ffa2b655770:  0000000000000000  0000558d1f4f6d10 
    00007ffa2b655780:  0000000000000000  00007ffa2e688f13 
    00007ffa2b655790:  0000000000000005  0000000000000000 
    00007ffa2b6557a0:  2525252525252525  2525252525252525 
    00007ffa2b6557b0:  00000000000000ff  0000000000000000 
    00007ffa2b6557c0:  00000000000000ff  0000000000000000 
    00007ffa2b6557d0:  00007ffa14000010  00007ffa14000010 
    00007ffa2b6557e0:  000000000000000e  000000000000000e 
    00007ffa2b6557f0:  0000000000000000  0000000000000000 
    00007ffa2b655800:  ffffffffffffffff  ffffffffffffffff 
    00007ffa2b655810:  0000000400000004  0000000400000004 
    00007ffa2b655820:  20636f6c6c616d00  203a64656c696166 
    00007ffa2b655830: <0000000000000000  0000000000000000 
    00007ffa2b655840:  0000000000000000  0000000000000000 
    00007ffa2b655850:  0000000000000000  0000000000000000 
    00007ffa2b655860:  0000000000000000  0000000000000000 
    00007ffa2b655870:  0000000000000000  0000000000000000 
    00007ffa2b655880:  0000000000000000  0000000000000000 
    00007ffa2b655890:  0000000000000000  0000000000000000 
    00007ffa2b6558a0:  0000000000000000  0000000000000000 
    00007ffa2b6558b0:  fffffffe7fffffff  ffffffffffffffff 
    00007ffa2b6558c0:  ffffffffffffffff  ffffffffffffffff 
    00007ffa2b6558d0:  ffffffffffffffff  ffffffffffffffff 
    00007ffa2b6558e0:  ffffffffffffffff  ffffffffffffffff 
    00007ffa2b6558f0:  ffffffffffffffff  ffffffffffffffff 
    00007ffa2b655900:  ffffffffffffffff  ffffffffffffffff 
    00007ffa2b655910:  ffffffffffffffff  ffffffffffffffff 
    00007ffa2b655920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7ffa2e0a7f47
    stack: frame={sp:0x7ffa2b655830, fp:0x0} stack=[0x7ffa2ae56288,0x7ffa2b655e88)
    00007ffa2b655730:  00007ffa2b655af0  00007ffa2e69075a 
    00007ffa2b655740:  000000000000000b  0000000000000000 
    00007ffa2b655750:  00007ffa29652700  0000558d2001a148 
    00007ffa2b655760:  00007ffa2b655c40  0000558d2186f3f0 
    00007ffa2b655770:  0000000000000000  0000558d1f4f6d10 
    00007ffa2b655780:  0000000000000000  00007ffa2e688f13 
    00007ffa2b655790:  0000000000000005  0000000000000000 
    00007ffa2b6557a0:  2525252525252525  2525252525252525 
    00007ffa2b6557b0:  00000000000000ff  0000000000000000 
    00007ffa2b6557c0:  00000000000000ff  0000000000000000 
    00007ffa2b6557d0:  00007ffa14000010  00007ffa14000010 
    00007ffa2b6557e0:  000000000000000e  000000000000000e 
    00007ffa2b6557f0:  0000000000000000  0000000000000000 
    00007ffa2b655800:  ffffffffffffffff  ffffffffffffffff 
    00007ffa2b655810:  0000000400000004  0000000400000004 
    00007ffa2b655820:  20636f6c6c616d00  203a64656c696166 
    00007ffa2b655830: <0000000000000000  0000000000000000 
    00007ffa2b655840:  0000000000000000  0000000000000000 
    00007ffa2b655850:  0000000000000000  0000000000000000 
    00007ffa2b655860:  0000000000000000  0000000000000000 
    00007ffa2b655870:  0000000000000000  0000000000000000 
    00007ffa2b655880:  0000000000000000  0000000000000000 
    00007ffa2b655890:  0000000000000000  0000000000000000 
    00007ffa2b6558a0:  0000000000000000  0000000000000000 
    00007ffa2b6558b0:  fffffffe7fffffff  ffffffffffffffff 
    00007ffa2b6558c0:  ffffffffffffffff  ffffffffffffffff 
    00007ffa2b6558d0:  ffffffffffffffff  ffffffffffffffff 
    00007ffa2b6558e0:  ffffffffffffffff  ffffffffffffffff 
    00007ffa2b6558f0:  ffffffffffffffff  ffffffffffffffff 
    00007ffa2b655900:  ffffffffffffffff  ffffffffffffffff 
    00007ffa2b655910:  ffffffffffffffff  ffffffffffffffff 
    00007ffa2b655920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).parse(0xc00010e500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:277 +0xbc6
    text/template/parse.(*Tree).Parse(0xc00010e500, 0x558d1f3a6440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001b6720, 0xc000134350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x558d1f34b9b7, 0x4, 0x558d1f3a6440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000134350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc00003d840, 0x558d1f3a6440, 0x16c, 0x4, 0xc0000fb708, 0x558d20035760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 6 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 7 [runnable]:
    text/template/parse.(*lexer).run(0xc00013c630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:228
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7ffa2e455840
    rcx    0x7ffa2e0a7f47
    rdx    0x0
    rdi    0x2
    rsi    0x7ffa2b655830
    rbp    0x558d1f510e7c
    rsp    0x7ffa2b655830
    r8     0x0
    r9     0x7ffa2b655830
    r10    0x8
    r11    0x246
    r12    0x558d2186f3f0
    r13    0x0
    r14    0x558d1f4f6d10
    r15    0x0
    rip    0x7ffa2e0a7f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
