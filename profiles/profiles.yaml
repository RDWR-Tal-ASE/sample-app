apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    Error: bad file '-': yaml: line 11: mapping values are not allowed in this context
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 8 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc0004c4000)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc0004c4000)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc000052800, 0x7)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0x426301)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc0002f9c80)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [runnable, locked to thread]:
    encoding/json.(*decodeState).literalInterface(0xc0005b6d10, 0x1, 0x79d)
    	/usr/local/go/src/encoding/json/decode.go:1142 +0x226
    encoding/json.(*decodeState).valueInterface(0xc0005b6d10, 0x9, 0x4)
    	/usr/local/go/src/encoding/json/decode.go:1040 +0xe5
    encoding/json.(*decodeState).objectInterface(0xc0005b6d10, 0x2)
    	/usr/local/go/src/encoding/json/decode.go:1104 +0x169
    encoding/json.(*decodeState).valueInterface(0xc0005b6d10, 0x9, 0x7)
    	/usr/local/go/src/encoding/json/decode.go:1037 +0xb6
    encoding/json.(*decodeState).objectInterface(0xc0005b6d10, 0xc000075b70)
    	/usr/local/go/src/encoding/json/decode.go:1104 +0x169
    encoding/json.(*decodeState).object(0xc0005b6d10, 0x1897a80, 0xc000075b70, 0x194, 0xc0005b6d38, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:621 +0x1e9e
    encoding/json.(*decodeState).value(0xc0005b6d10, 0x1897a80, 0xc000075b70, 0x194, 0xc000075c00, 0x94)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0005b6d10, 0x1811e60, 0xc00000e198, 0x16, 0xc0005b6d38, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0005b6d10, 0x1811e60, 0xc00000e198, 0x16, 0xc000446888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0005b6d10, 0x1811e60, 0xc00000e198, 0xc0005b6d38, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003e71b6, 0x94a, 0xac4a, 0x1811e60, 0xc00000e198, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000417440, 0xc0003e71b6, 0x94a, 0xac4a, 0x7f575477adc0, 0xc000417440)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:565 +0x18b
    encoding/json.(*decodeState).object(0xc00015ca50, 0x19ce1a0, 0xc000417440, 0x199, 0xc00015ca78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc00015ca50, 0x19ce1a0, 0xc000417440, 0x199, 0xc0005a7b00, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc00015ca50, 0x18e59a0, 0xc0003a13c8, 0x195, 0xc00015ca78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc00015ca50, 0x18e59a0, 0xc0003a13c8, 0x195, 0x18e59a0, 0xc0003a13c8)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc00015ca50, 0x1815520, 0xc0003a1200, 0x16, 0xc00015ca78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc00015ca50, 0x1815520, 0xc0003a1200, 0x16, 0xc00019b548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc00015ca50, 0x1815520, 0xc0003a1200, 0xc00015ca78, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003e2000, 0x9d38, 0xfe00, 0x1815520, 0xc0003a1200, 0x7f5754770bb0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0003a0fc0, 0xc0003e2000, 0x9d38, 0xfe00, 0x7f575477adc0, 0xc0003a0fc0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc00015c9a0, 0x1a89300, 0xc0003a0fc0, 0x16, 0xc00015c9c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc00015c9a0, 0x1a89300, 0xc0003a0fc0, 0x16, 0xc00019bc18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc00015c9a0, 0x1a89300, 0xc0003a0fc0, 0xc00015c9c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003e2000, 0x9d39, 0xfe00, 0x1a89300, 0xc0003a0fc0, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc000393b30, 0xc00019bd68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc000393a70, 0xc000393a40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 34 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x7b2d88, 0x9)
    	/usr/lib/go-1.13/src/runtime/panic.go:774 +0x72
    runtime.newosproc(0xc000044a80)
    	/usr/lib/go-1.13/src/runtime/os_linux.go:153 +0x1ba
    runtime.newm1(0xc000044a80)
    	/usr/lib/go-1.13/src/runtime/proc.go:1853 +0xdc
    runtime.newm(0x7c71f0, 0xc000026f00)
    	/usr/lib/go-1.13/src/runtime/proc.go:1832 +0x8f
    runtime.startm(0x0, 0xc000020001)
    	/usr/lib/go-1.13/src/runtime/proc.go:1969 +0x12a
    runtime.wakep(...)
    	/usr/lib/go-1.13/src/runtime/proc.go:2050
    runtime.resetspinning()
    	/usr/lib/go-1.13/src/runtime/proc.go:2430 +0x93
    runtime.schedule()
    	/usr/lib/go-1.13/src/runtime/proc.go:2531 +0x2a0
    runtime.park_m(0xc000000c00)
    	/usr/lib/go-1.13/src/runtime/proc.go:2610 +0x9d
    runtime.mcall(0x0)
    	/usr/lib/go-1.13/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [runnable, locked to thread]:
    sort.quickSort(0x825220, 0xc0000c0098, 0x0, 0x2, 0x4)
    	/usr/lib/go-1.13/src/sort/sort.go:183 +0x210
    sort.Sort(0x825220, 0xc0000c0098)
    	/usr/lib/go-1.13/src/sort/sort.go:218 +0x79
    regexp/syntax.cleanClass(0xc0000c0098, 0x2, 0x2, 0x2b0000002b)
    	/usr/lib/go-1.13/src/regexp/syntax/parse.go:1631 +0x3b
    regexp/syntax.(*parser).parseClass(0xc0000a6120, 0x7c2d9c, 0x31, 0x400, 0x20300000000000, 0x20, 0x400)
    	/usr/lib/go-1.13/src/regexp/syntax/parse.go:1617 +0x843
    regexp/syntax.Parse(0x7c2d9b, 0x32, 0x2000d4, 0x0, 0xc00008cda8, 0x40bc26)
    	/usr/lib/go-1.13/src/regexp/syntax/parse.go:774 +0xcca
    regexp.compile(0x7c2d9b, 0x32, 0xd4, 0x7f5a796dbd98, 0x0, 0x18)
    	/usr/lib/go-1.13/src/regexp/regexp.go:170 +0x5a
    regexp.Compile(...)
    	/usr/lib/go-1.13/src/regexp/regexp.go:133
    regexp.MustCompile(0x7c2d9b, 0x32, 0x82e380)
    	/usr/lib/go-1.13/src/regexp/regexp.go:309 +0x4b
    gopkg.in/yaml%2ev2.init()
    	/build/snapd/parts/snapd-deb/build/vendor/gopkg.in/yaml.v2/encode.go:298 +0x1fe
