apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f8e78430f47 m=3 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f8e78430f47
    stack: frame={sp:0x7f8e759de830, fp:0x0} stack=[0x7f8e751df288,0x7f8e759dee88)
    00007f8e759de730:  00007f8e759deaf0  00007f8e78a1975a 
    00007f8e759de740:  000000000000000b  0000000000000000 
    00007f8e759de750:  00007f8e667bb700  0000559bafe82148 
    00007f8e759de760:  00007f8e759dec40  00007f8e70000da0 
    00007f8e759de770:  0000000000000000  0000559baf35ed10 
    00007f8e759de780:  0000000000000000  00007f8e78a11f13 
    00007f8e759de790:  0000000000000005  0000000000000000 
    00007f8e759de7a0:  2525252525252525  2525252525252525 
    00007f8e759de7b0:  00000000000000ff  0000000000000000 
    00007f8e759de7c0:  00000000000000ff  0000000000000000 
    00007f8e759de7d0:  0000000000000001  0000000000000003 
    00007f8e759de7e0:  000000000000000e  000000000000000e 
    00007f8e759de7f0:  0000000000000000  0000000000000000 
    00007f8e759de800:  ffffffffffffffff  ffffffffffffffff 
    00007f8e759de810:  0000000400000004  0000000400000004 
    00007f8e759de820:  20636f6c6c616d00  203a64656c696166 
    00007f8e759de830: <0000000000000000  0000000000000000 
    00007f8e759de840:  0000000000000000  0000000000000000 
    00007f8e759de850:  0000000000000000  0000000000000000 
    00007f8e759de860:  0000000000000000  0000000000000000 
    00007f8e759de870:  0000000000000000  0000000000000000 
    00007f8e759de880:  0000000000000000  0000000000000000 
    00007f8e759de890:  0000000000000000  0000000000000000 
    00007f8e759de8a0:  0000000000000000  0000000000000000 
    00007f8e759de8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f8e759de8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f8e759de8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f8e759de8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f8e759de8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f8e759de900:  ffffffffffffffff  ffffffffffffffff 
    00007f8e759de910:  ffffffffffffffff  ffffffffffffffff 
    00007f8e759de920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f8e78430f47
    stack: frame={sp:0x7f8e759de830, fp:0x0} stack=[0x7f8e751df288,0x7f8e759dee88)
    00007f8e759de730:  00007f8e759deaf0  00007f8e78a1975a 
    00007f8e759de740:  000000000000000b  0000000000000000 
    00007f8e759de750:  00007f8e667bb700  0000559bafe82148 
    00007f8e759de760:  00007f8e759dec40  00007f8e70000da0 
    00007f8e759de770:  0000000000000000  0000559baf35ed10 
    00007f8e759de780:  0000000000000000  00007f8e78a11f13 
    00007f8e759de790:  0000000000000005  0000000000000000 
    00007f8e759de7a0:  2525252525252525  2525252525252525 
    00007f8e759de7b0:  00000000000000ff  0000000000000000 
    00007f8e759de7c0:  00000000000000ff  0000000000000000 
    00007f8e759de7d0:  0000000000000001  0000000000000003 
    00007f8e759de7e0:  000000000000000e  000000000000000e 
    00007f8e759de7f0:  0000000000000000  0000000000000000 
    00007f8e759de800:  ffffffffffffffff  ffffffffffffffff 
    00007f8e759de810:  0000000400000004  0000000400000004 
    00007f8e759de820:  20636f6c6c616d00  203a64656c696166 
    00007f8e759de830: <0000000000000000  0000000000000000 
    00007f8e759de840:  0000000000000000  0000000000000000 
    00007f8e759de850:  0000000000000000  0000000000000000 
    00007f8e759de860:  0000000000000000  0000000000000000 
    00007f8e759de870:  0000000000000000  0000000000000000 
    00007f8e759de880:  0000000000000000  0000000000000000 
    00007f8e759de890:  0000000000000000  0000000000000000 
    00007f8e759de8a0:  0000000000000000  0000000000000000 
    00007f8e759de8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f8e759de8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f8e759de8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f8e759de8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f8e759de8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f8e759de900:  ffffffffffffffff  ffffffffffffffff 
    00007f8e759de910:  ffffffffffffffff  ffffffffffffffff 
    00007f8e759de920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [runnable]:
    net/http.(*persistConn).roundTrip(0xc0003ec240, 0xc0003e43f0, 0x0, 0x0, 0x0)
    	/usr/lib/go-1.13/src/net/http/transport.go:2431 +0x772
    net/http.(*Transport).roundTrip(0xc00039b7c0, 0xc00027ea00, 0xc0003ee130, 0xc00023f190, 0x100559baea047ca)
    	/usr/lib/go-1.13/src/net/http/transport.go:535 +0x9b8
    net/http.(*Transport).RoundTrip(0xc00039b7c0, 0xc00027ea00, 0xc00039b7c0, 0x0, 0x0)
    	/usr/lib/go-1.13/src/net/http/roundtrip.go:17 +0x37
    net/http.send(0xc00027ea00, 0x559baf9465a0, 0xc00039b7c0, 0x0, 0x0, 0x0, 0xc00026c288, 0x0, 0x1, 0x0)
    	/usr/lib/go-1.13/src/net/http/client.go:250 +0x445
    net/http.(*Client).send(0xc0003a3050, 0xc00027ea00, 0x0, 0x0, 0x0, 0xc00026c288, 0x0, 0x1, 0xc000000000)
    	/usr/lib/go-1.13/src/net/http/client.go:174 +0xfc
    net/http.(*Client).do(0xc0003a3050, 0xc00027ea00, 0x0, 0x0, 0x0)
    	/usr/lib/go-1.13/src/net/http/client.go:641 +0x3d0
    net/http.(*Client).Do(0xc0003a3050, 0xc00027ea00, 0x0, 0x0, 0x0)
    	/usr/lib/go-1.13/src/net/http/client.go:509 +0x37
    github.com/snapcore/snapd/client.(*Client).raw(0xc00035e1c0, 0x559baf95d340, 0xc0003ea300, 0x559baf1b2ee7, 0x3, 0x559baf1bcd78, 0xf, 0x0, 0x0, 0x0, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:270 +0x3de
    github.com/snapcore/snapd/client.(*Client).rawWithTimeout(0xc00035e1c0, 0x559baf95d340, 0xc0003ea300, 0x559baf1b2ee7, 0x3, 0x559baf1bcd78, 0xf, 0x0, 0x0, 0x0, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:291 +0x11b
    github.com/snapcore/snapd/client.(*Client).do(0xc00035e1c0, 0x559baf1b2ee7, 0x3, 0x559baf1bcd78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x559baf80cf40, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:387 +0x1f0
    github.com/snapcore/snapd/client.(*Client).doSyncWithOpts(0xc00035e1c0, 0x559baf1b2ee7, 0x3, 0x559baf1bcd78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x559baf7a89a0, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:492 +0xf6
    github.com/snapcore/snapd/client.(*Client).SysInfo(0xc00035e1c0, 0x46, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/client/client.go:727 +0xd4
    main.maybeWaitForSecurityProfileRegeneration(0xc00035e1c0, 0xc00039b7c0, 0xd)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:200 +0x1aa
    main.(*cmdRun).Execute(0xc00023feb8, 0xc000032190, 0x2, 0x3, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:240 +0x172
    main.main()
    	/build/snapd/parts/snapd-deb/build/cmd/snap/main.go:482 +0x581
    
    goroutine 6 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 20 [select]:
    net/http.(*persistConn).readLoop(0xc0003ec240)
    	/usr/lib/go-1.13/src/net/http/transport.go:2023 +0x891
    created by net/http.(*Transport).dialConn
    	/usr/lib/go-1.13/src/net/http/transport.go:1580 +0xb0f
    
    goroutine 21 [select]:
    net/http.(*persistConn).writeLoop(0xc0003ec240)
    	/usr/lib/go-1.13/src/net/http/transport.go:2210 +0x125
    created by net/http.(*Transport).dialConn
    	/usr/lib/go-1.13/src/net/http/transport.go:1581 +0xb34
    
    rax    0x0
    rbx    0x7f8e787de840
    rcx    0x7f8e78430f47
    rdx    0x0
    rdi    0x2
    rsi    0x7f8e759de830
    rbp    0x559baf378e7c
    rsp    0x7f8e759de830
    r8     0x0
    r9     0x7f8e759de830
    r10    0x8
    r11    0x246
    r12    0x7f8e70000da0
    r13    0x0
    r14    0x559baf35ed10
    r15    0x0
    rip    0x7f8e78430f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000108000)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000108000)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc000046000, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc00007e001)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc000000c00)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [syscall, locked to thread]:
    k8s.io/kubernetes/vendor/github.com/go-openapi/swag.(*NameProvider).GetJSONNames(0xc000380770, 0x1a89300, 0xc0004b8b40, 0x0, 0x0, 0x0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/swag/json.go:265 +0x1da
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0004b8b40, 0xc0003ee6b6, 0x39, 0xb74a, 0x7f7334119ca8, 0xc0004b8b40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:574 +0x267
    encoding/json.(*decodeState).object(0xc0004b2420, 0x19ce1a0, 0xc0004b8b40, 0x199, 0xc0004b2448, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0004b2420, 0x19ce1a0, 0xc0004b8b40, 0x199, 0xc0004cad80, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004b2420, 0x18bc100, 0xc0004b83e0, 0x195, 0xc0004b2448, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004b2420, 0x18bc100, 0xc0004b83e0, 0x195, 0x18bc100, 0xc0004b83e0)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004b2420, 0x1815520, 0xc0004b8240, 0x16, 0xc0004b2448, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004b2420, 0x1815520, 0xc0004b8240, 0x16, 0xc00044e888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0004b2420, 0x1815520, 0xc0004b8240, 0xc0004b2448, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003eddc7, 0x9ca, 0xc039, 0x1815520, 0xc0004b8240, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00041eb40, 0xc0003eddc7, 0x9ca, 0xc039, 0x7f7334119ca8, 0xc00041eb40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e4b00, 0x19ce1a0, 0xc00041eb40, 0x199, 0xc0000e4b28, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e4b00, 0x19ce1a0, 0xc00041eb40, 0x199, 0xc0004b8000, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e4b00, 0x18e59a0, 0xc0003b0ac8, 0x195, 0xc0000e4b28, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e4b00, 0x18e59a0, 0xc0003b0ac8, 0x195, 0x18e59a0, 0xc0003b0ac8)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e4b00, 0x1815520, 0xc0003b0900, 0x16, 0xc0000e4b28, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e4b00, 0x1815520, 0xc0003b0900, 0x16, 0xc0001a3548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e4b00, 0x1815520, 0xc0003b0900, 0xc0000e4b28, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003ea000, 0x9d38, 0xfe00, 0x1815520, 0xc0003b0900, 0x7f733410bbb0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0003b06c0, 0xc0003ea000, 0x9d38, 0xfe00, 0x7f7334119ca8, 0xc0003b06c0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e4a50, 0x1a89300, 0xc0003b06c0, 0x16, 0xc0000e4a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e4a50, 0x1a89300, 0xc0003b06c0, 0x16, 0xc0001a3c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e4a50, 0x1a89300, 0xc0003b06c0, 0xc0000e4a78, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003ea000, 0x9d39, 0xfe00, 0x1a89300, 0xc0003b06c0, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc00039db30, 0xc0001a3d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc00039da70, 0xc00039da40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 18 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
