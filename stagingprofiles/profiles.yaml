apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f8297c10f47 m=5 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f8297c10f47
    stack: frame={sp:0x7f828fffe830, fp:0x0} stack=[0x7f828f7ff288,0x7f828fffee88)
    00007f828fffe730:  00007f828fffeaf0  00007f82981f975a 
    00007f828fffe740:  000000000000000b  0000000000000000 
    00007f828fffe750:  00007f828effd700  000055ab2e862148 
    00007f828fffe760:  00007f828fffec40  000055ab2ee883f0 
    00007f828fffe770:  0000000000000000  000055ab2dd3ed10 
    00007f828fffe780:  0000000000000000  00007f82981f1f13 
    00007f828fffe790:  0000000000000005  0000000000000000 
    00007f828fffe7a0:  2525252525252525  2525252525252525 
    00007f828fffe7b0:  00000000000000ff  0000000000000000 
    00007f828fffe7c0:  00000000000000ff  0000000000000000 
    00007f828fffe7d0:  00007f827c000010  00007f827c000010 
    00007f828fffe7e0:  000000000000000e  000000000000000e 
    00007f828fffe7f0:  0000000000000000  0000000000000000 
    00007f828fffe800:  ffffffffffffffff  ffffffffffffffff 
    00007f828fffe810:  0000000400000004  0000000400000004 
    00007f828fffe820:  20636f6c6c616d00  203a64656c696166 
    00007f828fffe830: <0000000000000000  0000000000000000 
    00007f828fffe840:  0000000000000000  0000000000000000 
    00007f828fffe850:  0000000000000000  0000000000000000 
    00007f828fffe860:  0000000000000000  0000000000000000 
    00007f828fffe870:  0000000000000000  0000000000000000 
    00007f828fffe880:  0000000000000000  0000000000000000 
    00007f828fffe890:  0000000000000000  0000000000000000 
    00007f828fffe8a0:  0000000000000000  0000000000000000 
    00007f828fffe8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f828fffe8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f828fffe8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f828fffe8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f828fffe8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f828fffe900:  ffffffffffffffff  ffffffffffffffff 
    00007f828fffe910:  ffffffffffffffff  ffffffffffffffff 
    00007f828fffe920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f8297c10f47
    stack: frame={sp:0x7f828fffe830, fp:0x0} stack=[0x7f828f7ff288,0x7f828fffee88)
    00007f828fffe730:  00007f828fffeaf0  00007f82981f975a 
    00007f828fffe740:  000000000000000b  0000000000000000 
    00007f828fffe750:  00007f828effd700  000055ab2e862148 
    00007f828fffe760:  00007f828fffec40  000055ab2ee883f0 
    00007f828fffe770:  0000000000000000  000055ab2dd3ed10 
    00007f828fffe780:  0000000000000000  00007f82981f1f13 
    00007f828fffe790:  0000000000000005  0000000000000000 
    00007f828fffe7a0:  2525252525252525  2525252525252525 
    00007f828fffe7b0:  00000000000000ff  0000000000000000 
    00007f828fffe7c0:  00000000000000ff  0000000000000000 
    00007f828fffe7d0:  00007f827c000010  00007f827c000010 
    00007f828fffe7e0:  000000000000000e  000000000000000e 
    00007f828fffe7f0:  0000000000000000  0000000000000000 
    00007f828fffe800:  ffffffffffffffff  ffffffffffffffff 
    00007f828fffe810:  0000000400000004  0000000400000004 
    00007f828fffe820:  20636f6c6c616d00  203a64656c696166 
    00007f828fffe830: <0000000000000000  0000000000000000 
    00007f828fffe840:  0000000000000000  0000000000000000 
    00007f828fffe850:  0000000000000000  0000000000000000 
    00007f828fffe860:  0000000000000000  0000000000000000 
    00007f828fffe870:  0000000000000000  0000000000000000 
    00007f828fffe880:  0000000000000000  0000000000000000 
    00007f828fffe890:  0000000000000000  0000000000000000 
    00007f828fffe8a0:  0000000000000000  0000000000000000 
    00007f828fffe8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f828fffe8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f828fffe8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f828fffe8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f828fffe8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f828fffe900:  ffffffffffffffff  ffffffffffffffff 
    00007f828fffe910:  ffffffffffffffff  ffffffffffffffff 
    00007f828fffe920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).parse(0xc00011c500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:277 +0xbc6
    text/template/parse.(*Tree).Parse(0xc00011c500, 0x55ab2dbee440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001c4720, 0xc000142350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x55ab2db939b7, 0x4, 0x55ab2dbee440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000142350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc00003d840, 0x55ab2dbee440, 0x16c, 0x4, 0xc0001095e8, 0x55ab2e87d760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 6 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 7 [runnable]:
    text/template/parse.(*lexer).run(0xc00014a630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:228
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7f8297fbe840
    rcx    0x7f8297c10f47
    rdx    0x0
    rdi    0x2
    rsi    0x7f828fffe830
    rbp    0x55ab2dd58e7c
    rsp    0x7f828fffe830
    r8     0x0
    r9     0x7f828fffe830
    r10    0x8
    r11    0x246
    r12    0x55ab2ee883f0
    r13    0x0
    r14    0x55ab2dd3ed10
    r15    0x0
    rip    0x7f8297c10f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000088400)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000088400)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc00004b000, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc000099f01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc000001080)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [syscall, locked to thread]:
    reflect.mapassign(0x18bc100, 0xc000473830, 0xc00048d030, 0xc0004a4fc0)
    	/usr/local/go/src/runtime/map.go:1319 +0x3f
    reflect.Value.SetMapIndex(0x18bc100, 0xc0004a4860, 0x195, 0x1858200, 0xc00048d030, 0x98, 0x19ce1a0, 0xc0004a4fc0, 0x199)
    	/usr/local/go/src/reflect/value.go:1706 +0x27c
    encoding/json.(*decodeState).object(0xc000496a50, 0x18bc100, 0xc0004a4860, 0x195, 0xc000496a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:807 +0x8da
    encoding/json.(*decodeState).value(0xc000496a50, 0x18bc100, 0xc0004a4860, 0x195, 0x18bc100, 0xc0004a4860)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000496a50, 0x1815520, 0xc0004a46c0, 0x16, 0xc000496a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000496a50, 0x1815520, 0xc0004a46c0, 0x16, 0xc000420888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc000496a50, 0x1815520, 0xc0004a46c0, 0xc000496a78, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003be7b5, 0x9e1, 0xb64b, 0x1815520, 0xc0004a46c0, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0003ee900, 0xc0003be7b5, 0x9e1, 0xb64b, 0x7f929c802b00, 0xc0003ee900)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc000136b00, 0x19ce1a0, 0xc0003ee900, 0x199, 0xc000136b28, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc000136b00, 0x19ce1a0, 0xc0003ee900, 0x199, 0xc0004a4480, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000136b00, 0x18e59a0, 0xc000384888, 0x195, 0xc000136b28, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000136b00, 0x18e59a0, 0xc000384888, 0x195, 0x18e59a0, 0xc000384888)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000136b00, 0x1815520, 0xc0003846c0, 0x16, 0xc000136b28, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000136b00, 0x1815520, 0xc0003846c0, 0x16, 0xc000173548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc000136b00, 0x1815520, 0xc0003846c0, 0xc000136b28, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003ba000, 0x9d38, 0xfe00, 0x1815520, 0xc0003846c0, 0x7f929c863898, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000384480, 0xc0003ba000, 0x9d38, 0xfe00, 0x7f929c802b00, 0xc000384480)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc000136a50, 0x1a89300, 0xc000384480, 0x16, 0xc000136a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc000136a50, 0x1a89300, 0xc000384480, 0x16, 0xc000173c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc000136a50, 0x1a89300, 0xc000384480, 0xc000136a78, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003ba000, 0x9d39, 0xfe00, 0x1a89300, 0xc000384480, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc00036fb30, 0xc000173d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc00036fa70, 0xc00036fa40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 6 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f1fd71fcf47 m=5 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f1fd71fcf47
    stack: frame={sp:0x7f1fcf7fd830, fp:0x0} stack=[0x7f1fceffe288,0x7f1fcf7fde88)
    00007f1fcf7fd730:  00007f1fcf7fdaf0  00007f1fd77e575a 
    00007f1fcf7fd740:  000000000000000b  0000000000000000 
    00007f1fcf7fd750:  00007f1fce7fc700  000055c3308bd148 
    00007f1fcf7fd760:  00007f1fcf7fdc40  000055c3322b53f0 
    00007f1fcf7fd770:  0000000000000000  000055c32fd99d10 
    00007f1fcf7fd780:  0000000000000000  00007f1fd77ddf13 
    00007f1fcf7fd790:  0000000000000005  0000000000000000 
    00007f1fcf7fd7a0:  2525252525252525  2525252525252525 
    00007f1fcf7fd7b0:  00000000000000ff  0000000000000000 
    00007f1fcf7fd7c0:  00000000000000ff  0000000000000000 
    00007f1fcf7fd7d0:  00007f1fb8000010  00007f1fb8000010 
    00007f1fcf7fd7e0:  000000000000000e  000000000000000e 
    00007f1fcf7fd7f0:  0000000000000000  0000000000000000 
    00007f1fcf7fd800:  ffffffffffffffff  ffffffffffffffff 
    00007f1fcf7fd810:  0000000400000004  0000000400000004 
    00007f1fcf7fd820:  20636f6c6c616d00  203a64656c696166 
    00007f1fcf7fd830: <0000000000000000  0000000000000000 
    00007f1fcf7fd840:  0000000000000000  0000000000000000 
    00007f1fcf7fd850:  0000000000000000  0000000000000000 
    00007f1fcf7fd860:  0000000000000000  0000000000000000 
    00007f1fcf7fd870:  0000000000000000  0000000000000000 
    00007f1fcf7fd880:  0000000000000000  0000000000000000 
    00007f1fcf7fd890:  0000000000000000  0000000000000000 
    00007f1fcf7fd8a0:  0000000000000000  0000000000000000 
    00007f1fcf7fd8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f1fcf7fd8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f1fcf7fd8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f1fcf7fd8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f1fcf7fd8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f1fcf7fd900:  ffffffffffffffff  ffffffffffffffff 
    00007f1fcf7fd910:  ffffffffffffffff  ffffffffffffffff 
    00007f1fcf7fd920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f1fd71fcf47
    stack: frame={sp:0x7f1fcf7fd830, fp:0x0} stack=[0x7f1fceffe288,0x7f1fcf7fde88)
    00007f1fcf7fd730:  00007f1fcf7fdaf0  00007f1fd77e575a 
    00007f1fcf7fd740:  000000000000000b  0000000000000000 
    00007f1fcf7fd750:  00007f1fce7fc700  000055c3308bd148 
    00007f1fcf7fd760:  00007f1fcf7fdc40  000055c3322b53f0 
    00007f1fcf7fd770:  0000000000000000  000055c32fd99d10 
    00007f1fcf7fd780:  0000000000000000  00007f1fd77ddf13 
    00007f1fcf7fd790:  0000000000000005  0000000000000000 
    00007f1fcf7fd7a0:  2525252525252525  2525252525252525 
    00007f1fcf7fd7b0:  00000000000000ff  0000000000000000 
    00007f1fcf7fd7c0:  00000000000000ff  0000000000000000 
    00007f1fcf7fd7d0:  00007f1fb8000010  00007f1fb8000010 
    00007f1fcf7fd7e0:  000000000000000e  000000000000000e 
    00007f1fcf7fd7f0:  0000000000000000  0000000000000000 
    00007f1fcf7fd800:  ffffffffffffffff  ffffffffffffffff 
    00007f1fcf7fd810:  0000000400000004  0000000400000004 
    00007f1fcf7fd820:  20636f6c6c616d00  203a64656c696166 
    00007f1fcf7fd830: <0000000000000000  0000000000000000 
    00007f1fcf7fd840:  0000000000000000  0000000000000000 
    00007f1fcf7fd850:  0000000000000000  0000000000000000 
    00007f1fcf7fd860:  0000000000000000  0000000000000000 
    00007f1fcf7fd870:  0000000000000000  0000000000000000 
    00007f1fcf7fd880:  0000000000000000  0000000000000000 
    00007f1fcf7fd890:  0000000000000000  0000000000000000 
    00007f1fcf7fd8a0:  0000000000000000  0000000000000000 
    00007f1fcf7fd8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f1fcf7fd8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f1fcf7fd8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f1fcf7fd8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f1fcf7fd8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f1fcf7fd900:  ffffffffffffffff  ffffffffffffffff 
    00007f1fcf7fd910:  ffffffffffffffff  ffffffffffffffff 
    00007f1fcf7fd920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).parse(0xc00012c500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:277 +0xbc6
    text/template/parse.(*Tree).Parse(0xc00012c500, 0x55c32fc49440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001d66f0, 0xc000152340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x55c32fbee9b7, 0x4, 0x55c32fc49440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000152340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc0000cd780, 0x55c32fc49440, 0x16c, 0x4, 0xc0001195e8, 0x55c3308d8760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 19 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 20 [runnable]:
    text/template/parse.(*lexer).run(0xc00015a630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:228
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7f1fd75aa840
    rcx    0x7f1fd71fcf47
    rdx    0x0
    rdi    0x2
    rsi    0x7f1fcf7fd830
    rbp    0x55c32fdb3e7c
    rsp    0x7f1fcf7fd830
    r8     0x0
    r9     0x7f1fcf7fd830
    r10    0x8
    r11    0x246
    r12    0x55c3322b53f0
    r13    0x0
    r14    0x55c32fd99d10
    r15    0x0
    rip    0x7f1fd71fcf47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
