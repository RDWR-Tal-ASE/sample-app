apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    /bin/sh: 0: Cannot fork
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 7 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    runtime: failed to create new OS thread (have 8 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000192000)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000192000)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc000050000, 0x6)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc00006df01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc000001380)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [runnable, locked to thread]:
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00051cfc0, 0xc00045674b, 0x38, 0xb6b5, 0x7f7dcecadce8, 0xc00051cfc0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:551 +0x45
    encoding/json.(*decodeState).object(0xc00051a2c0, 0x19ce1a0, 0xc00051cfc0, 0x199, 0xc00051a2e8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc00051a2c0, 0x19ce1a0, 0xc00051cfc0, 0x199, 0xc000534000, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc00051a2c0, 0x18bc100, 0xc00051c860, 0x195, 0xc00051a2e8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc00051a2c0, 0x18bc100, 0xc00051c860, 0x195, 0x18bc100, 0xc00051c860)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc00051a2c0, 0x1815520, 0xc00051c6c0, 0x16, 0xc00051a2e8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc00051a2c0, 0x1815520, 0xc00051c6c0, 0x16, 0xc0004b6888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc00051a2c0, 0x1815520, 0xc00051c6c0, 0xc00051a2e8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000455dc7, 0x9ca, 0xc039, 0x1815520, 0xc00051c6c0, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000486fc0, 0xc000455dc7, 0x9ca, 0xc039, 0x7f7dcecadce8, 0xc000486fc0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc00014a9a0, 0x19ce1a0, 0xc000486fc0, 0x199, 0xc00014a9c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc00014a9a0, 0x19ce1a0, 0xc000486fc0, 0x199, 0xc00051c480, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc00014a9a0, 0x18e59a0, 0xc00041af48, 0x195, 0xc00014a9c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc00014a9a0, 0x18e59a0, 0xc00041af48, 0x195, 0x18e59a0, 0xc00041af48)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc00014a9a0, 0x1815520, 0xc00041ad80, 0x16, 0xc00014a9c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc00014a9a0, 0x1815520, 0xc00041ad80, 0x16, 0xc00020b548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc00014a9a0, 0x1815520, 0xc00041ad80, 0xc00014a9c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000452000, 0x9d38, 0xfe00, 0x1815520, 0xc00041ad80, 0x7f7dceeaff58, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00041ab40, 0xc000452000, 0x9d38, 0xfe00, 0x7f7dcecadce8, 0xc00041ab40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc00014a8f0, 0x1a89300, 0xc00041ab40, 0x16, 0xc00014a918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc00014a8f0, 0x1a89300, 0xc00041ab40, 0x16, 0xc00020bc18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc00014a8f0, 0x1a89300, 0xc00041ab40, 0xc00014a918, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000452000, 0x9d39, 0xfe00, 0x1a89300, 0xc00041ab40, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc000405b30, 0xc00020bd68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc000405a70, 0xc000405a40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 18 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000088800)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000088800)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x0, 0xc000048800, 0x7)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0xc000048800, 0x2a6cc00)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.handoffp(0xc000048800)
    	/usr/local/go/src/runtime/proc.go:2001 +0x52
    runtime.stoplockedm()
    	/usr/local/go/src/runtime/proc.go:2075 +0xf7
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2611 +0x48c
    runtime.goschedImpl(0xc000000180)
    	/usr/local/go/src/runtime/proc.go:2860 +0xda
    runtime.gosched_m(0xc000000180)
    	/usr/local/go/src/runtime/proc.go:2868 +0x34
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: 
    -----
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7febc7aadf47 m=0 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7febc7aadf47
    stack: frame={sp:0x7fff1c0abc30, fp:0x0} stack=[0x7fff1b8ad1c0,0x7fff1c0ac200)
    00007fff1c0abb30:  00007fff1c0abef0  00007febc809675a 
    00007fff1c0abb40:  000000000000000b  0000000000000000 
    00007fff1c0abb50:  00007febc585d700  00000000008661c8 
    00007fff1c0abb60:  00007fff1c0ac040  0000000001f6c2a0 
    00007fff1c0abb70:  0000000000000000  0000000000593e90 
    00007fff1c0abb80:  0000000000000000  00007febc808ef13 
    00007fff1c0abb90:  0000000000000001  0000000000000000 
    00007fff1c0abba0:  2525252525252525  2525252525252525 
    00007fff1c0abbb0:  00000000ff00ff00  0000000000000000 
    00007fff1c0abbc0:  00000000ff000000  0000000000000000 
    00007fff1c0abbd0:  414fffffe0000000  0000000000000000 
    00007fff1c0abbe0:  2f7273752f3a6e69  73752f3a6e696273 
    00007fff1c0abbf0:  752f3a6e69622f72  6c61636f6c2f7273 
    00007fff1c0abc00:  73752f3a6e69622f  732f6e6962732f72 
    00007fff1c0abc10:  2f3a656369767265  6e69622f70616e73 
    00007fff1c0abc20:  6c6c616d00732520  656c69616620636f 
    00007fff1c0abc30: <0000000000000000  0000000000000000 
    00007fff1c0abc40:  0000000000000000  0000000000000000 
    00007fff1c0abc50:  0000000000000000  0000000000000000 
    00007fff1c0abc60:  0000000000000000  0000000000000000 
    00007fff1c0abc70:  0000000000000000  0000000000000000 
    00007fff1c0abc80:  0000000000000000  0000000000000000 
    00007fff1c0abc90:  0000000000000000  0000000000000000 
    00007fff1c0abca0:  0000000000000000  0000000000000000 
    00007fff1c0abcb0:  fffffffe7fffffff  ffffffffffffffff 
    00007fff1c0abcc0:  ffffffffffffffff  ffffffffffffffff 
    00007fff1c0abcd0:  ffffffffffffffff  ffffffffffffffff 
    00007fff1c0abce0:  ffffffffffffffff  ffffffffffffffff 
    00007fff1c0abcf0:  ffffffffffffffff  ffffffffffffffff 
    00007fff1c0abd00:  ffffffffffffffff  ffffffffffffffff 
    00007fff1c0abd10:  ffffffffffffffff  ffffffffffffffff 
    00007fff1c0abd20:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7febc7aadf47
    stack: frame={sp:0x7fff1c0abc30, fp:0x0} stack=[0x7fff1b8ad1c0,0x7fff1c0ac200)
    00007fff1c0abb30:  00007fff1c0abef0  00007febc809675a 
    00007fff1c0abb40:  000000000000000b  0000000000000000 
    00007fff1c0abb50:  00007febc585d700  00000000008661c8 
    00007fff1c0abb60:  00007fff1c0ac040  0000000001f6c2a0 
    00007fff1c0abb70:  0000000000000000  0000000000593e90 
    00007fff1c0abb80:  0000000000000000  00007febc808ef13 
    00007fff1c0abb90:  0000000000000001  0000000000000000 
    00007fff1c0abba0:  2525252525252525  2525252525252525 
    00007fff1c0abbb0:  00000000ff00ff00  0000000000000000 
    00007fff1c0abbc0:  00000000ff000000  0000000000000000 
    00007fff1c0abbd0:  414fffffe0000000  0000000000000000 
    00007fff1c0abbe0:  2f7273752f3a6e69  73752f3a6e696273 
    00007fff1c0abbf0:  752f3a6e69622f72  6c61636f6c2f7273 
    00007fff1c0abc00:  73752f3a6e69622f  732f6e6962732f72 
    00007fff1c0abc10:  2f3a656369767265  6e69622f70616e73 
    00007fff1c0abc20:  6c6c616d00732520  656c69616620636f 
    00007fff1c0abc30: <0000000000000000  0000000000000000 
    00007fff1c0abc40:  0000000000000000  0000000000000000 
    00007fff1c0abc50:  0000000000000000  0000000000000000 
    00007fff1c0abc60:  0000000000000000  0000000000000000 
    00007fff1c0abc70:  0000000000000000  0000000000000000 
    00007fff1c0abc80:  0000000000000000  0000000000000000 
    00007fff1c0abc90:  0000000000000000  0000000000000000 
    00007fff1c0abca0:  0000000000000000  0000000000000000 
    00007fff1c0abcb0:  fffffffe7fffffff  ffffffffffffffff 
    00007fff1c0abcc0:  ffffffffffffffff  ffffffffffffffff 
    00007fff1c0abcd0:  ffffffffffffffff  ffffffffffffffff 
    00007fff1c0abce0:  ffffffffffffffff  ffffffffffffffff 
    00007fff1c0abcf0:  ffffffffffffffff  ffffffffffffffff 
    00007fff1c0abd00:  ffffffffffffffff  ffffffffffffffff 
    00007fff1c0abd10:  ffffffffffffffff  ffffffffffffffff 
    00007fff1c0abd20:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [running]:
    runtime.systemstack_switch()
    	/usr/lib/go-1.13/src/runtime/asm_amd64.s:330 fp=0xc00003c760 sp=0xc00003c758 pc=0x456b50
    runtime.main()
    	/usr/lib/go-1.13/src/runtime/proc.go:133 +0x63 fp=0xc00003c7e0 sp=0xc00003c760 pc=0x4303d3
    runtime.goexit()
    	/usr/lib/go-1.13/src/runtime/asm_amd64.s:1357 +0x1 fp=0xc00003c7e8 sp=0xc00003c7e0 pc=0x458c21
    
    rax    0x0
    rbx    0x7febc7e5b840
    rcx    0x7febc7aadf47
    rdx    0x0
    rdi    0x2
    rsi    0x7fff1c0abc30
    rbp    0x59f2ca
    rsp    0x7fff1c0abc30
    r8     0x0
    r9     0x7fff1c0abc30
    r10    0x8
    r11    0x246
    r12    0x1f6c2a0
    r13    0x0
    r14    0x593e90
    r15    0x0
    rip    0x7febc7aadf47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    -----
    runtime: failed to create new OS thread (have 2 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x7b2d88, 0x9)
    	/usr/lib/go-1.13/src/runtime/panic.go:774 +0x72
    runtime.newosproc(0xc000044000)
    	/usr/lib/go-1.13/src/runtime/os_linux.go:153 +0x1ba
    runtime.newm1(0xc000044000)
    	/usr/lib/go-1.13/src/runtime/proc.go:1853 +0xdc
    runtime.newm(0x7c72e0, 0x0)
    	/usr/lib/go-1.13/src/runtime/proc.go:1832 +0x8f
    runtime.main.func1()
    	/usr/lib/go-1.13/src/runtime/proc.go:134 +0x36
    runtime.systemstack(0x457724)
    	/usr/lib/go-1.13/src/runtime/asm_amd64.s:370 +0x66
    runtime.mstart()
    	/usr/lib/go-1.13/src/runtime/proc.go:1146
    
    goroutine 1 [running]:
    runtime.systemstack_switch()
    	/usr/lib/go-1.13/src/runtime/asm_amd64.s:330 fp=0xc000040760 sp=0xc000040758 pc=0x457820
    runtime.main()
    	/usr/lib/go-1.13/src/runtime/proc.go:133 +0x63 fp=0xc0000407e0 sp=0xc000040760 pc=0x42f113
    runtime.goexit()
    	/usr/lib/go-1.13/src/runtime/asm_amd64.s:1357 +0x1 fp=0xc0000407e8 sp=0xc0000407e0 pc=0x459771
