apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    Error: bad file '-': yaml: line 11: mapping values are not allowed in this context
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 10 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000063800)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000063800)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc000057800, 0x9)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0x426301)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc000001380)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [runnable]:
    k8s.io/kubernetes/vendor/github.com/spf13/cobra.(*Command).initCompleteCmd(0xc000156b00, 0xc00012e010, 0x7, 0x7)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/spf13/cobra/custom_completions.go:111 +0x197
    k8s.io/kubernetes/vendor/github.com/spf13/cobra.(*Command).ExecuteC(0xc000156b00, 0xc00011e180, 0xc00012e000, 0x8)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/spf13/cobra/command.go:927 +0x10b
    k8s.io/kubernetes/vendor/github.com/spf13/cobra.(*Command).Execute(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/spf13/cobra/command.go:895
    main.main()
    	_output/dockerized/go/src/k8s.io/kubernetes/cmd/kubectl/kubectl.go:49 +0x21d
    
    goroutine 18 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    
    goroutine 65 [select]:
    k8s.io/kubernetes/vendor/k8s.io/apimachinery/pkg/util/wait.BackoffUntil(0x1bb7018, 0x1cec100, 0xc000496000, 0x1, 0xc000100b40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/apimachinery/pkg/util/wait/wait.go:167 +0x149
    k8s.io/kubernetes/vendor/k8s.io/apimachinery/pkg/util/wait.JitterUntil(0x1bb7018, 0x12a05f200, 0x0, 0x1, 0xc000100b40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/apimachinery/pkg/util/wait/wait.go:133 +0x98
    k8s.io/kubernetes/vendor/k8s.io/apimachinery/pkg/util/wait.Until(0x1bb7018, 0x12a05f200, 0xc000100b40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/apimachinery/pkg/util/wait/wait.go:90 +0x4d
    created by k8s.io/kubernetes/vendor/k8s.io/kubectl/pkg/util/logs.InitLogs
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/kubectl/pkg/util/logs/logs.go:51 +0x96
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f148763df47 m=3 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f148763df47
    stack: frame={sp:0x7f1484beb820, fp:0x0} stack=[0x7f14843ec288,0x7f1484bebe88)
    00007f1484beb720:  0000000000000000  00007f14879f2c58 
    00007f1484beb730:  00007f1484bebae0  00007f1487c2675a 
    00007f1484beb740:  000000000000000b  0000000000000000 
    00007f1484beb750:  00007f147e7fc700  0000556476648148 
    00007f1484beb760:  00007f1484bebc30  00007f1478000c50 
    00007f1484beb770:  0000000000000000  0000556475b24d10 
    00007f1484beb780:  0000000000000000  00007f1487c1ef13 
    00007f1484beb790:  0000000000000005  0000000000000000 
    00007f1484beb7a0:  2525252525252525  2525252525252525 
    00007f1484beb7b0:  00000000000000ff  0000000000000000 
    00007f1484beb7c0:  00000000000000ff  0000000000000000 
    00007f1484beb7d0:  ff000000000000ff  00000000ff000000 
    00007f1484beb7e0:  000000000000000e  000000000000000e 
    00007f1484beb7f0:  0000000000000000  0000000000000000 
    00007f1484beb800:  ffffffffffffffff  ffffffffffffffff 
    00007f1484beb810:  0000000400000004  0000000400000004 
    00007f1484beb820: <0000000000000000  203a64656c696166 
    00007f1484beb830:  0000000000000000  0000000000000000 
    00007f1484beb840:  0000000000000000  0000000000000000 
    00007f1484beb850:  0000000000000000  0000000000000000 
    00007f1484beb860:  0000000000000000  0000000000000000 
    00007f1484beb870:  0000000000000000  0000000000000000 
    00007f1484beb880:  0000000000000000  0000000000000000 
    00007f1484beb890:  0000000000000000  0000000000000000 
    00007f1484beb8a0:  fffffffe7fffffff  ffffffffffffffff 
    00007f1484beb8b0:  ffffffffffffffff  ffffffffffffffff 
    00007f1484beb8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f1484beb8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f1484beb8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f1484beb8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f1484beb900:  ffffffffffffffff  ffffffffffffffff 
    00007f1484beb910:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f148763df47
    stack: frame={sp:0x7f1484beb820, fp:0x0} stack=[0x7f14843ec288,0x7f1484bebe88)
    00007f1484beb720:  0000000000000000  00007f14879f2c58 
    00007f1484beb730:  00007f1484bebae0  00007f1487c2675a 
    00007f1484beb740:  000000000000000b  0000000000000000 
    00007f1484beb750:  00007f147e7fc700  0000556476648148 
    00007f1484beb760:  00007f1484bebc30  00007f1478000c50 
    00007f1484beb770:  0000000000000000  0000556475b24d10 
    00007f1484beb780:  0000000000000000  00007f1487c1ef13 
    00007f1484beb790:  0000000000000005  0000000000000000 
    00007f1484beb7a0:  2525252525252525  2525252525252525 
    00007f1484beb7b0:  00000000000000ff  0000000000000000 
    00007f1484beb7c0:  00000000000000ff  0000000000000000 
    00007f1484beb7d0:  ff000000000000ff  00000000ff000000 
    00007f1484beb7e0:  000000000000000e  000000000000000e 
    00007f1484beb7f0:  0000000000000000  0000000000000000 
    00007f1484beb800:  ffffffffffffffff  ffffffffffffffff 
    00007f1484beb810:  0000000400000004  0000000400000004 
    00007f1484beb820: <0000000000000000  203a64656c696166 
    00007f1484beb830:  0000000000000000  0000000000000000 
    00007f1484beb840:  0000000000000000  0000000000000000 
    00007f1484beb850:  0000000000000000  0000000000000000 
    00007f1484beb860:  0000000000000000  0000000000000000 
    00007f1484beb870:  0000000000000000  0000000000000000 
    00007f1484beb880:  0000000000000000  0000000000000000 
    00007f1484beb890:  0000000000000000  0000000000000000 
    00007f1484beb8a0:  fffffffe7fffffff  ffffffffffffffff 
    00007f1484beb8b0:  ffffffffffffffff  ffffffffffffffff 
    00007f1484beb8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f1484beb8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f1484beb8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f1484beb8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f1484beb900:  ffffffffffffffff  ffffffffffffffff 
    00007f1484beb910:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive]:
    os/exec.(*Cmd).Wait(0xc0000fdce0, 0x0, 0x0)
    	/usr/lib/go-1.13/src/os/exec/exec.go:509 +0x127
    os/exec.(*Cmd).Run(0xc0000fdce0, 0xc0002e16d0, 0x1)
    	/usr/lib/go-1.13/src/os/exec/exec.go:341 +0x5e
    os/exec.(*Cmd).Output(0xc0000fdce0, 0x2c, 0xc000251a30, 0x1, 0x1, 0xc0000fdce0)
    	/usr/lib/go-1.13/src/os/exec/exec.go:540 +0x8a
    github.com/snapcore/snapd/sandbox/seccomp.(*Compiler).VersionInfo(0xc0003442d0, 0xc0003442d0, 0x0, 0x0, 0xc00036bde0)
    	/build/snapd/parts/snapd-deb/build/sandbox/seccomp/compiler.go:75 +0x99
    github.com/snapcore/snapd/sandbox/seccomp.glob..func1(0xc00036bde0, 0xc00036bde0, 0x1f, 0xc0002d8540, 0x1f)
    	/build/snapd/parts/snapd-deb/build/sandbox/seccomp/compiler.go:97 +0x6a
    github.com/snapcore/snapd/sandbox/seccomp.CompilerVersionInfo(...)
    	/build/snapd/parts/snapd-deb/build/sandbox/seccomp/compiler.go:103
    github.com/snapcore/snapd/interfaces.seccompCompilerVersionInfo(0xc0002d8540, 0x1f, 0xc0002d8540, 0x1f, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/interfaces/system_key.go:95 +0x6d
    github.com/snapcore/snapd/interfaces.generateSystemKey(0xc0001c1f00, 0x300000002, 0xd0)
    	/build/snapd/parts/snapd-deb/build/interfaces/system_key.go:145 +0x373
    github.com/snapcore/snapd/interfaces.SystemKeyMismatch(0x5564751ca7ca, 0xe0, 0x55647609b200)
    	/build/snapd/parts/snapd-deb/build/interfaces/system_key.go:229 +0x28
    main.maybeWaitForSecurityProfileRegeneration(0xc00011ea80, 0xc000328280, 0xd)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:152 +0x28
    main.(*cmdRun).Execute(0xc000251eb8, 0xc0000a8160, 0x2, 0x3, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:240 +0x172
    main.main()
    	/build/snapd/parts/snapd-deb/build/cmd/snap/main.go:482 +0x581
    
    goroutine 19 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 22 [runnable]:
    os/exec.(*Cmd).Start.func1(0xc0000fdce0, 0xc00036bea0)
    	/usr/lib/go-1.13/src/os/exec/exec.go:434
    created by os/exec.(*Cmd).Start
    	/usr/lib/go-1.13/src/os/exec/exec.go:434 +0x60a
    
    rax    0x0
    rbx    0x7f14879eb840
    rcx    0x7f148763df47
    rdx    0x0
    rdi    0x2
    rsi    0x7f1484beb820
    rbp    0x556475b3ee7c
    rsp    0x7f1484beb820
    r8     0x0
    r9     0x7f1484beb820
    r10    0x8
    r11    0x246
    r12    0x7f1478000c50
    r13    0x0
    r14    0x556475b24d10
    r15    0x0
    rip    0x7f148763df47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
