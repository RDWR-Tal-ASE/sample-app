apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f0966f59f47 m=4 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f0966f59f47
    stack: frame={sp:0x7f0963d06830, fp:0x0} stack=[0x7f0963507288,0x7f0963d06e88)
    00007f0963d06730:  00007f0963d06af0  00007f096754275a 
    00007f0963d06740:  000000000000000b  0000000000000000 
    00007f0963d06750:  00007f0962504700  00005627e8f43148 
    00007f0963d06760:  00007f0963d06c40  00005627e9cf3540 
    00007f0963d06770:  0000000000000000  00005627e841fd10 
    00007f0963d06780:  0000000000000000  00007f096753af13 
    00007f0963d06790:  0000000000000005  0000000000000000 
    00007f0963d067a0:  2525252525252525  2525252525252525 
    00007f0963d067b0:  00000000000000ff  0000000000000000 
    00007f0963d067c0:  00000000000000ff  0000000000000000 
    00007f0963d067d0:  00007f0958000010  00007f0958000010 
    00007f0963d067e0:  000000000000000e  000000000000000e 
    00007f0963d067f0:  0000000000000000  0000000000000000 
    00007f0963d06800:  ffffffffffffffff  ffffffffffffffff 
    00007f0963d06810:  0000000400000004  0000000400000004 
    00007f0963d06820:  20636f6c6c616d00  203a64656c696166 
    00007f0963d06830: <0000000000000000  0000000000000000 
    00007f0963d06840:  0000000000000000  0000000000000000 
    00007f0963d06850:  0000000000000000  0000000000000000 
    00007f0963d06860:  0000000000000000  0000000000000000 
    00007f0963d06870:  0000000000000000  0000000000000000 
    00007f0963d06880:  0000000000000000  0000000000000000 
    00007f0963d06890:  0000000000000000  0000000000000000 
    00007f0963d068a0:  0000000000000000  0000000000000000 
    00007f0963d068b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f0963d068c0:  ffffffffffffffff  ffffffffffffffff 
    00007f0963d068d0:  ffffffffffffffff  ffffffffffffffff 
    00007f0963d068e0:  ffffffffffffffff  ffffffffffffffff 
    00007f0963d068f0:  ffffffffffffffff  ffffffffffffffff 
    00007f0963d06900:  ffffffffffffffff  ffffffffffffffff 
    00007f0963d06910:  ffffffffffffffff  ffffffffffffffff 
    00007f0963d06920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f0966f59f47
    stack: frame={sp:0x7f0963d06830, fp:0x0} stack=[0x7f0963507288,0x7f0963d06e88)
    00007f0963d06730:  00007f0963d06af0  00007f096754275a 
    00007f0963d06740:  000000000000000b  0000000000000000 
    00007f0963d06750:  00007f0962504700  00005627e8f43148 
    00007f0963d06760:  00007f0963d06c40  00005627e9cf3540 
    00007f0963d06770:  0000000000000000  00005627e841fd10 
    00007f0963d06780:  0000000000000000  00007f096753af13 
    00007f0963d06790:  0000000000000005  0000000000000000 
    00007f0963d067a0:  2525252525252525  2525252525252525 
    00007f0963d067b0:  00000000000000ff  0000000000000000 
    00007f0963d067c0:  00000000000000ff  0000000000000000 
    00007f0963d067d0:  00007f0958000010  00007f0958000010 
    00007f0963d067e0:  000000000000000e  000000000000000e 
    00007f0963d067f0:  0000000000000000  0000000000000000 
    00007f0963d06800:  ffffffffffffffff  ffffffffffffffff 
    00007f0963d06810:  0000000400000004  0000000400000004 
    00007f0963d06820:  20636f6c6c616d00  203a64656c696166 
    00007f0963d06830: <0000000000000000  0000000000000000 
    00007f0963d06840:  0000000000000000  0000000000000000 
    00007f0963d06850:  0000000000000000  0000000000000000 
    00007f0963d06860:  0000000000000000  0000000000000000 
    00007f0963d06870:  0000000000000000  0000000000000000 
    00007f0963d06880:  0000000000000000  0000000000000000 
    00007f0963d06890:  0000000000000000  0000000000000000 
    00007f0963d068a0:  0000000000000000  0000000000000000 
    00007f0963d068b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f0963d068c0:  ffffffffffffffff  ffffffffffffffff 
    00007f0963d068d0:  ffffffffffffffff  ffffffffffffffff 
    00007f0963d068e0:  ffffffffffffffff  ffffffffffffffff 
    00007f0963d068f0:  ffffffffffffffff  ffffffffffffffff 
    00007f0963d06900:  ffffffffffffffff  ffffffffffffffff 
    00007f0963d06910:  ffffffffffffffff  ffffffffffffffff 
    00007f0963d06920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).parse(0xc00011c500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:277 +0xbc6
    text/template/parse.(*Tree).Parse(0xc00011c500, 0x5627e82cf440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001c4720, 0xc000142350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x5627e82749b7, 0x4, 0x5627e82cf440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000142350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc00003d840, 0x5627e82cf440, 0x16c, 0x4, 0xc000109828, 0x5627e8f5e760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 6 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 7 [runnable]:
    text/template/parse.(*lexer).run(0xc00014a630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:228
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7f0967307840
    rcx    0x7f0966f59f47
    rdx    0x0
    rdi    0x2
    rsi    0x7f0963d06830
    rbp    0x5627e8439e7c
    rsp    0x7f0963d06830
    r8     0x0
    r9     0x7f0963d06830
    r10    0x8
    r11    0x246
    r12    0x5627e9cf3540
    r13    0x0
    r14    0x5627e841fd10
    r15    0x0
    rip    0x7f0966f59f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000458000)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000458000)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc000046000, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc000099f01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc00008a300)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [syscall, locked to thread]:
    reflect.MakeSlice(0x1d4e220, 0x181c100, 0x0, 0x4, 0x181c100, 0x0, 0x0)
    	/usr/local/go/src/reflect/value.go:2299 +0x85
    encoding/json.(*decodeState).array(0xc0004474a0, 0x181c100, 0xc0004559c8, 0x197, 0xc0004474c8, 0x5b)
    	/usr/local/go/src/encoding/json/decode.go:547 +0x716
    encoding/json.(*decodeState).value(0xc0004474a0, 0x181c100, 0xc0004559c8, 0x197, 0x181c100, 0xc0004559c8)
    	/usr/local/go/src/encoding/json/decode.go:360 +0x105
    encoding/json.(*decodeState).object(0xc0004474a0, 0x1815520, 0xc0004558c0, 0x16, 0xc0004474c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004474a0, 0x1815520, 0xc0004558c0, 0x16, 0xc0003cdbc8, 0x6fa34b)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0004474a0, 0x1815520, 0xc0004558c0, 0xc0004474c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc00036cbd6, 0xc9, 0xb22a, 0x1815520, 0xc0004558c0, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000451440, 0xc00036cbd6, 0xc9, 0xb22a, 0x7f0301f6a540, 0xc000451440)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc000446840, 0x19ce1a0, 0xc000451440, 0x199, 0xc000446868, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc000446840, 0x19ce1a0, 0xc000451440, 0x199, 0xc000455680, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000446840, 0x18bc100, 0xc000450ce0, 0x195, 0xc000446868, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000446840, 0x18bc100, 0xc000450ce0, 0x195, 0x18bc100, 0xc000450ce0)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000446840, 0x1815520, 0xc000450b40, 0x16, 0xc000446868, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000446840, 0x1815520, 0xc000450b40, 0x16, 0xc0003ce888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc000446840, 0x1815520, 0xc000450b40, 0xc000446868, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc00036c7b5, 0x9e1, 0xb64b, 0x1815520, 0xc000450b40, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00039ed80, 0xc00036c7b5, 0x9e1, 0xb64b, 0x7f0301f6a540, 0xc00039ed80)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e48f0, 0x19ce1a0, 0xc00039ed80, 0x199, 0xc0000e4918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e48f0, 0x19ce1a0, 0xc00039ed80, 0x199, 0xc000450900, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e48f0, 0x18e59a0, 0xc000332d08, 0x195, 0xc0000e4918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e48f0, 0x18e59a0, 0xc000332d08, 0x195, 0x18e59a0, 0xc000332d08)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e48f0, 0x1815520, 0xc000332b40, 0x16, 0xc0000e4918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e48f0, 0x1815520, 0xc000332b40, 0x16, 0xc000123548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e48f0, 0x1815520, 0xc000332b40, 0xc0000e4918, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000368000, 0x9d38, 0xfe00, 0x1815520, 0xc000332b40, 0x7f030212ca90, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000332900, 0xc000368000, 0x9d38, 0xfe00, 0x7f0301f6a540, 0xc000332900)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e4840, 0x1a89300, 0xc000332900, 0x16, 0xc0000e4868, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e4840, 0x1a89300, 0xc000332900, 0x16, 0xc000123c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e4840, 0x1a89300, 0xc000332900, 0xc0000e4868, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000368000, 0x9d39, 0xfe00, 0x1a89300, 0xc000332900, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc00031db30, 0xc000123d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc00031da70, 0xc00031da40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 18 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f54b3986f47 m=5 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f54b3986f47
    stack: frame={sp:0x7f54abffe830, fp:0x0} stack=[0x7f54ab7ff288,0x7f54abffee88)
    00007f54abffe730:  00007f54abffeaf0  00007f54b3f6f75a 
    00007f54abffe740:  000000000000000b  0000000000000000 
    00007f54abffe750:  00007f54aaffd700  000055a6ff002148 
    00007f54abffe760:  00007f54abffec40  000055a700e233f0 
    00007f54abffe770:  0000000000000000  000055a6fe4ded10 
    00007f54abffe780:  0000000000000000  00007f54b3f67f13 
    00007f54abffe790:  0000000000000005  0000000000000000 
    00007f54abffe7a0:  2525252525252525  2525252525252525 
    00007f54abffe7b0:  00000000000000ff  0000000000000000 
    00007f54abffe7c0:  00000000000000ff  0000000000000000 
    00007f54abffe7d0:  00007f5494000010  00007f5494000010 
    00007f54abffe7e0:  000000000000000e  000000000000000e 
    00007f54abffe7f0:  0000000000000000  0000000000000000 
    00007f54abffe800:  ffffffffffffffff  ffffffffffffffff 
    00007f54abffe810:  0000000400000004  0000000400000004 
    00007f54abffe820:  20636f6c6c616d00  203a64656c696166 
    00007f54abffe830: <0000000000000000  0000000000000000 
    00007f54abffe840:  0000000000000000  0000000000000000 
    00007f54abffe850:  0000000000000000  0000000000000000 
    00007f54abffe860:  0000000000000000  0000000000000000 
    00007f54abffe870:  0000000000000000  0000000000000000 
    00007f54abffe880:  0000000000000000  0000000000000000 
    00007f54abffe890:  0000000000000000  0000000000000000 
    00007f54abffe8a0:  0000000000000000  0000000000000000 
    00007f54abffe8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f54abffe8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f54abffe8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f54abffe8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f54abffe8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f54abffe900:  ffffffffffffffff  ffffffffffffffff 
    00007f54abffe910:  ffffffffffffffff  ffffffffffffffff 
    00007f54abffe920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f54b3986f47
    stack: frame={sp:0x7f54abffe830, fp:0x0} stack=[0x7f54ab7ff288,0x7f54abffee88)
    00007f54abffe730:  00007f54abffeaf0  00007f54b3f6f75a 
    00007f54abffe740:  000000000000000b  0000000000000000 
    00007f54abffe750:  00007f54aaffd700  000055a6ff002148 
    00007f54abffe760:  00007f54abffec40  000055a700e233f0 
    00007f54abffe770:  0000000000000000  000055a6fe4ded10 
    00007f54abffe780:  0000000000000000  00007f54b3f67f13 
    00007f54abffe790:  0000000000000005  0000000000000000 
    00007f54abffe7a0:  2525252525252525  2525252525252525 
    00007f54abffe7b0:  00000000000000ff  0000000000000000 
    00007f54abffe7c0:  00000000000000ff  0000000000000000 
    00007f54abffe7d0:  00007f5494000010  00007f5494000010 
    00007f54abffe7e0:  000000000000000e  000000000000000e 
    00007f54abffe7f0:  0000000000000000  0000000000000000 
    00007f54abffe800:  ffffffffffffffff  ffffffffffffffff 
    00007f54abffe810:  0000000400000004  0000000400000004 
    00007f54abffe820:  20636f6c6c616d00  203a64656c696166 
    00007f54abffe830: <0000000000000000  0000000000000000 
    00007f54abffe840:  0000000000000000  0000000000000000 
    00007f54abffe850:  0000000000000000  0000000000000000 
    00007f54abffe860:  0000000000000000  0000000000000000 
    00007f54abffe870:  0000000000000000  0000000000000000 
    00007f54abffe880:  0000000000000000  0000000000000000 
    00007f54abffe890:  0000000000000000  0000000000000000 
    00007f54abffe8a0:  0000000000000000  0000000000000000 
    00007f54abffe8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f54abffe8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f54abffe8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f54abffe8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f54abffe8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f54abffe900:  ffffffffffffffff  ffffffffffffffff 
    00007f54abffe910:  ffffffffffffffff  ffffffffffffffff 
    00007f54abffe920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).parse(0xc00012c500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:277 +0xbc6
    text/template/parse.(*Tree).Parse(0xc00012c500, 0x55a6fe38e440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001d66f0, 0xc000152340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x55a6fe3339b7, 0x4, 0x55a6fe38e440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000152340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc0000cd780, 0x55a6fe38e440, 0x16c, 0x4, 0xc0001195e8, 0x55a6ff01d760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 19 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 20 [runnable]:
    text/template/parse.(*lexer).run(0xc00015a630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:228
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7f54b3d34840
    rcx    0x7f54b3986f47
    rdx    0x0
    rdi    0x2
    rsi    0x7f54abffe830
    rbp    0x55a6fe4f8e7c
    rsp    0x7f54abffe830
    r8     0x0
    r9     0x7f54abffe830
    r10    0x8
    r11    0x246
    r12    0x55a700e233f0
    r13    0x0
    r14    0x55a6fe4ded10
    r15    0x0
    rip    0x7f54b3986f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
