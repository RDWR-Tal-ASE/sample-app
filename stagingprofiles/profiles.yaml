apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: 
    -----
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7fed02e74f47 m=0 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7fed02e74f47
    stack: frame={sp:0x7ffcd9e85b80, fp:0x0} stack=[0x7ffcd96871c0,0x7ffcd9e86200)
    00007ffcd9e85a80:  00007ffcd9e85e60  00007fed03455f13 
    00007ffcd9e85a90:  0000000000000005  00000000008661c8 
    00007ffcd9e85aa0:  00007ffcd9e85f90  00000000024303f0 
    00007ffcd9e85ab0:  0000000000000000  0000000000593e90 
    00007ffcd9e85ac0:  0000000000000000  00007fed03455f13 
    00007ffcd9e85ad0:  0000000000000005  0000000000000000 
    00007ffcd9e85ae0:  2525252525252525  2525252525252525 
    00007ffcd9e85af0:  00000000ff00ff00  0000000000000000 
    00007ffcd9e85b00:  00000000ff000000  0000000000000000 
    00007ffcd9e85b10:  0000000000000000  0000000000000000 
    00007ffcd9e85b20:  2f7273752f3a6e69  73752f3a6e696273 
    00007ffcd9e85b30:  752f3a6e69622f72  6c61636f6c2f7273 
    00007ffcd9e85b40:  73752f3a6e69622f  732f6e6962732f72 
    00007ffcd9e85b50:  2f3a656369767265  6e69622f70616e73 
    00007ffcd9e85b60:  6c6c616d00732520  656c69616620636f 
    00007ffcd9e85b70:  0000000000000000  0000000000000000 
    00007ffcd9e85b80: <0000000000000000  0000000000000000 
    00007ffcd9e85b90:  0000000000000000  0000000000000000 
    00007ffcd9e85ba0:  0000000000000000  0000000000000000 
    00007ffcd9e85bb0:  0000000000000000  0000000000000000 
    00007ffcd9e85bc0:  0000000000000000  0000000000000000 
    00007ffcd9e85bd0:  0000000000000000  0000000000000000 
    00007ffcd9e85be0:  0000000000000000  0000000000000000 
    00007ffcd9e85bf0:  00007fed03222560  00007fed03225bc0 
    00007ffcd9e85c00:  fffffffe7fffffff  ffffffffffffffff 
    00007ffcd9e85c10:  ffffffffffffffff  ffffffffffffffff 
    00007ffcd9e85c20:  ffffffffffffffff  ffffffffffffffff 
    00007ffcd9e85c30:  ffffffffffffffff  ffffffffffffffff 
    00007ffcd9e85c40:  ffffffffffffffff  ffffffffffffffff 
    00007ffcd9e85c50:  ffffffffffffffff  ffffffffffffffff 
    00007ffcd9e85c60:  ffffffffffffffff  ffffffffffffffff 
    00007ffcd9e85c70:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7fed02e74f47
    stack: frame={sp:0x7ffcd9e85b80, fp:0x0} stack=[0x7ffcd96871c0,0x7ffcd9e86200)
    00007ffcd9e85a80:  00007ffcd9e85e60  00007fed03455f13 
    00007ffcd9e85a90:  0000000000000005  00000000008661c8 
    00007ffcd9e85aa0:  00007ffcd9e85f90  00000000024303f0 
    00007ffcd9e85ab0:  0000000000000000  0000000000593e90 
    00007ffcd9e85ac0:  0000000000000000  00007fed03455f13 
    00007ffcd9e85ad0:  0000000000000005  0000000000000000 
    00007ffcd9e85ae0:  2525252525252525  2525252525252525 
    00007ffcd9e85af0:  00000000ff00ff00  0000000000000000 
    00007ffcd9e85b00:  00000000ff000000  0000000000000000 
    00007ffcd9e85b10:  0000000000000000  0000000000000000 
    00007ffcd9e85b20:  2f7273752f3a6e69  73752f3a6e696273 
    00007ffcd9e85b30:  752f3a6e69622f72  6c61636f6c2f7273 
    00007ffcd9e85b40:  73752f3a6e69622f  732f6e6962732f72 
    00007ffcd9e85b50:  2f3a656369767265  6e69622f70616e73 
    00007ffcd9e85b60:  6c6c616d00732520  656c69616620636f 
    00007ffcd9e85b70:  0000000000000000  0000000000000000 
    00007ffcd9e85b80: <0000000000000000  0000000000000000 
    00007ffcd9e85b90:  0000000000000000  0000000000000000 
    00007ffcd9e85ba0:  0000000000000000  0000000000000000 
    00007ffcd9e85bb0:  0000000000000000  0000000000000000 
    00007ffcd9e85bc0:  0000000000000000  0000000000000000 
    00007ffcd9e85bd0:  0000000000000000  0000000000000000 
    00007ffcd9e85be0:  0000000000000000  0000000000000000 
    00007ffcd9e85bf0:  00007fed03222560  00007fed03225bc0 
    00007ffcd9e85c00:  fffffffe7fffffff  ffffffffffffffff 
    00007ffcd9e85c10:  ffffffffffffffff  ffffffffffffffff 
    00007ffcd9e85c20:  ffffffffffffffff  ffffffffffffffff 
    00007ffcd9e85c30:  ffffffffffffffff  ffffffffffffffff 
    00007ffcd9e85c40:  ffffffffffffffff  ffffffffffffffff 
    00007ffcd9e85c50:  ffffffffffffffff  ffffffffffffffff 
    00007ffcd9e85c60:  ffffffffffffffff  ffffffffffffffff 
    00007ffcd9e85c70:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [running, locked to thread]:
    runtime.systemstack_switch()
    	/usr/lib/go-1.13/src/runtime/asm_amd64.s:330 fp=0xc00003c6c8 sp=0xc00003c6c0 pc=0x456b50
    runtime.newproc(0x0, 0x57a308)
    	/usr/lib/go-1.13/src/runtime/proc.go:3255 +0x6e fp=0xc00003c710 sp=0xc00003c6c8 pc=0x437e5e
    runtime.init.5()
    	/usr/lib/go-1.13/src/runtime/proc.go:242 +0x35 fp=0xc00003c730 sp=0xc00003c710 pc=0x430745
    runtime.doInit(0x874ae0)
    	/usr/lib/go-1.13/src/runtime/proc.go:5222 +0x8a fp=0xc00003c760 sp=0xc00003c730 pc=0x43c58a
    runtime.main()
    	/usr/lib/go-1.13/src/runtime/proc.go:150 +0xc3 fp=0xc00003c7e0 sp=0xc00003c760 pc=0x430433
    runtime.goexit()
    	/usr/lib/go-1.13/src/runtime/asm_amd64.s:1357 +0x1 fp=0xc00003c7e8 sp=0xc00003c7e0 pc=0x458c21
    
    rax    0x0
    rbx    0x7fed03222840
    rcx    0x7fed02e74f47
    rdx    0x0
    rdi    0x2
    rsi    0x7ffcd9e85b80
    rbp    0x59f2ca
    rsp    0x7ffcd9e85b80
    r8     0x0
    r9     0x7ffcd9e85b80
    r10    0x8
    r11    0x246
    r12    0x24303f0
    r13    0x0
    r14    0x593e90
    r15    0x0
    rip    0x7fed02e74f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    -----
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7ff411711f47 m=8 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7ff411711f47
    stack: frame={sp:0x7ff3f7ffe830, fp:0x0} stack=[0x7ff3f77ff288,0x7ff3f7ffee88)
    00007ff3f7ffe730:  00007ff3f7ffeaf0  00007ff411cfa75a 
    00007ff3f7ffe740:  000000000000000b  0000000000000000 
    00007ff3f7ffe750:  00007ff3f6bd1700  000055ba2f554148 
    00007ff3f7ffe760:  00007ff3f7ffec40  00007ff400000da0 
    00007ff3f7ffe770:  0000000000000000  000055ba2ea30d10 
    00007ff3f7ffe780:  0000000000000000  00007ff411cf2f13 
    00007ff3f7ffe790:  0000000000000005  0000000000000000 
    00007ff3f7ffe7a0:  2525252525252525  2525252525252525 
    00007ff3f7ffe7b0:  00000000000000ff  0000000000000000 
    00007ff3f7ffe7c0:  00000000000000ff  0000000000000000 
    00007ff3f7ffe7d0:  000000000000ff00  0000000000000000 
    00007ff3f7ffe7e0:  000055ba2e31749a <net.unixSocket+314>  000055ba2f02f300 
    00007ff3f7ffe7f0:  0000000000000000  0000000000000000 
    00007ff3f7ffe800:  0000000000000000  0000000000000000 
    00007ff3f7ffe810:  0000000000000000  0000000000000000 
    00007ff3f7ffe820:  20636f6c6c616d00  203a64656c696166 
    00007ff3f7ffe830: <0000000000000000  0000000000000000 
    00007ff3f7ffe840:  000000c00033c280  000000c0003e00b0 
    00007ff3f7ffe850:  0000000000000000  0000000000000000 
    00007ff3f7ffe860:  0000000000000000  0000000000000000 
    00007ff3f7ffe870:  0000000000000000  0000000000000000 
    00007ff3f7ffe880:  0000000000000000  0000000000000000 
    00007ff3f7ffe890:  0000000000000000  0000000000000000 
    00007ff3f7ffe8a0:  0000000000000000  0000000000000000 
    00007ff3f7ffe8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007ff3f7ffe8c0:  ffffffffffffffff  ffffffffffffffff 
    00007ff3f7ffe8d0:  ffffffffffffffff  ffffffffffffffff 
    00007ff3f7ffe8e0:  ffffffffffffffff  ffffffffffffffff 
    00007ff3f7ffe8f0:  ffffffffffffffff  ffffffffffffffff 
    00007ff3f7ffe900:  ffffffffffffffff  ffffffffffffffff 
    00007ff3f7ffe910:  ffffffffffffffff  ffffffffffffffff 
    00007ff3f7ffe920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7ff411711f47
    stack: frame={sp:0x7ff3f7ffe830, fp:0x0} stack=[0x7ff3f77ff288,0x7ff3f7ffee88)
    00007ff3f7ffe730:  00007ff3f7ffeaf0  00007ff411cfa75a 
    00007ff3f7ffe740:  000000000000000b  0000000000000000 
    00007ff3f7ffe750:  00007ff3f6bd1700  000055ba2f554148 
    00007ff3f7ffe760:  00007ff3f7ffec40  00007ff400000da0 
    00007ff3f7ffe770:  0000000000000000  000055ba2ea30d10 
    00007ff3f7ffe780:  0000000000000000  00007ff411cf2f13 
    00007ff3f7ffe790:  0000000000000005  0000000000000000 
    00007ff3f7ffe7a0:  2525252525252525  2525252525252525 
    00007ff3f7ffe7b0:  00000000000000ff  0000000000000000 
    00007ff3f7ffe7c0:  00000000000000ff  0000000000000000 
    00007ff3f7ffe7d0:  000000000000ff00  0000000000000000 
    00007ff3f7ffe7e0:  000055ba2e31749a <net.unixSocket+314>  000055ba2f02f300 
    00007ff3f7ffe7f0:  0000000000000000  0000000000000000 
    00007ff3f7ffe800:  0000000000000000  0000000000000000 
    00007ff3f7ffe810:  0000000000000000  0000000000000000 
    00007ff3f7ffe820:  20636f6c6c616d00  203a64656c696166 
    00007ff3f7ffe830: <0000000000000000  0000000000000000 
    00007ff3f7ffe840:  000000c00033c280  000000c0003e00b0 
    00007ff3f7ffe850:  0000000000000000  0000000000000000 
    00007ff3f7ffe860:  0000000000000000  0000000000000000 
    00007ff3f7ffe870:  0000000000000000  0000000000000000 
    00007ff3f7ffe880:  0000000000000000  0000000000000000 
    00007ff3f7ffe890:  0000000000000000  0000000000000000 
    00007ff3f7ffe8a0:  0000000000000000  0000000000000000 
    00007ff3f7ffe8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007ff3f7ffe8c0:  ffffffffffffffff  ffffffffffffffff 
    00007ff3f7ffe8d0:  ffffffffffffffff  ffffffffffffffff 
    00007ff3f7ffe8e0:  ffffffffffffffff  ffffffffffffffff 
    00007ff3f7ffe8f0:  ffffffffffffffff  ffffffffffffffff 
    00007ff3f7ffe900:  ffffffffffffffff  ffffffffffffffff 
    00007ff3f7ffe910:  ffffffffffffffff  ffffffffffffffff 
    00007ff3f7ffe920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [runnable]:
    github.com/snapcore/snapd/client.(*Client).do(0xc00010ea80, 0x55ba2e884ee7, 0x3, 0x55ba2e88ed78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x55ba2eedef40, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:394 +0x2f9
    github.com/snapcore/snapd/client.(*Client).doSyncWithOpts(0xc00010ea80, 0x55ba2e884ee7, 0x3, 0x55ba2e88ed78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x55ba2ee7a9a0, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:492 +0xf6
    github.com/snapcore/snapd/client.(*Client).SysInfo(0xc00010ea80, 0x46, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/client/client.go:727 +0xd4
    main.maybeWaitForSecurityProfileRegeneration(0xc00010ea80, 0xc00033c280, 0xd)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:200 +0x1aa
    main.(*cmdRun).Execute(0xc00023feb8, 0xc000032190, 0x2, 0x3, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:240 +0x172
    main.main()
    	/build/snapd/parts/snapd-deb/build/cmd/snap/main.go:482 +0x581
    
    goroutine 6 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    rax    0x0
    rbx    0x7ff411abf840
    rcx    0x7ff411711f47
    rdx    0x0
    rdi    0x2
    rsi    0x7ff3f7ffe830
    rbp    0x55ba2ea4ae7c
    rsp    0x7ff3f7ffe830
    r8     0x0
    r9     0x7ff3f7ffe830
    r10    0x8
    r11    0x246
    r12    0x7ff400000da0
    r13    0x0
    r14    0x55ba2ea30d10
    r15    0x0
    rip    0x7ff411711f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000480000)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000480000)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc00004d800, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc00006df01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc000458600)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [runnable, locked to thread]:
    reflect.(*rtype).ptrTo(0x1897a80, 0xc00043d2b0)
    	/usr/local/go/src/reflect/type.go:1380 +0x3df
    reflect.New(0x1d4e220, 0x1897a80, 0x1897a80, 0xc000371113, 0x4)
    	/usr/local/go/src/reflect/value.go:2387 +0x5d
    encoding/json.(*decodeState).object(0xc000472bb0, 0x1811e60, 0xc0003aa518, 0x16, 0xc000472bd8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:689 +0x13a5
    encoding/json.(*decodeState).value(0xc000472bb0, 0x1811e60, 0xc0003aa518, 0x16, 0xc0003cdbc8, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc000472bb0, 0x1811e60, 0xc0003aa518, 0xc000472bd8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000371106, 0x32, 0xacfa, 0x1811e60, 0xc0003aa518, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000453200, 0xc000371106, 0x32, 0xacfa, 0x7fc33c845400, 0xc000453200)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:565 +0x18b
    encoding/json.(*decodeState).object(0xc000446840, 0x19ce1a0, 0xc000453200, 0x199, 0xc000446868, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc000446840, 0x19ce1a0, 0xc000453200, 0x199, 0xc000475b00, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000446840, 0x18bc100, 0xc000452aa0, 0x195, 0xc000446868, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000446840, 0x18bc100, 0xc000452aa0, 0x195, 0x18bc100, 0xc000452aa0)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000446840, 0x1815520, 0xc000452900, 0x16, 0xc000446868, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000446840, 0x1815520, 0xc000452900, 0x16, 0xc0003ce888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc000446840, 0x1815520, 0xc000452900, 0xc000446868, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003707b5, 0x9e1, 0xb64b, 0x1815520, 0xc000452900, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00039eb40, 0xc0003707b5, 0x9e1, 0xb64b, 0x7fc33c845400, 0xc00039eb40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e48f0, 0x19ce1a0, 0xc00039eb40, 0x199, 0xc0000e4918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e48f0, 0x19ce1a0, 0xc00039eb40, 0x199, 0xc0004526c0, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e48f0, 0x18e59a0, 0xc000330ac8, 0x195, 0xc0000e4918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e48f0, 0x18e59a0, 0xc000330ac8, 0x195, 0x18e59a0, 0xc000330ac8)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e48f0, 0x1815520, 0xc000330900, 0x16, 0xc0000e4918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e48f0, 0x1815520, 0xc000330900, 0x16, 0xc000123548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e48f0, 0x1815520, 0xc000330900, 0xc0000e4918, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc00036c000, 0x9d38, 0xfe00, 0x1815520, 0xc000330900, 0x7fc33ca07668, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0003306c0, 0xc00036c000, 0x9d38, 0xfe00, 0x7fc33c845400, 0xc0003306c0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e4840, 0x1a89300, 0xc0003306c0, 0x16, 0xc0000e4868, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e4840, 0x1a89300, 0xc0003306c0, 0x16, 0xc000123c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e4840, 0x1a89300, 0xc0003306c0, 0xc0000e4868, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc00036c000, 0x9d39, 0xfe00, 0x1a89300, 0xc0003306c0, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc00031db30, 0xc000123d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc00031da70, 0xc00031da40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 18 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f6f5d230f47 m=9 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f6f5d230f47
    stack: frame={sp:0x7f6f42dea830, fp:0x0} stack=[0x7f6f425eb288,0x7f6f42deae88)
    00007f6f42dea730:  00007f6f42deaaf0  00007f6f5d81975a 
    00007f6f42dea740:  000000000000000b  0000000000000000 
    00007f6f42dea750:  00007f6f425ea700  0000558ccabee148 
    00007f6f42dea760:  00007f6f42deac40  00007f6f44000c50 
    00007f6f42dea770:  0000000000000000  0000558cca0cad10 
    00007f6f42dea780:  0000000000000000  00007f6f5d811f13 
    00007f6f42dea790:  0000000000000005  0000000000000000 
    00007f6f42dea7a0:  2525252525252525  2525252525252525 
    00007f6f42dea7b0:  00000000000000ff  0000000000000000 
    00007f6f42dea7c0:  00000000000000ff  0000000000000000 
    00007f6f42dea7d0:  000000000000ff00  0000000000000000 
    00007f6f42dea7e0:  0000558cc99b149a <net.unixSocket+314>  0000558cca6c9300 
    00007f6f42dea7f0:  0000000000000000  0000000000000000 
    00007f6f42dea800:  0000000000000000  0000000000000000 
    00007f6f42dea810:  0000000000000000  0000000000000000 
    00007f6f42dea820:  20636f6c6c616d00  203a64656c696166 
    00007f6f42dea830: <0000000000000000  0000000000000000 
    00007f6f42dea840:  000000c00033c280  000000c0003b1760 
    00007f6f42dea850:  0000000000000000  0000000000000000 
    00007f6f42dea860:  0000000000000000  0000000000000000 
    00007f6f42dea870:  0000000000000000  0000000000000000 
    00007f6f42dea880:  0000000000000000  0000000000000000 
    00007f6f42dea890:  0000000000000000  0000000000000000 
    00007f6f42dea8a0:  0000000000000000  0000000000000000 
    00007f6f42dea8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f6f42dea8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f6f42dea8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f6f42dea8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f6f42dea8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f6f42dea900:  ffffffffffffffff  ffffffffffffffff 
    00007f6f42dea910:  ffffffffffffffff  ffffffffffffffff 
    00007f6f42dea920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f6f5d230f47
    stack: frame={sp:0x7f6f42dea830, fp:0x0} stack=[0x7f6f425eb288,0x7f6f42deae88)
    00007f6f42dea730:  00007f6f42deaaf0  00007f6f5d81975a 
    00007f6f42dea740:  000000000000000b  0000000000000000 
    00007f6f42dea750:  00007f6f425ea700  0000558ccabee148 
    00007f6f42dea760:  00007f6f42deac40  00007f6f44000c50 
    00007f6f42dea770:  0000000000000000  0000558cca0cad10 
    00007f6f42dea780:  0000000000000000  00007f6f5d811f13 
    00007f6f42dea790:  0000000000000005  0000000000000000 
    00007f6f42dea7a0:  2525252525252525  2525252525252525 
    00007f6f42dea7b0:  00000000000000ff  0000000000000000 
    00007f6f42dea7c0:  00000000000000ff  0000000000000000 
    00007f6f42dea7d0:  000000000000ff00  0000000000000000 
    00007f6f42dea7e0:  0000558cc99b149a <net.unixSocket+314>  0000558cca6c9300 
    00007f6f42dea7f0:  0000000000000000  0000000000000000 
    00007f6f42dea800:  0000000000000000  0000000000000000 
    00007f6f42dea810:  0000000000000000  0000000000000000 
    00007f6f42dea820:  20636f6c6c616d00  203a64656c696166 
    00007f6f42dea830: <0000000000000000  0000000000000000 
    00007f6f42dea840:  000000c00033c280  000000c0003b1760 
    00007f6f42dea850:  0000000000000000  0000000000000000 
    00007f6f42dea860:  0000000000000000  0000000000000000 
    00007f6f42dea870:  0000000000000000  0000000000000000 
    00007f6f42dea880:  0000000000000000  0000000000000000 
    00007f6f42dea890:  0000000000000000  0000000000000000 
    00007f6f42dea8a0:  0000000000000000  0000000000000000 
    00007f6f42dea8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f6f42dea8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f6f42dea8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f6f42dea8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f6f42dea8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f6f42dea900:  ffffffffffffffff  ffffffffffffffff 
    00007f6f42dea910:  ffffffffffffffff  ffffffffffffffff 
    00007f6f42dea920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [sleep]:
    runtime.goparkunlock(...)
    	/usr/lib/go-1.13/src/runtime/proc.go:310
    time.Sleep(0x3b9aca00)
    	/usr/lib/go-1.13/src/runtime/time.go:105 +0x15d
    main.maybeWaitForSecurityProfileRegeneration(0xc000110a80, 0xc00033c280, 0xd)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:204 +0x185
    main.(*cmdRun).Execute(0xc00023feb8, 0xc000032190, 0x2, 0x3, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:240 +0x172
    main.main()
    	/build/snapd/parts/snapd-deb/build/cmd/snap/main.go:482 +0x581
    
    goroutine 6 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 103 [runnable]:
    context.WithDeadline.func2()
    	/usr/lib/go-1.13/src/context/context.go:412
    created by time.goFunc
    	/usr/lib/go-1.13/src/time/sleep.go:168 +0x46
    
    rax    0x0
    rbx    0x7f6f5d5de840
    rcx    0x7f6f5d230f47
    rdx    0x0
    rdi    0x2
    rsi    0x7f6f42dea830
    rbp    0x558cca0e4e7c
    rsp    0x7f6f42dea830
    r8     0x0
    r9     0x7f6f42dea830
    r10    0x8
    r11    0x246
    r12    0x7f6f44000c50
    r13    0x0
    r14    0x558cca0cad10
    r15    0x0
    rip    0x7f6f5d230f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
