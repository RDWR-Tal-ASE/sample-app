apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7ff532982f47 m=6 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7ff532982f47
    stack: frame={sp:0x7ff52e72d830, fp:0x0} stack=[0x7ff52df2e288,0x7ff52e72de88)
    00007ff52e72d730:  00007ff52e72daf0  00007ff532f6b75a 
    00007ff52e72d740:  000000000000000b  0000000000000000 
    00007ff52e72d750:  00007ff52d72c700  000055da24912148 
    00007ff52e72d760:  00007ff52e72dc40  000055da253c77e0 
    00007ff52e72d770:  0000000000000000  000055da23deed10 
    00007ff52e72d780:  0000000000000000  00007ff532f63f13 
    00007ff52e72d790:  0000000000000005  0000000000000000 
    00007ff52e72d7a0:  2525252525252525  2525252525252525 
    00007ff52e72d7b0:  00000000000000ff  0000000000000000 
    00007ff52e72d7c0:  00000000000000ff  0000000000000000 
    00007ff52e72d7d0:  0000000000000002  0000000000000003 
    00007ff52e72d7e0:  000000000000000e  000000000000000e 
    00007ff52e72d7f0:  0000000000000000  0000000000000000 
    00007ff52e72d800:  ffffffffffffffff  ffffffffffffffff 
    00007ff52e72d810:  0000000400000004  0000000400000004 
    00007ff52e72d820:  20636f6c6c616d00  203a64656c696166 
    00007ff52e72d830: <0000000000000000  0000000000000000 
    00007ff52e72d840:  0000000000000000  0000000200000000 
    00007ff52e72d850:  000000000000000b  0000000000000000 
    00007ff52e72d860:  0000000000000000  0000000000000000 
    00007ff52e72d870:  0000000000000000  000000000000000a 
    00007ff52e72d880:  0000000000000000  000055da24928380 
    00007ff52e72d890:  0000000000000004  0000000000000004 
    00007ff52e72d8a0:  0000000000000000  0000000000000000 
    00007ff52e72d8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007ff52e72d8c0:  ffffffffffffffff  ffffffffffffffff 
    00007ff52e72d8d0:  ffffffffffffffff  ffffffffffffffff 
    00007ff52e72d8e0:  ffffffffffffffff  ffffffffffffffff 
    00007ff52e72d8f0:  ffffffffffffffff  ffffffffffffffff 
    00007ff52e72d900:  ffffffffffffffff  ffffffffffffffff 
    00007ff52e72d910:  ffffffffffffffff  ffffffffffffffff 
    00007ff52e72d920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7ff532982f47
    stack: frame={sp:0x7ff52e72d830, fp:0x0} stack=[0x7ff52df2e288,0x7ff52e72de88)
    00007ff52e72d730:  00007ff52e72daf0  00007ff532f6b75a 
    00007ff52e72d740:  000000000000000b  0000000000000000 
    00007ff52e72d750:  00007ff52d72c700  000055da24912148 
    00007ff52e72d760:  00007ff52e72dc40  000055da253c77e0 
    00007ff52e72d770:  0000000000000000  000055da23deed10 
    00007ff52e72d780:  0000000000000000  00007ff532f63f13 
    00007ff52e72d790:  0000000000000005  0000000000000000 
    00007ff52e72d7a0:  2525252525252525  2525252525252525 
    00007ff52e72d7b0:  00000000000000ff  0000000000000000 
    00007ff52e72d7c0:  00000000000000ff  0000000000000000 
    00007ff52e72d7d0:  0000000000000002  0000000000000003 
    00007ff52e72d7e0:  000000000000000e  000000000000000e 
    00007ff52e72d7f0:  0000000000000000  0000000000000000 
    00007ff52e72d800:  ffffffffffffffff  ffffffffffffffff 
    00007ff52e72d810:  0000000400000004  0000000400000004 
    00007ff52e72d820:  20636f6c6c616d00  203a64656c696166 
    00007ff52e72d830: <0000000000000000  0000000000000000 
    00007ff52e72d840:  0000000000000000  0000000200000000 
    00007ff52e72d850:  000000000000000b  0000000000000000 
    00007ff52e72d860:  0000000000000000  0000000000000000 
    00007ff52e72d870:  0000000000000000  000000000000000a 
    00007ff52e72d880:  0000000000000000  000055da24928380 
    00007ff52e72d890:  0000000000000004  0000000000000004 
    00007ff52e72d8a0:  0000000000000000  0000000000000000 
    00007ff52e72d8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007ff52e72d8c0:  ffffffffffffffff  ffffffffffffffff 
    00007ff52e72d8d0:  ffffffffffffffff  ffffffffffffffff 
    00007ff52e72d8e0:  ffffffffffffffff  ffffffffffffffff 
    00007ff52e72d8f0:  ffffffffffffffff  ffffffffffffffff 
    00007ff52e72d900:  ffffffffffffffff  ffffffffffffffff 
    00007ff52e72d910:  ffffffffffffffff  ffffffffffffffff 
    00007ff52e72d920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).parse(0xc00010e500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:278 +0xa5b
    text/template/parse.(*Tree).Parse(0xc00010e500, 0x55da23c9e440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001b6720, 0xc000134350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x55da23c439b7, 0x4, 0x55da23c9e440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000134350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc00003d840, 0x55da23c9e440, 0x16c, 0x4, 0xc0000fb5e8, 0x55da2492d760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 6 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 7 [runnable]:
    text/template/parse.(*lexer).emit(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:157
    text/template/parse.lexRightDelim(0xc00013c630, 0x55da243bd8a8)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:345 +0x17f
    text/template/parse.(*lexer).run(0xc00013c630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:230 +0x39
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7ff532d30840
    rcx    0x7ff532982f47
    rdx    0x0
    rdi    0x2
    rsi    0x7ff52e72d830
    rbp    0x55da23e08e7c
    rsp    0x7ff52e72d830
    r8     0x0
    r9     0x7ff52e72d830
    r10    0x8
    r11    0x246
    r12    0x55da253c77e0
    r13    0x0
    r14    0x55da23deed10
    r15    0x0
    rip    0x7ff532982f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 7 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc0004cc000)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc0004cc000)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc00004d800, 0x6)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc000114001)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc000502180)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [syscall, locked to thread]:
    k8s.io/kubernetes/vendor/github.com/go-openapi/swag.(*NameProvider).GetJSONNames(0xc000380770, 0x1a89300, 0xc0004b5200, 0x0, 0x0, 0x0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/swag/json.go:265 +0x1da
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0004b5200, 0xc0003ee6b6, 0x39, 0xb74a, 0x7f7e80a2a680, 0xc0004b5200)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:574 +0x267
    encoding/json.(*decodeState).object(0xc0004b22c0, 0x19ce1a0, 0xc0004b5200, 0x199, 0xc0004b22e8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0004b22c0, 0x19ce1a0, 0xc0004b5200, 0x199, 0xc0004c5440, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004b22c0, 0x18bc100, 0xc0004b4aa0, 0x195, 0xc0004b22e8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004b22c0, 0x18bc100, 0xc0004b4aa0, 0x195, 0x18bc100, 0xc0004b4aa0)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004b22c0, 0x1815520, 0xc0004b4900, 0x16, 0xc0004b22e8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004b22c0, 0x1815520, 0xc0004b4900, 0x16, 0xc00044e888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0004b22c0, 0x1815520, 0xc0004b4900, 0xc0004b22e8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003eddc7, 0x9ca, 0xc039, 0x1815520, 0xc0004b4900, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00041f200, 0xc0003eddc7, 0x9ca, 0xc039, 0x7f7e80a2a680, 0xc00041f200)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e49a0, 0x19ce1a0, 0xc00041f200, 0x199, 0xc0000e49c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e49a0, 0x19ce1a0, 0xc00041f200, 0x199, 0xc0004b46c0, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e49a0, 0x18e59a0, 0xc0003b1188, 0x195, 0xc0000e49c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e49a0, 0x18e59a0, 0xc0003b1188, 0x195, 0x18e59a0, 0xc0003b1188)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e49a0, 0x1815520, 0xc0003b0fc0, 0x16, 0xc0000e49c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e49a0, 0x1815520, 0xc0003b0fc0, 0x16, 0xc0001a3548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e49a0, 0x1815520, 0xc0003b0fc0, 0xc0000e49c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003ea000, 0x9d38, 0xfe00, 0x1815520, 0xc0003b0fc0, 0x7f7e80a204e8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0003b0d80, 0xc0003ea000, 0x9d38, 0xfe00, 0x7f7e80a2a680, 0xc0003b0d80)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e48f0, 0x1a89300, 0xc0003b0d80, 0x16, 0xc0000e4918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e48f0, 0x1a89300, 0xc0003b0d80, 0x16, 0xc0001a3c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e48f0, 0x1a89300, 0xc0003b0d80, 0xc0000e4918, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003ea000, 0x9d39, 0xfe00, 0x1a89300, 0xc0003b0d80, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc00039bb30, 0xc0001a3d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc00039ba70, 0xc00039ba40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 18 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
