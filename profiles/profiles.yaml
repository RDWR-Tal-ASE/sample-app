apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f18328dff47 m=7 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f18328dff47
    stack: frame={sp:0x7f182e68a840, fp:0x0} stack=[0x7f182de8b288,0x7f182e68ae88)
    00007f182e68a740:  00007f182e68ab20  00007f1832ec0f13 
    00007f182e68a750:  0000000000000005  0000557e6a6d0148 
    00007f182e68a760:  00007f182e68ac50  0000557e6beb33f0 
    00007f182e68a770:  0000000000000000  0000557e69bacd10 
    00007f182e68a780:  0000000000000000  00007f1832ec0f13 
    00007f182e68a790:  0000000000000005  0000000000000000 
    00007f182e68a7a0:  2525252525252525  2525252525252525 
    00007f182e68a7b0:  00000000000000ff  0000000000000000 
    00007f182e68a7c0:  00000000000000ff  0000000000000000 
    00007f182e68a7d0:  00007f1814000010  00007f1814000010 
    00007f182e68a7e0:  000000000000000e  000000000000000e 
    00007f182e68a7f0:  0000000000000000  0000000000000000 
    00007f182e68a800:  ffffffffffffffff  ffffffffffffffff 
    00007f182e68a810:  0000000400000004  0000000400000004 
    00007f182e68a820:  20636f6c6c616d00  203a64656c696166 
    00007f182e68a830:  0000000000000000  0000000000000000 
    00007f182e68a840: <0000000000000000  0000000000000000 
    00007f182e68a850:  0000000000000000  0000000000000000 
    00007f182e68a860:  0000000000000000  0000000000000000 
    00007f182e68a870:  0000000000000000  0000000000000000 
    00007f182e68a880:  0000000000000000  0000000000000000 
    00007f182e68a890:  0000000000000000  0000000000000000 
    00007f182e68a8a0:  0000000000000000  0000000000000000 
    00007f182e68a8b0:  00007f1832c8d560  00007f1832c90bc0 
    00007f182e68a8c0:  fffffffe7fffffff  ffffffffffffffff 
    00007f182e68a8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f182e68a8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f182e68a8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f182e68a900:  ffffffffffffffff  ffffffffffffffff 
    00007f182e68a910:  ffffffffffffffff  ffffffffffffffff 
    00007f182e68a920:  ffffffffffffffff  ffffffffffffffff 
    00007f182e68a930:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f18328dff47
    stack: frame={sp:0x7f182e68a840, fp:0x0} stack=[0x7f182de8b288,0x7f182e68ae88)
    00007f182e68a740:  00007f182e68ab20  00007f1832ec0f13 
    00007f182e68a750:  0000000000000005  0000557e6a6d0148 
    00007f182e68a760:  00007f182e68ac50  0000557e6beb33f0 
    00007f182e68a770:  0000000000000000  0000557e69bacd10 
    00007f182e68a780:  0000000000000000  00007f1832ec0f13 
    00007f182e68a790:  0000000000000005  0000000000000000 
    00007f182e68a7a0:  2525252525252525  2525252525252525 
    00007f182e68a7b0:  00000000000000ff  0000000000000000 
    00007f182e68a7c0:  00000000000000ff  0000000000000000 
    00007f182e68a7d0:  00007f1814000010  00007f1814000010 
    00007f182e68a7e0:  000000000000000e  000000000000000e 
    00007f182e68a7f0:  0000000000000000  0000000000000000 
    00007f182e68a800:  ffffffffffffffff  ffffffffffffffff 
    00007f182e68a810:  0000000400000004  0000000400000004 
    00007f182e68a820:  20636f6c6c616d00  203a64656c696166 
    00007f182e68a830:  0000000000000000  0000000000000000 
    00007f182e68a840: <0000000000000000  0000000000000000 
    00007f182e68a850:  0000000000000000  0000000000000000 
    00007f182e68a860:  0000000000000000  0000000000000000 
    00007f182e68a870:  0000000000000000  0000000000000000 
    00007f182e68a880:  0000000000000000  0000000000000000 
    00007f182e68a890:  0000000000000000  0000000000000000 
    00007f182e68a8a0:  0000000000000000  0000000000000000 
    00007f182e68a8b0:  00007f1832c8d560  00007f1832c90bc0 
    00007f182e68a8c0:  fffffffe7fffffff  ffffffffffffffff 
    00007f182e68a8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f182e68a8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f182e68a8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f182e68a900:  ffffffffffffffff  ffffffffffffffff 
    00007f182e68a910:  ffffffffffffffff  ffffffffffffffff 
    00007f182e68a920:  ffffffffffffffff  ffffffffffffffff 
    00007f182e68a930:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).parse(0xc00011c500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:278 +0xa5b
    text/template/parse.(*Tree).Parse(0xc00011c500, 0x557e69a5c440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001c4720, 0xc000142350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x557e69a019b7, 0x4, 0x557e69a5c440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000142350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc00003d840, 0x557e69a5c440, 0x16c, 0x4, 0xc0001095e8, 0x557e6a6eb760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 6 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 7 [runnable]:
    text/template/parse.(*lexer).emit(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:157
    text/template/parse.lexRightDelim(0xc00014a630, 0x557e6a17b8a8)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:345 +0x17f
    text/template/parse.(*lexer).run(0xc00014a630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:230 +0x39
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7f1832c8d840
    rcx    0x7f18328dff47
    rdx    0x0
    rdi    0x2
    rsi    0x7f182e68a840
    rbp    0x557e69bc6e7c
    rsp    0x7f182e68a840
    r8     0x0
    r9     0x7f182e68a840
    r10    0x8
    r11    0x246
    r12    0x557e6beb33f0
    r13    0x0
    r14    0x557e69bacd10
    r15    0x0
    rip    0x7f18328dff47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000062c00)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000062c00)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc00004b000, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0x43e401)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc00008a300)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [syscall, locked to thread]:
    reflect.MakeSlice(0x1d4e220, 0x181c100, 0x0, 0x4, 0x181c100, 0x0, 0x0)
    	/usr/local/go/src/reflect/value.go:2299 +0x85
    encoding/json.(*decodeState).array(0xc000445600, 0x181c100, 0xc000455548, 0x197, 0xc000445628, 0x5b)
    	/usr/local/go/src/encoding/json/decode.go:547 +0x716
    encoding/json.(*decodeState).value(0xc000445600, 0x181c100, 0xc000455548, 0x197, 0x181c100, 0xc000455548)
    	/usr/local/go/src/encoding/json/decode.go:360 +0x105
    encoding/json.(*decodeState).object(0xc000445600, 0x1815520, 0xc000455440, 0x16, 0xc000445628, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000445600, 0x1815520, 0xc000455440, 0x16, 0xc0003cdbc8, 0x6fa34b)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc000445600, 0x1815520, 0xc000455440, 0xc000445628, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc00036cbd6, 0xc9, 0xb22a, 0x1815520, 0xc000455440, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000450fc0, 0xc00036cbd6, 0xc9, 0xb22a, 0x7f4be7e1a680, 0xc000450fc0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0004449a0, 0x19ce1a0, 0xc000450fc0, 0x199, 0xc0004449c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0004449a0, 0x19ce1a0, 0xc000450fc0, 0x199, 0xc000455200, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004449a0, 0x18bc100, 0xc000450860, 0x195, 0xc0004449c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004449a0, 0x18bc100, 0xc000450860, 0x195, 0x18bc100, 0xc000450860)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004449a0, 0x1815520, 0xc0004506c0, 0x16, 0xc0004449c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004449a0, 0x1815520, 0xc0004506c0, 0x16, 0xc0003ce888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0004449a0, 0x1815520, 0xc0004506c0, 0xc0004449c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc00036c7b5, 0x9e1, 0xb64b, 0x1815520, 0xc0004506c0, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00039e900, 0xc00036c7b5, 0x9e1, 0xb64b, 0x7f4be7e1a680, 0xc00039e900)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e4a50, 0x19ce1a0, 0xc00039e900, 0x199, 0xc0000e4a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e4a50, 0x19ce1a0, 0xc00039e900, 0x199, 0xc000450480, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e4a50, 0x18e59a0, 0xc000332888, 0x195, 0xc0000e4a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e4a50, 0x18e59a0, 0xc000332888, 0x195, 0x18e59a0, 0xc000332888)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e4a50, 0x1815520, 0xc0003326c0, 0x16, 0xc0000e4a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e4a50, 0x1815520, 0xc0003326c0, 0x16, 0xc000123548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e4a50, 0x1815520, 0xc0003326c0, 0xc0000e4a78, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000368000, 0x9d38, 0xfe00, 0x1815520, 0xc0003326c0, 0x7f4be7fdc840, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000332480, 0xc000368000, 0x9d38, 0xfe00, 0x7f4be7e1a680, 0xc000332480)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e49a0, 0x1a89300, 0xc000332480, 0x16, 0xc0000e49c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e49a0, 0x1a89300, 0xc000332480, 0x16, 0xc000123c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e49a0, 0x1a89300, 0xc000332480, 0xc0000e49c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000368000, 0x9d39, 0xfe00, 0x1a89300, 0xc000332480, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc00031bb30, 0xc000123d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc00031ba70, 0xc00031ba40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 18 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
