apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: 
    -----
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7fed3cd8ff47 m=0 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7fed3cd8ff47
    stack: frame={sp:0x7ffe7a858ea0, fp:0x0} stack=[0x7ffe7a05a390,0x7ffe7a8593d0)
    00007ffe7a858da0:  00007fed3d13d420  00007fed3d13d420 
    00007ffe7a858db0:  0000000000000000  0000000000000000 
    00007ffe7a858dc0:  0000000000000000  0000000000000000 
    00007ffe7a858dd0:  0000000000000000  00000000008661c8 
    00007ffe7a858de0:  00007ffe7a8592b0  00000000013e2690 
    00007ffe7a858df0:  0000000000000000  0000000000593e90 
    00007ffe7a858e00:  0000000000000000  00007fed3d370f13 
    00007ffe7a858e10:  0000000000000005  0000000000000000 
    00007ffe7a858e20:  2525252525252525  2525252525252525 
    00007ffe7a858e30:  00000000ff00ff00  0000000000000000 
    00007ffe7a858e40:  00000000ff000000  0000000000000000 
    00007ffe7a858e50:  0000000000000000  0000000000000000 
    00007ffe7a858e60:  2f7273752f3a6e69  73752f3a6e696273 
    00007ffe7a858e70:  752f3a6e69622f72  6c61636f6c2f7273 
    00007ffe7a858e80:  73752f3a6e69622f  732f6e6962732f72 
    00007ffe7a858e90:  2f3a656369767265  6e69622f70616e73 
    00007ffe7a858ea0: <0000000000000000  656c69616620636f 
    00007ffe7a858eb0:  0000000000000000  0000000000000000 
    00007ffe7a858ec0:  0000000000000000  0000000000000000 
    00007ffe7a858ed0:  0000000000000000  0000000000000000 
    00007ffe7a858ee0:  0000000000000000  0000000000000000 
    00007ffe7a858ef0:  0000000000000000  0000000000000000 
    00007ffe7a858f00:  0000000000000000  0000000000000000 
    00007ffe7a858f10:  0000000000000000  0000000000000000 
    00007ffe7a858f20:  fffffffe7fffffff  ffffffffffffffff 
    00007ffe7a858f30:  ffffffffffffffff  ffffffffffffffff 
    00007ffe7a858f40:  ffffffffffffffff  ffffffffffffffff 
    00007ffe7a858f50:  ffffffffffffffff  ffffffffffffffff 
    00007ffe7a858f60:  ffffffffffffffff  ffffffffffffffff 
    00007ffe7a858f70:  ffffffffffffffff  ffffffffffffffff 
    00007ffe7a858f80:  ffffffffffffffff  ffffffffffffffff 
    00007ffe7a858f90:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7fed3cd8ff47
    stack: frame={sp:0x7ffe7a858ea0, fp:0x0} stack=[0x7ffe7a05a390,0x7ffe7a8593d0)
    00007ffe7a858da0:  00007fed3d13d420  00007fed3d13d420 
    00007ffe7a858db0:  0000000000000000  0000000000000000 
    00007ffe7a858dc0:  0000000000000000  0000000000000000 
    00007ffe7a858dd0:  0000000000000000  00000000008661c8 
    00007ffe7a858de0:  00007ffe7a8592b0  00000000013e2690 
    00007ffe7a858df0:  0000000000000000  0000000000593e90 
    00007ffe7a858e00:  0000000000000000  00007fed3d370f13 
    00007ffe7a858e10:  0000000000000005  0000000000000000 
    00007ffe7a858e20:  2525252525252525  2525252525252525 
    00007ffe7a858e30:  00000000ff00ff00  0000000000000000 
    00007ffe7a858e40:  00000000ff000000  0000000000000000 
    00007ffe7a858e50:  0000000000000000  0000000000000000 
    00007ffe7a858e60:  2f7273752f3a6e69  73752f3a6e696273 
    00007ffe7a858e70:  752f3a6e69622f72  6c61636f6c2f7273 
    00007ffe7a858e80:  73752f3a6e69622f  732f6e6962732f72 
    00007ffe7a858e90:  2f3a656369767265  6e69622f70616e73 
    00007ffe7a858ea0: <0000000000000000  656c69616620636f 
    00007ffe7a858eb0:  0000000000000000  0000000000000000 
    00007ffe7a858ec0:  0000000000000000  0000000000000000 
    00007ffe7a858ed0:  0000000000000000  0000000000000000 
    00007ffe7a858ee0:  0000000000000000  0000000000000000 
    00007ffe7a858ef0:  0000000000000000  0000000000000000 
    00007ffe7a858f00:  0000000000000000  0000000000000000 
    00007ffe7a858f10:  0000000000000000  0000000000000000 
    00007ffe7a858f20:  fffffffe7fffffff  ffffffffffffffff 
    00007ffe7a858f30:  ffffffffffffffff  ffffffffffffffff 
    00007ffe7a858f40:  ffffffffffffffff  ffffffffffffffff 
    00007ffe7a858f50:  ffffffffffffffff  ffffffffffffffff 
    00007ffe7a858f60:  ffffffffffffffff  ffffffffffffffff 
    00007ffe7a858f70:  ffffffffffffffff  ffffffffffffffff 
    00007ffe7a858f80:  ffffffffffffffff  ffffffffffffffff 
    00007ffe7a858f90:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [running, locked to thread]:
    runtime.asmcgocall(0x50e6e0, 0xc00003c708)
    	/usr/lib/go-1.13/src/runtime/asm_amd64.s:640 +0x42 fp=0xc00003c6f0 sp=0xc00003c6e8 pc=0x458372
    runtime.newm1(0xc000040e00)
    	/usr/lib/go-1.13/src/runtime/proc.go:1848 +0xa4 fp=0xc00003c730 sp=0xc00003c6f0 pc=0x4344b4
    runtime.newm(0x57a500, 0x0)
    	/usr/lib/go-1.13/src/runtime/proc.go:1832 +0x8f fp=0xc00003c760 sp=0xc00003c730 pc=0x43435f
    runtime.startTemplateThread(...)
    	/usr/lib/go-1.13/src/runtime/proc.go:1868
    runtime.main()
    	/usr/lib/go-1.13/src/runtime/proc.go:186 +0x2c3 fp=0xc00003c7e0 sp=0xc00003c760 pc=0x430633
    runtime.goexit()
    	/usr/lib/go-1.13/src/runtime/asm_amd64.s:1357 +0x1 fp=0xc00003c7e8 sp=0xc00003c7e0 pc=0x458c21
    
    rax    0x0
    rbx    0x7fed3d13d840
    rcx    0x7fed3cd8ff47
    rdx    0x0
    rdi    0x2
    rsi    0x7ffe7a858ea0
    rbp    0x59f2ca
    rsp    0x7ffe7a858ea0
    r8     0x0
    r9     0x7ffe7a858ea0
    r10    0x8
    r11    0x246
    r12    0x13e2690
    r13    0x0
    r14    0x593e90
    r15    0x0
    rip    0x7fed3cd8ff47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    -----
    Error: bad file '-': yaml: line 11: mapping values are not allowed in this context
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 10 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    runtime: failed to create new OS thread (have 11 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000088400)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000088400)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc000057800, 0x9)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc000095f01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.mstart1()
    	/usr/local/go/src/runtime/proc.go:1179 +0x93
    runtime.mstart()
    	/usr/local/go/src/runtime/proc.go:1137 +0x6e
    
    goroutine 1 [runnable, locked to thread]:
    regexp/syntax.(*parser).parseUnicodeClass(0xc00009d560, 0x1b32415, 0x46, 0xc00023f9a0, 0x0, 0x2, 0xc00079fc58, 0x46e207, 0x7efc5f81ca20, 0x48, ...)
    	/usr/local/go/src/regexp/syntax/parse.go:1453 +0x918
    regexp/syntax.(*parser).parseClass(0xc00009d560, 0x1b32414, 0x47, 0x60, 0xa0, 0x7efc864ad7d0, 0xc00017da40)
    	/usr/local/go/src/regexp/syntax/parse.go:1568 +0x265
    regexp/syntax.Parse(0x1b32414, 0x47, 0xc0002a00d4, 0xc0004569d0, 0xc0002ac750, 0xc00079fdf0)
    	/usr/local/go/src/regexp/syntax/parse.go:768 +0xceb
    regexp.compile(0x1b32414, 0x47, 0xd4, 0xc00079fe50, 0x13c9ebb, 0xc00043dae0)
    	/usr/local/go/src/regexp/regexp.go:170 +0x5a
    regexp.Compile(...)
    	/usr/local/go/src/regexp/regexp.go:133
    regexp.MustCompile(0x1b32414, 0x47, 0x1)
    	/usr/local/go/src/regexp/regexp.go:309 +0x4b
    k8s.io/kubernetes/vendor/github.com/docker/distribution/reference.init()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/docker/distribution/reference/regexp.go:44 +0x69e
    
    goroutine 6 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000601c00)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000601c00)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x0, 0xc000048800, 0xa)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0xc000048800, 0x2a6cc00)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.handoffp(0xc000048800)
    	/usr/local/go/src/runtime/proc.go:2001 +0x52
    runtime.stoplockedm()
    	/usr/local/go/src/runtime/proc.go:2075 +0xf7
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2611 +0x48c
    runtime.goschedImpl(0xc000000180)
    	/usr/local/go/src/runtime/proc.go:2860 +0xda
    runtime.gopreempt_m(0xc000000180)
    	/usr/local/go/src/runtime/proc.go:2888 +0x34
    runtime.newstack()
    	/usr/local/go/src/runtime/stack.go:1047 +0x1bc
    runtime.morestack()
    	/usr/local/go/src/runtime/asm_amd64.s:449 +0x8f
