apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f2e46a9df47 m=4 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f2e46a9df47
    stack: frame={sp:0x7f2e4384a820, fp:0x0} stack=[0x7f2e4304b288,0x7f2e4384ae88)
    00007f2e4384a720:  0000000000000000  00007f2e46e52c58 
    00007f2e4384a730:  00007f2e4384aae0  00007f2e4708675a 
    00007f2e4384a740:  000000000000000b  0000000000000000 
    00007f2e4384a750:  00007f2e416a6700  0000556dd4fc6148 
    00007f2e4384a760:  00007f2e4384ac30  0000556dd6963540 
    00007f2e4384a770:  0000000000000000  0000556dd44a2d10 
    00007f2e4384a780:  0000000000000000  00007f2e4707ef13 
    00007f2e4384a790:  0000000000000005  0000000000000000 
    00007f2e4384a7a0:  2525252525252525  2525252525252525 
    00007f2e4384a7b0:  00000000000000ff  0000000000000000 
    00007f2e4384a7c0:  00000000000000ff  0000000000000000 
    00007f2e4384a7d0:  ff000000000000ff  00000000ff000000 
    00007f2e4384a7e0:  000000000000000e  000000000000000e 
    00007f2e4384a7f0:  0000000000000000  0000000000000000 
    00007f2e4384a800:  ffffffffffffffff  ffffffffffffffff 
    00007f2e4384a810:  0000000400000004  0000000400000004 
    00007f2e4384a820: <0000000000000000  203a64656c696166 
    00007f2e4384a830:  0000000000000000  0000000000000000 
    00007f2e4384a840:  0000000000000000  0000000000000000 
    00007f2e4384a850:  0000000000000000  0000000000000000 
    00007f2e4384a860:  0000000000000000  0000000000000000 
    00007f2e4384a870:  0000000000000000  0000000000000000 
    00007f2e4384a880:  0000000000000000  0000000000000000 
    00007f2e4384a890:  0000000000000000  0000000000000000 
    00007f2e4384a8a0:  fffffffe7fffffff  ffffffffffffffff 
    00007f2e4384a8b0:  ffffffffffffffff  ffffffffffffffff 
    00007f2e4384a8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f2e4384a8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f2e4384a8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f2e4384a8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f2e4384a900:  ffffffffffffffff  ffffffffffffffff 
    00007f2e4384a910:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f2e46a9df47
    stack: frame={sp:0x7f2e4384a820, fp:0x0} stack=[0x7f2e4304b288,0x7f2e4384ae88)
    00007f2e4384a720:  0000000000000000  00007f2e46e52c58 
    00007f2e4384a730:  00007f2e4384aae0  00007f2e4708675a 
    00007f2e4384a740:  000000000000000b  0000000000000000 
    00007f2e4384a750:  00007f2e416a6700  0000556dd4fc6148 
    00007f2e4384a760:  00007f2e4384ac30  0000556dd6963540 
    00007f2e4384a770:  0000000000000000  0000556dd44a2d10 
    00007f2e4384a780:  0000000000000000  00007f2e4707ef13 
    00007f2e4384a790:  0000000000000005  0000000000000000 
    00007f2e4384a7a0:  2525252525252525  2525252525252525 
    00007f2e4384a7b0:  00000000000000ff  0000000000000000 
    00007f2e4384a7c0:  00000000000000ff  0000000000000000 
    00007f2e4384a7d0:  ff000000000000ff  00000000ff000000 
    00007f2e4384a7e0:  000000000000000e  000000000000000e 
    00007f2e4384a7f0:  0000000000000000  0000000000000000 
    00007f2e4384a800:  ffffffffffffffff  ffffffffffffffff 
    00007f2e4384a810:  0000000400000004  0000000400000004 
    00007f2e4384a820: <0000000000000000  203a64656c696166 
    00007f2e4384a830:  0000000000000000  0000000000000000 
    00007f2e4384a840:  0000000000000000  0000000000000000 
    00007f2e4384a850:  0000000000000000  0000000000000000 
    00007f2e4384a860:  0000000000000000  0000000000000000 
    00007f2e4384a870:  0000000000000000  0000000000000000 
    00007f2e4384a880:  0000000000000000  0000000000000000 
    00007f2e4384a890:  0000000000000000  0000000000000000 
    00007f2e4384a8a0:  fffffffe7fffffff  ffffffffffffffff 
    00007f2e4384a8b0:  ffffffffffffffff  ffffffffffffffff 
    00007f2e4384a8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f2e4384a8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f2e4384a8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f2e4384a8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f2e4384a900:  ffffffffffffffff  ffffffffffffffff 
    00007f2e4384a910:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [select]:
    net/http.(*persistConn).roundTrip(0xc00036f560, 0xc000366b70, 0x0, 0x0, 0x0)
    	/usr/lib/go-1.13/src/net/http/transport.go:2431 +0x772
    net/http.(*Transport).roundTrip(0xc000326280, 0xc00012d000, 0xc0003424b0, 0xc000251190, 0x500556dd3b487ca)
    	/usr/lib/go-1.13/src/net/http/transport.go:535 +0x9b8
    net/http.(*Transport).RoundTrip(0xc000326280, 0xc00012d000, 0xc000326280, 0x0, 0x0)
    	/usr/lib/go-1.13/src/net/http/roundtrip.go:17 +0x37
    net/http.send(0xc00012d000, 0x556dd4a8a5a0, 0xc000326280, 0x0, 0x0, 0x0, 0xc0000c25f0, 0x0, 0x1, 0x0)
    	/usr/lib/go-1.13/src/net/http/client.go:250 +0x445
    net/http.(*Client).send(0xc0002eb7d0, 0xc00012d000, 0x0, 0x0, 0x0, 0xc0000c25f0, 0x0, 0x1, 0xc000000000)
    	/usr/lib/go-1.13/src/net/http/client.go:174 +0xfc
    net/http.(*Client).do(0xc0002eb7d0, 0xc00012d000, 0x0, 0x0, 0x0)
    	/usr/lib/go-1.13/src/net/http/client.go:641 +0x3d0
    net/http.(*Client).Do(0xc0002eb7d0, 0xc00012d000, 0x0, 0x0, 0x0)
    	/usr/lib/go-1.13/src/net/http/client.go:509 +0x37
    github.com/snapcore/snapd/client.(*Client).raw(0xc00011ea80, 0x556dd4aa1340, 0xc000358660, 0x556dd42f6ee7, 0x3, 0x556dd4300d78, 0xf, 0x0, 0x0, 0x0, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:270 +0x3de
    github.com/snapcore/snapd/client.(*Client).rawWithTimeout(0xc00011ea80, 0x556dd4aa1340, 0xc000358660, 0x556dd42f6ee7, 0x3, 0x556dd4300d78, 0xf, 0x0, 0x0, 0x0, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:291 +0x11b
    github.com/snapcore/snapd/client.(*Client).do(0xc00011ea80, 0x556dd42f6ee7, 0x3, 0x556dd4300d78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x556dd4950f40, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:387 +0x1f0
    github.com/snapcore/snapd/client.(*Client).doSyncWithOpts(0xc00011ea80, 0x556dd42f6ee7, 0x3, 0x556dd4300d78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x556dd48ec9a0, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:492 +0xf6
    github.com/snapcore/snapd/client.(*Client).SysInfo(0xc00011ea80, 0x46, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/client/client.go:727 +0xd4
    main.maybeWaitForSecurityProfileRegeneration(0xc00011ea80, 0xc000326280, 0xd)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:200 +0x1aa
    main.(*cmdRun).Execute(0xc000251eb8, 0xc0000a8160, 0x2, 0x3, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:240 +0x172
    main.main()
    	/build/snapd/parts/snapd-deb/build/cmd/snap/main.go:482 +0x581
    
    goroutine 19 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 23 [runnable]:
    net/http.(*persistConn).readLoop(0xc00036f560)
    	/usr/lib/go-1.13/src/net/http/transport.go:1876
    created by net/http.(*Transport).dialConn
    	/usr/lib/go-1.13/src/net/http/transport.go:1580 +0xb0f
    
    goroutine 24 [select]:
    net/http.(*persistConn).writeLoop(0xc00036f560)
    	/usr/lib/go-1.13/src/net/http/transport.go:2210 +0x125
    created by net/http.(*Transport).dialConn
    	/usr/lib/go-1.13/src/net/http/transport.go:1581 +0xb34
    
    rax    0x0
    rbx    0x7f2e46e4b840
    rcx    0x7f2e46a9df47
    rdx    0x0
    rdi    0x2
    rsi    0x7f2e4384a820
    rbp    0x556dd44bce7c
    rsp    0x7f2e4384a820
    r8     0x0
    r9     0x7f2e4384a820
    r10    0x8
    r11    0x246
    r12    0x556dd6963540
    r13    0x0
    r14    0x556dd44a2d10
    r15    0x0
    rip    0x7f2e46a9df47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000480000)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000480000)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc000046000, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc000099f01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.mstart1()
    	/usr/local/go/src/runtime/proc.go:1179 +0x93
    runtime.mstart()
    	/usr/local/go/src/runtime/proc.go:1137 +0x6e
    
    goroutine 1 [syscall, locked to thread]:
    reflect.MakeSlice(0x1d4e220, 0x181c100, 0x0, 0x4, 0x181c100, 0x0, 0x0)
    	/usr/local/go/src/reflect/value.go:2299 +0x85
    encoding/json.(*decodeState).array(0xc0004454a0, 0x181c100, 0xc0004539c8, 0x197, 0xc0004454c8, 0x5b)
    	/usr/local/go/src/encoding/json/decode.go:547 +0x716
    encoding/json.(*decodeState).value(0xc0004454a0, 0x181c100, 0xc0004539c8, 0x197, 0x181c100, 0xc0004539c8)
    	/usr/local/go/src/encoding/json/decode.go:360 +0x105
    encoding/json.(*decodeState).object(0xc0004454a0, 0x1815520, 0xc0004538c0, 0x16, 0xc0004454c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004454a0, 0x1815520, 0xc0004538c0, 0x16, 0xc0003cdbc8, 0x6fa34b)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0004454a0, 0x1815520, 0xc0004538c0, 0xc0004454c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc00036cbd6, 0xc9, 0xb22a, 0x1815520, 0xc0004538c0, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00044d440, 0xc00036cbd6, 0xc9, 0xb22a, 0x7f10e12b2540, 0xc00044d440)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc000444840, 0x19ce1a0, 0xc00044d440, 0x199, 0xc000444868, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc000444840, 0x19ce1a0, 0xc00044d440, 0x199, 0xc000453680, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000444840, 0x18bc100, 0xc00044cce0, 0x195, 0xc000444868, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000444840, 0x18bc100, 0xc00044cce0, 0x195, 0x18bc100, 0xc00044cce0)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000444840, 0x1815520, 0xc00044cb40, 0x16, 0xc000444868, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000444840, 0x1815520, 0xc00044cb40, 0x16, 0xc0003ce888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc000444840, 0x1815520, 0xc00044cb40, 0xc000444868, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc00036c7b5, 0x9e1, 0xb64b, 0x1815520, 0xc00044cb40, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00039ed80, 0xc00036c7b5, 0x9e1, 0xb64b, 0x7f10e12b2540, 0xc00039ed80)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e48f0, 0x19ce1a0, 0xc00039ed80, 0x199, 0xc0000e4918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e48f0, 0x19ce1a0, 0xc00039ed80, 0x199, 0xc00044c900, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e48f0, 0x18e59a0, 0xc000332d08, 0x195, 0xc0000e4918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e48f0, 0x18e59a0, 0xc000332d08, 0x195, 0x18e59a0, 0xc000332d08)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e48f0, 0x1815520, 0xc000332b40, 0x16, 0xc0000e4918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e48f0, 0x1815520, 0xc000332b40, 0x16, 0xc000123548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e48f0, 0x1815520, 0xc000332b40, 0xc0000e4918, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000368000, 0x9d38, 0xfe00, 0x1815520, 0xc000332b40, 0x7f10e1474958, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000332900, 0xc000368000, 0x9d38, 0xfe00, 0x7f10e12b2540, 0xc000332900)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e4840, 0x1a89300, 0xc000332900, 0x16, 0xc0000e4868, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e4840, 0x1a89300, 0xc000332900, 0x16, 0xc000123c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e4840, 0x1a89300, 0xc000332900, 0xc0000e4868, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000368000, 0x9d39, 0xfe00, 0x1a89300, 0xc000332900, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc00031db30, 0xc000123d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc00031da70, 0xc00031da40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 18 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f920ef2ef47 m=5 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f920ef2ef47
    stack: frame={sp:0x7f920b4da830, fp:0x0} stack=[0x7f920acdb288,0x7f920b4dae88)
    00007f920b4da730:  00007f920b4daaf0  00007f920f51775a 
    00007f920b4da740:  000000000000000b  0000000000000000 
    00007f920b4da750:  00007f920a379700  0000557291858148 
    00007f920b4da760:  00007f920b4dac40  0000557291f603f0 
    00007f920b4da770:  0000000000000000  0000557290d34d10 
    00007f920b4da780:  0000000000000000  00007f920f50ff13 
    00007f920b4da790:  0000000000000005  0000000000000000 
    00007f920b4da7a0:  2525252525252525  2525252525252525 
    00007f920b4da7b0:  00000000000000ff  0000000000000000 
    00007f920b4da7c0:  00000000000000ff  0000000000000000 
    00007f920b4da7d0:  00007f91f4000010  00007f91f4000010 
    00007f920b4da7e0:  000000000000000e  000000000000000e 
    00007f920b4da7f0:  0000000000000000  0000000000000000 
    00007f920b4da800:  ffffffffffffffff  ffffffffffffffff 
    00007f920b4da810:  0000000400000004  0000000400000004 
    00007f920b4da820:  20636f6c6c616d00  203a64656c696166 
    00007f920b4da830: <0000000000000000  0000000000000000 
    00007f920b4da840:  0000000000000000  0000000000000000 
    00007f920b4da850:  0000000000000000  0000000000000000 
    00007f920b4da860:  0000000000000000  0000000000000000 
    00007f920b4da870:  0000000000000000  0000000000000000 
    00007f920b4da880:  0000000000000000  0000000000000000 
    00007f920b4da890:  0000000000000000  0000000000000000 
    00007f920b4da8a0:  0000000000000000  0000000000000000 
    00007f920b4da8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f920b4da8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f920b4da8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f920b4da8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f920b4da8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f920b4da900:  ffffffffffffffff  ffffffffffffffff 
    00007f920b4da910:  ffffffffffffffff  ffffffffffffffff 
    00007f920b4da920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f920ef2ef47
    stack: frame={sp:0x7f920b4da830, fp:0x0} stack=[0x7f920acdb288,0x7f920b4dae88)
    00007f920b4da730:  00007f920b4daaf0  00007f920f51775a 
    00007f920b4da740:  000000000000000b  0000000000000000 
    00007f920b4da750:  00007f920a379700  0000557291858148 
    00007f920b4da760:  00007f920b4dac40  0000557291f603f0 
    00007f920b4da770:  0000000000000000  0000557290d34d10 
    00007f920b4da780:  0000000000000000  00007f920f50ff13 
    00007f920b4da790:  0000000000000005  0000000000000000 
    00007f920b4da7a0:  2525252525252525  2525252525252525 
    00007f920b4da7b0:  00000000000000ff  0000000000000000 
    00007f920b4da7c0:  00000000000000ff  0000000000000000 
    00007f920b4da7d0:  00007f91f4000010  00007f91f4000010 
    00007f920b4da7e0:  000000000000000e  000000000000000e 
    00007f920b4da7f0:  0000000000000000  0000000000000000 
    00007f920b4da800:  ffffffffffffffff  ffffffffffffffff 
    00007f920b4da810:  0000000400000004  0000000400000004 
    00007f920b4da820:  20636f6c6c616d00  203a64656c696166 
    00007f920b4da830: <0000000000000000  0000000000000000 
    00007f920b4da840:  0000000000000000  0000000000000000 
    00007f920b4da850:  0000000000000000  0000000000000000 
    00007f920b4da860:  0000000000000000  0000000000000000 
    00007f920b4da870:  0000000000000000  0000000000000000 
    00007f920b4da880:  0000000000000000  0000000000000000 
    00007f920b4da890:  0000000000000000  0000000000000000 
    00007f920b4da8a0:  0000000000000000  0000000000000000 
    00007f920b4da8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f920b4da8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f920b4da8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f920b4da8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f920b4da8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f920b4da900:  ffffffffffffffff  ffffffffffffffff 
    00007f920b4da910:  ffffffffffffffff  ffffffffffffffff 
    00007f920b4da920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).parse(0xc00012c500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:277 +0xbc6
    text/template/parse.(*Tree).Parse(0xc00012c500, 0x557290be4440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001d66f0, 0xc000152340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x557290b899b7, 0x4, 0x557290be4440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000152340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc0000cd780, 0x557290be4440, 0x16c, 0x4, 0xc000119708, 0x557291873760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 19 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 20 [runnable]:
    text/template/parse.(*lexer).run(0xc00015a630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:228
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7f920f2dc840
    rcx    0x7f920ef2ef47
    rdx    0x0
    rdi    0x2
    rsi    0x7f920b4da830
    rbp    0x557290d4ee7c
    rsp    0x7f920b4da830
    r8     0x0
    r9     0x7f920b4da830
    r10    0x8
    r11    0x246
    r12    0x557291f603f0
    r13    0x0
    r14    0x557290d34d10
    r15    0x0
    rip    0x7f920ef2ef47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
