apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f1f8b211f47 m=3 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f1f8b211f47
    stack: frame={sp:0x7f1f887bf830, fp:0x0} stack=[0x7f1f87fc0288,0x7f1f887bfe88)
    00007f1f887bf730:  00007f1f887bfaf0  00007f1f8b7fa75a 
    00007f1f887bf740:  000000000000000b  0000000000000000 
    00007f1f887bf750:  00007f1f867bc700  000055a961c12148 
    00007f1f887bf760:  00007f1f887bfc40  000055a9621fb3f0 
    00007f1f887bf770:  0000000000000000  000055a9610eed10 
    00007f1f887bf780:  0000000000000000  00007f1f8b7f2f13 
    00007f1f887bf790:  0000000000000005  0000000000000000 
    00007f1f887bf7a0:  2525252525252525  2525252525252525 
    00007f1f887bf7b0:  00000000000000ff  0000000000000000 
    00007f1f887bf7c0:  00000000000000ff  0000000000000000 
    00007f1f887bf7d0:  00007f1f70000010  00007f1f70000010 
    00007f1f887bf7e0:  000000000000000e  000000000000000e 
    00007f1f887bf7f0:  0000000000000000  0000000000000000 
    00007f1f887bf800:  ffffffffffffffff  ffffffffffffffff 
    00007f1f887bf810:  0000000400000004  0000000400000004 
    00007f1f887bf820:  20636f6c6c616d00  203a64656c696166 
    00007f1f887bf830: <0000000000000000  0000000000000000 
    00007f1f887bf840:  0000000000000000  0000000000000000 
    00007f1f887bf850:  0000000000000000  0000000000000000 
    00007f1f887bf860:  0000000000000000  0000000000000000 
    00007f1f887bf870:  0000000000000000  0000000000000000 
    00007f1f887bf880:  0000000000000000  0000000000000000 
    00007f1f887bf890:  0000000000000000  0000000000000000 
    00007f1f887bf8a0:  0000000000000000  0000000000000000 
    00007f1f887bf8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f1f887bf8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f1f887bf8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f1f887bf8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f1f887bf8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f1f887bf900:  ffffffffffffffff  ffffffffffffffff 
    00007f1f887bf910:  ffffffffffffffff  ffffffffffffffff 
    00007f1f887bf920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f1f8b211f47
    stack: frame={sp:0x7f1f887bf830, fp:0x0} stack=[0x7f1f87fc0288,0x7f1f887bfe88)
    00007f1f887bf730:  00007f1f887bfaf0  00007f1f8b7fa75a 
    00007f1f887bf740:  000000000000000b  0000000000000000 
    00007f1f887bf750:  00007f1f867bc700  000055a961c12148 
    00007f1f887bf760:  00007f1f887bfc40  000055a9621fb3f0 
    00007f1f887bf770:  0000000000000000  000055a9610eed10 
    00007f1f887bf780:  0000000000000000  00007f1f8b7f2f13 
    00007f1f887bf790:  0000000000000005  0000000000000000 
    00007f1f887bf7a0:  2525252525252525  2525252525252525 
    00007f1f887bf7b0:  00000000000000ff  0000000000000000 
    00007f1f887bf7c0:  00000000000000ff  0000000000000000 
    00007f1f887bf7d0:  00007f1f70000010  00007f1f70000010 
    00007f1f887bf7e0:  000000000000000e  000000000000000e 
    00007f1f887bf7f0:  0000000000000000  0000000000000000 
    00007f1f887bf800:  ffffffffffffffff  ffffffffffffffff 
    00007f1f887bf810:  0000000400000004  0000000400000004 
    00007f1f887bf820:  20636f6c6c616d00  203a64656c696166 
    00007f1f887bf830: <0000000000000000  0000000000000000 
    00007f1f887bf840:  0000000000000000  0000000000000000 
    00007f1f887bf850:  0000000000000000  0000000000000000 
    00007f1f887bf860:  0000000000000000  0000000000000000 
    00007f1f887bf870:  0000000000000000  0000000000000000 
    00007f1f887bf880:  0000000000000000  0000000000000000 
    00007f1f887bf890:  0000000000000000  0000000000000000 
    00007f1f887bf8a0:  0000000000000000  0000000000000000 
    00007f1f887bf8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f1f887bf8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f1f887bf8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f1f887bf8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f1f887bf8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f1f887bf900:  ffffffffffffffff  ffffffffffffffff 
    00007f1f887bf910:  ffffffffffffffff  ffffffffffffffff 
    00007f1f887bf920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).parse(0xc00010e500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:277 +0xbc6
    text/template/parse.(*Tree).Parse(0xc00010e500, 0x55a960f9e440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001b6720, 0xc000134350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x55a960f439b7, 0x4, 0x55a960f9e440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000134350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc00003d840, 0x55a960f9e440, 0x16c, 0x4, 0xc0000fb5e8, 0x55a961c2d760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 6 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 7 [runnable]:
    text/template/parse.(*lexer).run(0xc00013c630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:228
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7f1f8b5bf840
    rcx    0x7f1f8b211f47
    rdx    0x0
    rdi    0x2
    rsi    0x7f1f887bf830
    rbp    0x55a961108e7c
    rsp    0x7f1f887bf830
    r8     0x0
    r9     0x7f1f887bf830
    r10    0x8
    r11    0x246
    r12    0x55a9621fb3f0
    r13    0x0
    r14    0x55a9610eed10
    r15    0x0
    rip    0x7f1f8b211f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000062c00)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000062c00)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc000048800, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc000073f01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc00012a000)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [syscall, locked to thread]:
    net/url.parse(0xc0004599a0, 0x0, 0x100, 0xc0004599a0, 0x0, 0xc0004599a1)
    	/usr/local/go/src/net/url/url.go:519 +0x85
    net/url.Parse(0xc0004599a0, 0x19, 0xc0004599a0, 0x19, 0x0)
    	/usr/local/go/src/net/url/url.go:478 +0x85
    k8s.io/kubernetes/vendor/github.com/go-openapi/jsonreference.(*Ref).parse(0xc00043dbc8, 0xc000459980, 0x19, 0x4, 0xc0004a9168)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/jsonreference/reference.go:117 +0x7d
    k8s.io/kubernetes/vendor/github.com/go-openapi/jsonreference.New(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/jsonreference/reference.go:45
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Ref).fromMap(0xc00043dd48, 0xc0004911a0, 0xb74a, 0x1811e60)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/ref.go:182 +0xe8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0004a4d80, 0xc0003de6b6, 0x39, 0xb74a, 0x7fc3d9336cc0, 0xc0004a4d80)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:569 +0x1bc
    encoding/json.(*decodeState).object(0xc0004a0370, 0x19ce1a0, 0xc0004a4d80, 0x199, 0xc0004a0398, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0004a0370, 0x19ce1a0, 0xc0004a4d80, 0x199, 0xc0004b8fc0, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004a0370, 0x18bc100, 0xc0004a4620, 0x195, 0xc0004a0398, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004a0370, 0x18bc100, 0xc0004a4620, 0x195, 0x18bc100, 0xc0004a4620)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004a0370, 0x1815520, 0xc0004a4480, 0x16, 0xc0004a0398, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004a0370, 0x1815520, 0xc0004a4480, 0x16, 0xc00043e888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0004a0370, 0x1815520, 0xc0004a4480, 0xc0004a0398, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003dddc7, 0x9ca, 0xc039, 0x1815520, 0xc0004a4480, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00040ed80, 0xc0003dddc7, 0x9ca, 0xc039, 0x7fc3d9336cc0, 0xc00040ed80)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc000152a50, 0x19ce1a0, 0xc00040ed80, 0x199, 0xc000152a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc000152a50, 0x19ce1a0, 0xc00040ed80, 0x199, 0xc0004a4240, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000152a50, 0x18e59a0, 0xc0003a0d08, 0x195, 0xc000152a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000152a50, 0x18e59a0, 0xc0003a0d08, 0x195, 0x18e59a0, 0xc0003a0d08)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000152a50, 0x1815520, 0xc0003a0b40, 0x16, 0xc000152a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000152a50, 0x1815520, 0xc0003a0b40, 0x16, 0xc000193548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc000152a50, 0x1815520, 0xc0003a0b40, 0xc000152a78, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003da000, 0x9d38, 0xfe00, 0x1815520, 0xc0003a0b40, 0x7fc3d932cc38, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0003a0900, 0xc0003da000, 0x9d38, 0xfe00, 0x7fc3d9336cc0, 0xc0003a0900)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0001529a0, 0x1a89300, 0xc0003a0900, 0x16, 0xc0001529c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0001529a0, 0x1a89300, 0xc0003a0900, 0x16, 0xc000193c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0001529a0, 0x1a89300, 0xc0003a0900, 0xc0001529c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003da000, 0x9d39, 0xfe00, 0x1a89300, 0xc0003a0900, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc00038db30, 0xc000193d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc00038da70, 0xc00038da40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 34 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f85e50d9f47 m=5 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f85e50d9f47
    stack: frame={sp:0x7f85e1685830, fp:0x0} stack=[0x7f85e0e86288,0x7f85e1685e88)
    00007f85e1685730:  00007f85e1685af0  00007f85e56c275a 
    00007f85e1685740:  000000000000000b  0000000000000000 
    00007f85e1685750:  00007f85cbfff700  00005626bcc23148 
    00007f85e1685760:  00007f85e1685c40  00005626bd4423f0 
    00007f85e1685770:  0000000000000000  00005626bc0ffd10 
    00007f85e1685780:  0000000000000000  00007f85e56baf13 
    00007f85e1685790:  0000000000000005  0000000000000000 
    00007f85e16857a0:  2525252525252525  2525252525252525 
    00007f85e16857b0:  00000000000000ff  0000000000000000 
    00007f85e16857c0:  00000000000000ff  0000000000000000 
    00007f85e16857d0:  00007f85cc000010  00007f85cc000010 
    00007f85e16857e0:  000000000000000e  000000000000000e 
    00007f85e16857f0:  0000000000000000  0000000000000000 
    00007f85e1685800:  ffffffffffffffff  ffffffffffffffff 
    00007f85e1685810:  0000000400000004  0000000400000004 
    00007f85e1685820:  20636f6c6c616d00  203a64656c696166 
    00007f85e1685830: <0000000000000000  0000000000000000 
    00007f85e1685840:  0000000000000000  0000000000000000 
    00007f85e1685850:  0000000000000000  0000000000000000 
    00007f85e1685860:  0000000000000000  0000000000000000 
    00007f85e1685870:  0000000000000000  0000000000000000 
    00007f85e1685880:  0000000000000000  0000000000000000 
    00007f85e1685890:  0000000000000000  0000000000000000 
    00007f85e16858a0:  0000000000000000  0000000000000000 
    00007f85e16858b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f85e16858c0:  ffffffffffffffff  ffffffffffffffff 
    00007f85e16858d0:  ffffffffffffffff  ffffffffffffffff 
    00007f85e16858e0:  ffffffffffffffff  ffffffffffffffff 
    00007f85e16858f0:  ffffffffffffffff  ffffffffffffffff 
    00007f85e1685900:  ffffffffffffffff  ffffffffffffffff 
    00007f85e1685910:  ffffffffffffffff  ffffffffffffffff 
    00007f85e1685920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f85e50d9f47
    stack: frame={sp:0x7f85e1685830, fp:0x0} stack=[0x7f85e0e86288,0x7f85e1685e88)
    00007f85e1685730:  00007f85e1685af0  00007f85e56c275a 
    00007f85e1685740:  000000000000000b  0000000000000000 
    00007f85e1685750:  00007f85cbfff700  00005626bcc23148 
    00007f85e1685760:  00007f85e1685c40  00005626bd4423f0 
    00007f85e1685770:  0000000000000000  00005626bc0ffd10 
    00007f85e1685780:  0000000000000000  00007f85e56baf13 
    00007f85e1685790:  0000000000000005  0000000000000000 
    00007f85e16857a0:  2525252525252525  2525252525252525 
    00007f85e16857b0:  00000000000000ff  0000000000000000 
    00007f85e16857c0:  00000000000000ff  0000000000000000 
    00007f85e16857d0:  00007f85cc000010  00007f85cc000010 
    00007f85e16857e0:  000000000000000e  000000000000000e 
    00007f85e16857f0:  0000000000000000  0000000000000000 
    00007f85e1685800:  ffffffffffffffff  ffffffffffffffff 
    00007f85e1685810:  0000000400000004  0000000400000004 
    00007f85e1685820:  20636f6c6c616d00  203a64656c696166 
    00007f85e1685830: <0000000000000000  0000000000000000 
    00007f85e1685840:  0000000000000000  0000000000000000 
    00007f85e1685850:  0000000000000000  0000000000000000 
    00007f85e1685860:  0000000000000000  0000000000000000 
    00007f85e1685870:  0000000000000000  0000000000000000 
    00007f85e1685880:  0000000000000000  0000000000000000 
    00007f85e1685890:  0000000000000000  0000000000000000 
    00007f85e16858a0:  0000000000000000  0000000000000000 
    00007f85e16858b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f85e16858c0:  ffffffffffffffff  ffffffffffffffff 
    00007f85e16858d0:  ffffffffffffffff  ffffffffffffffff 
    00007f85e16858e0:  ffffffffffffffff  ffffffffffffffff 
    00007f85e16858f0:  ffffffffffffffff  ffffffffffffffff 
    00007f85e1685900:  ffffffffffffffff  ffffffffffffffff 
    00007f85e1685910:  ffffffffffffffff  ffffffffffffffff 
    00007f85e1685920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).parse(0xc00012c500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:277 +0xbc6
    text/template/parse.(*Tree).Parse(0xc00012c500, 0x5626bbfaf440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001d66f0, 0xc000152340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x5626bbf549b7, 0x4, 0x5626bbfaf440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000152340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc0000cd780, 0x5626bbfaf440, 0x16c, 0x4, 0xc000119708, 0x5626bcc3e760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 19 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 20 [runnable]:
    text/template/parse.(*lexer).run(0xc00015a630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:228
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7f85e5487840
    rcx    0x7f85e50d9f47
    rdx    0x0
    rdi    0x2
    rsi    0x7f85e1685830
    rbp    0x5626bc119e7c
    rsp    0x7f85e1685830
    r8     0x0
    r9     0x7f85e1685830
    r10    0x8
    r11    0x246
    r12    0x5626bd4423f0
    r13    0x0
    r14    0x5626bc0ffd10
    r15    0x0
    rip    0x7f85e50d9f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
