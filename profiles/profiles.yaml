apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f3a4aed1f47 m=4 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f3a4aed1f47
    stack: frame={sp:0x7f3a47c7e820, fp:0x0} stack=[0x7f3a4747f288,0x7f3a47c7ee88)
    00007f3a47c7e720:  0000000000000000  00007f3a4b286c58 
    00007f3a47c7e730:  00007f3a47c7eae0  00007f3a4b4ba75a 
    00007f3a47c7e740:  000000000000000b  0000000000000000 
    00007f3a47c7e750:  00007f3a4647c700  000055af46995148 
    00007f3a47c7e760:  00007f3a47c7ec30  000055af4817e540 
    00007f3a47c7e770:  0000000000000000  000055af45e71d10 
    00007f3a47c7e780:  0000000000000000  00007f3a4b4b2f13 
    00007f3a47c7e790:  0000000000000005  0000000000000000 
    00007f3a47c7e7a0:  2525252525252525  2525252525252525 
    00007f3a47c7e7b0:  00000000000000ff  0000000000000000 
    00007f3a47c7e7c0:  00000000000000ff  0000000000000000 
    00007f3a47c7e7d0:  ff000000000000ff  00000000ff000000 
    00007f3a47c7e7e0:  000000000000000e  000000000000000e 
    00007f3a47c7e7f0:  0000000000000000  0000000000000000 
    00007f3a47c7e800:  ffffffffffffffff  ffffffffffffffff 
    00007f3a47c7e810:  0000000400000004  0000000400000004 
    00007f3a47c7e820: <0000000000000000  203a64656c696166 
    00007f3a47c7e830:  0000000000000000  0000000000000000 
    00007f3a47c7e840:  0000000000000000  0000000000000000 
    00007f3a47c7e850:  0000000000000000  0000000000000000 
    00007f3a47c7e860:  0000000000000000  0000000000000000 
    00007f3a47c7e870:  0000000000000000  0000000000000000 
    00007f3a47c7e880:  0000000000000000  0000000000000000 
    00007f3a47c7e890:  0000000000000000  0000000000000000 
    00007f3a47c7e8a0:  fffffffe7fffffff  ffffffffffffffff 
    00007f3a47c7e8b0:  ffffffffffffffff  ffffffffffffffff 
    00007f3a47c7e8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f3a47c7e8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f3a47c7e8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f3a47c7e8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f3a47c7e900:  ffffffffffffffff  ffffffffffffffff 
    00007f3a47c7e910:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f3a4aed1f47
    stack: frame={sp:0x7f3a47c7e820, fp:0x0} stack=[0x7f3a4747f288,0x7f3a47c7ee88)
    00007f3a47c7e720:  0000000000000000  00007f3a4b286c58 
    00007f3a47c7e730:  00007f3a47c7eae0  00007f3a4b4ba75a 
    00007f3a47c7e740:  000000000000000b  0000000000000000 
    00007f3a47c7e750:  00007f3a4647c700  000055af46995148 
    00007f3a47c7e760:  00007f3a47c7ec30  000055af4817e540 
    00007f3a47c7e770:  0000000000000000  000055af45e71d10 
    00007f3a47c7e780:  0000000000000000  00007f3a4b4b2f13 
    00007f3a47c7e790:  0000000000000005  0000000000000000 
    00007f3a47c7e7a0:  2525252525252525  2525252525252525 
    00007f3a47c7e7b0:  00000000000000ff  0000000000000000 
    00007f3a47c7e7c0:  00000000000000ff  0000000000000000 
    00007f3a47c7e7d0:  ff000000000000ff  00000000ff000000 
    00007f3a47c7e7e0:  000000000000000e  000000000000000e 
    00007f3a47c7e7f0:  0000000000000000  0000000000000000 
    00007f3a47c7e800:  ffffffffffffffff  ffffffffffffffff 
    00007f3a47c7e810:  0000000400000004  0000000400000004 
    00007f3a47c7e820: <0000000000000000  203a64656c696166 
    00007f3a47c7e830:  0000000000000000  0000000000000000 
    00007f3a47c7e840:  0000000000000000  0000000000000000 
    00007f3a47c7e850:  0000000000000000  0000000000000000 
    00007f3a47c7e860:  0000000000000000  0000000000000000 
    00007f3a47c7e870:  0000000000000000  0000000000000000 
    00007f3a47c7e880:  0000000000000000  0000000000000000 
    00007f3a47c7e890:  0000000000000000  0000000000000000 
    00007f3a47c7e8a0:  fffffffe7fffffff  ffffffffffffffff 
    00007f3a47c7e8b0:  ffffffffffffffff  ffffffffffffffff 
    00007f3a47c7e8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f3a47c7e8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f3a47c7e8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f3a47c7e8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f3a47c7e900:  ffffffffffffffff  ffffffffffffffff 
    00007f3a47c7e910:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [syscall]:
    syscall.Syscall6(0xf7, 0x1, 0x1bf81, 0xc00023f778, 0x1000004, 0x0, 0x0, 0x55af455e8e01, 0xc000336420, 0xc00023f7b8)
    	/usr/lib/go-1.13/src/syscall/asm_linux_amd64.s:44 +0x5
    os.(*Process).blockUntilWaitable(0xc0002c6de0, 0x203000, 0x55af462e5940, 0x2)
    	/usr/lib/go-1.13/src/os/wait_waitid.go:31 +0x9a
    os.(*Process).wait(0xc0002c6de0, 0x55af46440240, 0x55af46440248, 0x55af46440238)
    	/usr/lib/go-1.13/src/os/exec_unix.go:22 +0x3b
    os.(*Process).Wait(...)
    	/usr/lib/go-1.13/src/os/exec.go:125
    os/exec.(*Cmd).Wait(0xc00034e000, 0x0, 0x0)
    	/usr/lib/go-1.13/src/os/exec/exec.go:501 +0x62
    os/exec.(*Cmd).Run(0xc00034e000, 0xc0002cd6d0, 0x1)
    	/usr/lib/go-1.13/src/os/exec/exec.go:341 +0x5e
    os/exec.(*Cmd).Output(0xc00034e000, 0x2c, 0xc00023fa30, 0x1, 0x1, 0xc00034e000)
    	/usr/lib/go-1.13/src/os/exec/exec.go:540 +0x8a
    github.com/snapcore/snapd/sandbox/seccomp.(*Compiler).VersionInfo(0xc0003202e0, 0xc0003202e0, 0x0, 0x0, 0xc000347e20)
    	/build/snapd/parts/snapd-deb/build/sandbox/seccomp/compiler.go:75 +0x99
    github.com/snapcore/snapd/sandbox/seccomp.glob..func1(0xc000347e20, 0xc000347e20, 0x1f, 0xc0002c6540, 0x1f)
    	/build/snapd/parts/snapd-deb/build/sandbox/seccomp/compiler.go:97 +0x6a
    github.com/snapcore/snapd/sandbox/seccomp.CompilerVersionInfo(...)
    	/build/snapd/parts/snapd-deb/build/sandbox/seccomp/compiler.go:103
    github.com/snapcore/snapd/interfaces.seccompCompilerVersionInfo(0xc0002c6540, 0x1f, 0xc0002c6540, 0x1f, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/interfaces/system_key.go:95 +0x6d
    github.com/snapcore/snapd/interfaces.generateSystemKey(0xc000314000, 0x300000002, 0xd0)
    	/build/snapd/parts/snapd-deb/build/interfaces/system_key.go:145 +0x373
    github.com/snapcore/snapd/interfaces.SystemKeyMismatch(0x55af455177ca, 0xe0, 0x55af463e8200)
    	/build/snapd/parts/snapd-deb/build/interfaces/system_key.go:229 +0x28
    main.maybeWaitForSecurityProfileRegeneration(0xc00010ea80, 0xc000306280, 0xd)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:152 +0x28
    main.(*cmdRun).Execute(0xc00023feb8, 0xc000032190, 0x2, 0x3, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:240 +0x172
    main.main()
    	/build/snapd/parts/snapd-deb/build/cmd/snap/main.go:482 +0x581
    
    goroutine 6 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 8 [IO wait]:
    internal/poll.runtime_pollWait(0x7f3a4b623ea8, 0x72, 0xffffffffffffffff)
    	/usr/lib/go-1.13/src/runtime/netpoll.go:184 +0x57
    internal/poll.(*pollDesc).wait(0xc0003361f8, 0x72, 0x201, 0x200, 0xffffffffffffffff)
    	/usr/lib/go-1.13/src/internal/poll/fd_poll_runtime.go:87 +0x47
    internal/poll.(*pollDesc).waitRead(...)
    	/usr/lib/go-1.13/src/internal/poll/fd_poll_runtime.go:92
    internal/poll.(*FD).Read(0xc0003361e0, 0xc000358000, 0x200, 0x200, 0x0, 0x0, 0x0)
    	/usr/lib/go-1.13/src/internal/poll/fd_unix.go:169 +0x1d1
    os.(*File).read(...)
    	/usr/lib/go-1.13/src/os/file_unix.go:259
    os.(*File).Read(0xc000010590, 0xc000358000, 0x200, 0x200, 0x7f3a4b5df028, 0xc000060f80, 0xc000060ea0)
    	/usr/lib/go-1.13/src/os/file.go:116 +0x73
    bytes.(*Buffer).ReadFrom(0xc0003448a0, 0x55af464598c0, 0xc000010590, 0x7f3a4b5df028, 0xc0003448a0, 0xc0001ca401)
    	/usr/lib/go-1.13/src/bytes/buffer.go:204 +0xb6
    io.copyBuffer(0x55af46457560, 0xc0003448a0, 0x55af464598c0, 0xc000010590, 0x0, 0x0, 0x0, 0x1, 0xc000060fa8, 0x55af455105d1)
    	/usr/lib/go-1.13/src/io/io.go:388 +0x2ef
    io.Copy(...)
    	/usr/lib/go-1.13/src/io/io.go:364
    os/exec.(*Cmd).writerDescriptor.func1(0x55af464404d8, 0xc000060fc8)
    	/usr/lib/go-1.13/src/os/exec/exec.go:311 +0x65
    os/exec.(*Cmd).Start.func1(0xc00034e000, 0xc000347ea0)
    	/usr/lib/go-1.13/src/os/exec/exec.go:435 +0x29
    created by os/exec.(*Cmd).Start
    	/usr/lib/go-1.13/src/os/exec/exec.go:434 +0x60a
    
    goroutine 9 [runnable]:
    os/exec.(*Cmd).Start.func1(0xc00034e000, 0xc000347ee0)
    	/usr/lib/go-1.13/src/os/exec/exec.go:434
    created by os/exec.(*Cmd).Start
    	/usr/lib/go-1.13/src/os/exec/exec.go:434 +0x60a
    
    rax    0x0
    rbx    0x7f3a4b27f840
    rcx    0x7f3a4aed1f47
    rdx    0x0
    rdi    0x2
    rsi    0x7f3a47c7e820
    rbp    0x55af45e8be7c
    rsp    0x7f3a47c7e820
    r8     0x0
    r9     0x7f3a47c7e820
    r10    0x8
    r11    0x246
    r12    0x55af4817e540
    r13    0x0
    r14    0x55af45e71d10
    r15    0x0
    rip    0x7f3a4aed1f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000088400)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000088400)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc00004b000, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc000099f01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc000001080)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [syscall, locked to thread]:
    encoding/json.Unmarshal(0xc0003c0ded, 0x35, 0xb013, 0x1815520, 0xc0004af680, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:100 +0x31
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0004a6fc0, 0xc0003c0ded, 0x35, 0xb013, 0x7f04bd228b00, 0xc0004a6fc0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc00049ab00, 0x19ce1a0, 0xc0004a6fc0, 0x199, 0xc00049ab28, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc00049ab00, 0x19ce1a0, 0xc0004a6fc0, 0x199, 0xc0004af440, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc00049ab00, 0x18bc100, 0xc0004a6860, 0x195, 0xc00049ab28, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc00049ab00, 0x18bc100, 0xc0004a6860, 0x195, 0x18bc100, 0xc0004a6860)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc00049ab00, 0x1815520, 0xc0004a66c0, 0x16, 0xc00049ab28, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc00049ab00, 0x1815520, 0xc0004a66c0, 0x16, 0xc000422888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc00049ab00, 0x1815520, 0xc0004a66c0, 0xc00049ab28, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003c07b5, 0x9e1, 0xb64b, 0x1815520, 0xc0004a66c0, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0003f2900, 0xc0003c07b5, 0x9e1, 0xb64b, 0x7f04bd228b00, 0xc0003f2900)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc000136bb0, 0x19ce1a0, 0xc0003f2900, 0x199, 0xc000136bd8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc000136bb0, 0x19ce1a0, 0xc0003f2900, 0x199, 0xc0004a6480, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000136bb0, 0x18e59a0, 0xc000384888, 0x195, 0xc000136bd8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000136bb0, 0x18e59a0, 0xc000384888, 0x195, 0x18e59a0, 0xc000384888)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000136bb0, 0x1815520, 0xc0003846c0, 0x16, 0xc000136bd8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000136bb0, 0x1815520, 0xc0003846c0, 0x16, 0xc000173548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc000136bb0, 0x1815520, 0xc0003846c0, 0xc000136bd8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003bc000, 0x9d38, 0xfe00, 0x1815520, 0xc0003846c0, 0x7f04bd289898, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000384480, 0xc0003bc000, 0x9d38, 0xfe00, 0x7f04bd228b00, 0xc000384480)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc000136b00, 0x1a89300, 0xc000384480, 0x16, 0xc000136b28, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc000136b00, 0x1a89300, 0xc000384480, 0x16, 0xc000173c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc000136b00, 0x1a89300, 0xc000384480, 0xc000136b28, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003bc000, 0x9d39, 0xfe00, 0x1a89300, 0xc000384480, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc00036fb30, 0xc000173d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc00036fa70, 0xc00036fa40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 6 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f7812237f47 m=3 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f7812237f47
    stack: frame={sp:0x7f780f7e5830, fp:0x0} stack=[0x7f780efe6288,0x7f780f7e5e88)
    00007f780f7e5730:  00007f780f7e5af0  00007f781282075a 
    00007f780f7e5740:  000000000000000b  0000000000000000 
    00007f780f7e5750:  00007f780ce81700  00005573ced15148 
    00007f780f7e5760:  00007f780f7e5c40  00007f7800000c50 
    00007f780f7e5770:  0000000000000000  00005573ce1f1d10 
    00007f780f7e5780:  0000000000000000  00007f7812818f13 
    00007f780f7e5790:  0000000000000005  0000000000000000 
    00007f780f7e57a0:  2525252525252525  2525252525252525 
    00007f780f7e57b0:  00000000000000ff  0000000000000000 
    00007f780f7e57c0:  00000000000000ff  0000000000000000 
    00007f780f7e57d0:  00007f7800000010  00007f7800000010 
    00007f780f7e57e0:  000000000000000e  000000000000000e 
    00007f780f7e57f0:  0000000000000000  0000000000000000 
    00007f780f7e5800:  ffffffffffffffff  ffffffffffffffff 
    00007f780f7e5810:  0000000400000004  0000000400000004 
    00007f780f7e5820:  20636f6c6c616d00  203a64656c696166 
    00007f780f7e5830: <0000000000000000  0000000000000000 
    00007f780f7e5840:  0000000000000000  0000000000000000 
    00007f780f7e5850:  0000000000000000  0000000000000000 
    00007f780f7e5860:  0000000000000000  0000000000000000 
    00007f780f7e5870:  0000000000000000  0000000000000000 
    00007f780f7e5880:  0000000000000000  0000000000000000 
    00007f780f7e5890:  0000000000000000  0000000000000000 
    00007f780f7e58a0:  0000000000000000  0000000000000000 
    00007f780f7e58b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f780f7e58c0:  ffffffffffffffff  ffffffffffffffff 
    00007f780f7e58d0:  ffffffffffffffff  ffffffffffffffff 
    00007f780f7e58e0:  ffffffffffffffff  ffffffffffffffff 
    00007f780f7e58f0:  ffffffffffffffff  ffffffffffffffff 
    00007f780f7e5900:  ffffffffffffffff  ffffffffffffffff 
    00007f780f7e5910:  ffffffffffffffff  ffffffffffffffff 
    00007f780f7e5920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f7812237f47
    stack: frame={sp:0x7f780f7e5830, fp:0x0} stack=[0x7f780efe6288,0x7f780f7e5e88)
    00007f780f7e5730:  00007f780f7e5af0  00007f781282075a 
    00007f780f7e5740:  000000000000000b  0000000000000000 
    00007f780f7e5750:  00007f780ce81700  00005573ced15148 
    00007f780f7e5760:  00007f780f7e5c40  00007f7800000c50 
    00007f780f7e5770:  0000000000000000  00005573ce1f1d10 
    00007f780f7e5780:  0000000000000000  00007f7812818f13 
    00007f780f7e5790:  0000000000000005  0000000000000000 
    00007f780f7e57a0:  2525252525252525  2525252525252525 
    00007f780f7e57b0:  00000000000000ff  0000000000000000 
    00007f780f7e57c0:  00000000000000ff  0000000000000000 
    00007f780f7e57d0:  00007f7800000010  00007f7800000010 
    00007f780f7e57e0:  000000000000000e  000000000000000e 
    00007f780f7e57f0:  0000000000000000  0000000000000000 
    00007f780f7e5800:  ffffffffffffffff  ffffffffffffffff 
    00007f780f7e5810:  0000000400000004  0000000400000004 
    00007f780f7e5820:  20636f6c6c616d00  203a64656c696166 
    00007f780f7e5830: <0000000000000000  0000000000000000 
    00007f780f7e5840:  0000000000000000  0000000000000000 
    00007f780f7e5850:  0000000000000000  0000000000000000 
    00007f780f7e5860:  0000000000000000  0000000000000000 
    00007f780f7e5870:  0000000000000000  0000000000000000 
    00007f780f7e5880:  0000000000000000  0000000000000000 
    00007f780f7e5890:  0000000000000000  0000000000000000 
    00007f780f7e58a0:  0000000000000000  0000000000000000 
    00007f780f7e58b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f780f7e58c0:  ffffffffffffffff  ffffffffffffffff 
    00007f780f7e58d0:  ffffffffffffffff  ffffffffffffffff 
    00007f780f7e58e0:  ffffffffffffffff  ffffffffffffffff 
    00007f780f7e58f0:  ffffffffffffffff  ffffffffffffffff 
    00007f780f7e5900:  ffffffffffffffff  ffffffffffffffff 
    00007f780f7e5910:  ffffffffffffffff  ffffffffffffffff 
    00007f780f7e5920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).parse(0xc00012c500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:278 +0xa5b
    text/template/parse.(*Tree).Parse(0xc00012c500, 0x5573ce0a1440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001d66f0, 0xc000152340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x5573ce0469b7, 0x4, 0x5573ce0a1440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000152340, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc0000cd780, 0x5573ce0a1440, 0x16c, 0x4, 0xc0001195e8, 0x5573ced30760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 19 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 20 [runnable]:
    text/template/parse.(*lexer).emit(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:157
    text/template/parse.lexRightDelim(0xc00015a630, 0x5573ce7c08a8)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:345 +0x17f
    text/template/parse.(*lexer).run(0xc00015a630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:230 +0x39
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7f78125e5840
    rcx    0x7f7812237f47
    rdx    0x0
    rdi    0x2
    rsi    0x7f780f7e5830
    rbp    0x5573ce20be7c
    rsp    0x7f780f7e5830
    r8     0x0
    r9     0x7f780f7e5830
    r10    0x8
    r11    0x246
    r12    0x7f7800000c50
    r13    0x0
    r14    0x5573ce1f1d10
    r15    0x0
    rip    0x7f7812237f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
