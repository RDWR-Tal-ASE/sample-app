apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
    Error: bad file '-': yaml: line 11: mapping values are not allowed in this context
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000500000)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000500000)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc000046000, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc000099f01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc0002ffb00)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [syscall, locked to thread]:
    reflect.mapassign(0x18bbf80, 0xc0004a18f0, 0xc0004bab90, 0xc0004bab70)
    	/usr/local/go/src/runtime/map.go:1319 +0x3f
    reflect.Value.SetMapIndex(0x18bbf80, 0xc000430488, 0x195, 0x1858200, 0xc0004bab90, 0x98, 0x1897a80, 0xc0004bab70, 0x194)
    	/usr/local/go/src/reflect/value.go:1706 +0x27c
    encoding/json.(*decodeState).object(0xc0004c5290, 0x1811e60, 0xc000430488, 0x16, 0xc0004c52b8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:807 +0x8da
    encoding/json.(*decodeState).value(0xc0004c5290, 0x1811e60, 0xc000430488, 0x16, 0xc00044dbc8, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0004c5290, 0x1811e60, 0xc000430488, 0xc0004c52b8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003ecaab, 0x5d, 0xb355, 0x1811e60, 0xc000430488, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0004cf200, 0xc0003ecaab, 0x5d, 0xb355, 0x7f842dd9b900, 0xc0004cf200)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:565 +0x18b
    encoding/json.(*decodeState).object(0xc0004c48f0, 0x19ce1a0, 0xc0004cf200, 0x199, 0xc0004c4918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0004c48f0, 0x19ce1a0, 0xc0004cf200, 0x199, 0xc0004d26c0, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004c48f0, 0x18bc100, 0xc0004ceaa0, 0x195, 0xc0004c4918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004c48f0, 0x18bc100, 0xc0004ceaa0, 0x195, 0x18bc100, 0xc0004ceaa0)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004c48f0, 0x1815520, 0xc0004ce900, 0x16, 0xc0004c4918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004c48f0, 0x1815520, 0xc0004ce900, 0x16, 0xc00044e888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0004c48f0, 0x1815520, 0xc0004ce900, 0xc0004c4918, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003ec7b5, 0x9e1, 0xb64b, 0x1815520, 0xc0004ce900, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00041eb40, 0xc0003ec7b5, 0x9e1, 0xb64b, 0x7f842dd9b900, 0xc00041eb40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e49a0, 0x19ce1a0, 0xc00041eb40, 0x199, 0xc0000e49c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e49a0, 0x19ce1a0, 0xc00041eb40, 0x199, 0xc0004ce6c0, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e49a0, 0x18e59a0, 0xc0003b2ac8, 0x195, 0xc0000e49c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e49a0, 0x18e59a0, 0xc0003b2ac8, 0x195, 0x18e59a0, 0xc0003b2ac8)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e49a0, 0x1815520, 0xc0003b2900, 0x16, 0xc0000e49c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e49a0, 0x1815520, 0xc0003b2900, 0x16, 0xc0001a3548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e49a0, 0x1815520, 0xc0003b2900, 0xc0000e49c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003e8000, 0x9d38, 0xfe00, 0x1815520, 0xc0003b2900, 0x7f842dd916b0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0003b26c0, 0xc0003e8000, 0x9d38, 0xfe00, 0x7f842dd9b900, 0xc0003b26c0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e48f0, 0x1a89300, 0xc0003b26c0, 0x16, 0xc0000e4918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e48f0, 0x1a89300, 0xc0003b26c0, 0x16, 0xc0001a3c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e48f0, 0x1a89300, 0xc0003b26c0, 0xc0000e4918, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003e8000, 0x9d39, 0xfe00, 0x1a89300, 0xc0003b26c0, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc00039db30, 0xc0001a3d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc00039da70, 0xc00039da40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 18 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f5569ff4f47 m=7 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f5569ff4f47
    stack: frame={sp:0x7f556559e840, fp:0x0} stack=[0x7f5564d9f288,0x7f556559ee88)
    00007f556559e740:  00007f556559eb20  00007f556a5d5f13 
    00007f556559e750:  0000000000000005  000055ea6e47f148 
    00007f556559e760:  00007f556559ec50  000055ea6f91b3f0 
    00007f556559e770:  0000000000000000  000055ea6d95bd10 
    00007f556559e780:  0000000000000000  00007f556a5d5f13 
    00007f556559e790:  0000000000000005  0000000000000000 
    00007f556559e7a0:  2525252525252525  2525252525252525 
    00007f556559e7b0:  00000000000000ff  0000000000000000 
    00007f556559e7c0:  00000000000000ff  0000000000000000 
    00007f556559e7d0:  00007f5554000010  00007f5554000010 
    00007f556559e7e0:  000000000000000e  000000000000000e 
    00007f556559e7f0:  0000000000000000  0000000000000000 
    00007f556559e800:  ffffffffffffffff  ffffffffffffffff 
    00007f556559e810:  0000000400000004  0000000400000004 
    00007f556559e820:  20636f6c6c616d00  203a64656c696166 
    00007f556559e830:  0000000000000000  0000000000000000 
    00007f556559e840: <0000000000000000  0000000000000000 
    00007f556559e850:  0000000000000000  0000000000000000 
    00007f556559e860:  0000000000000000  0000000000000000 
    00007f556559e870:  0000000000000000  0000000000000000 
    00007f556559e880:  0000000000000000  0000000000000000 
    00007f556559e890:  0000000000000000  0000000000000000 
    00007f556559e8a0:  0000000000000000  0000000000000000 
    00007f556559e8b0:  00007f556a3a2560  00007f556a3a5bc0 
    00007f556559e8c0:  fffffffe7fffffff  ffffffffffffffff 
    00007f556559e8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f556559e8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f556559e8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f556559e900:  ffffffffffffffff  ffffffffffffffff 
    00007f556559e910:  ffffffffffffffff  ffffffffffffffff 
    00007f556559e920:  ffffffffffffffff  ffffffffffffffff 
    00007f556559e930:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f5569ff4f47
    stack: frame={sp:0x7f556559e840, fp:0x0} stack=[0x7f5564d9f288,0x7f556559ee88)
    00007f556559e740:  00007f556559eb20  00007f556a5d5f13 
    00007f556559e750:  0000000000000005  000055ea6e47f148 
    00007f556559e760:  00007f556559ec50  000055ea6f91b3f0 
    00007f556559e770:  0000000000000000  000055ea6d95bd10 
    00007f556559e780:  0000000000000000  00007f556a5d5f13 
    00007f556559e790:  0000000000000005  0000000000000000 
    00007f556559e7a0:  2525252525252525  2525252525252525 
    00007f556559e7b0:  00000000000000ff  0000000000000000 
    00007f556559e7c0:  00000000000000ff  0000000000000000 
    00007f556559e7d0:  00007f5554000010  00007f5554000010 
    00007f556559e7e0:  000000000000000e  000000000000000e 
    00007f556559e7f0:  0000000000000000  0000000000000000 
    00007f556559e800:  ffffffffffffffff  ffffffffffffffff 
    00007f556559e810:  0000000400000004  0000000400000004 
    00007f556559e820:  20636f6c6c616d00  203a64656c696166 
    00007f556559e830:  0000000000000000  0000000000000000 
    00007f556559e840: <0000000000000000  0000000000000000 
    00007f556559e850:  0000000000000000  0000000000000000 
    00007f556559e860:  0000000000000000  0000000000000000 
    00007f556559e870:  0000000000000000  0000000000000000 
    00007f556559e880:  0000000000000000  0000000000000000 
    00007f556559e890:  0000000000000000  0000000000000000 
    00007f556559e8a0:  0000000000000000  0000000000000000 
    00007f556559e8b0:  00007f556a3a2560  00007f556a3a5bc0 
    00007f556559e8c0:  fffffffe7fffffff  ffffffffffffffff 
    00007f556559e8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f556559e8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f556559e8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f556559e900:  ffffffffffffffff  ffffffffffffffff 
    00007f556559e910:  ffffffffffffffff  ffffffffffffffff 
    00007f556559e920:  ffffffffffffffff  ffffffffffffffff 
    00007f556559e930:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).parse(0xc00010e500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:278 +0xa5b
    text/template/parse.(*Tree).Parse(0xc00010e500, 0x55ea6d80b440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001b6720, 0xc000134350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x55ea6d7b09b7, 0x4, 0x55ea6d80b440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000134350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc00003d840, 0x55ea6d80b440, 0x16c, 0x4, 0xc0000fb708, 0x55ea6e49a760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 6 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 7 [runnable]:
    text/template/parse.(*lexer).emit(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:157
    text/template/parse.lexRightDelim(0xc00013c630, 0x55ea6df2a8a8)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:345 +0x17f
    text/template/parse.(*lexer).run(0xc00013c630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:230 +0x39
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7f556a3a2840
    rcx    0x7f5569ff4f47
    rdx    0x0
    rdi    0x2
    rsi    0x7f556559e840
    rbp    0x55ea6d975e7c
    rsp    0x7f556559e840
    r8     0x0
    r9     0x7f556559e840
    r10    0x8
    r11    0x246
    r12    0x55ea6f91b3f0
    r13    0x0
    r14    0x55ea6d95bd10
    r15    0x0
    rip    0x7f5569ff4f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
