apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f4739b2ef47 m=0 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f4739b2ef47
    stack: frame={sp:0x7ffc75faba70, fp:0x0} stack=[0x7ffc757ad0f0,0x7ffc75fac130)
    00007ffc75fab970:  00007ffc75fabd30  00007f473a11775a 
    00007ffc75fab980:  000000000000000b  0000000000000000 
    00007ffc75fab990:  00007f47348d8700  000055b7ab15b148 
    00007ffc75fab9a0:  00007ffc75fabe80  000055b7acce8930 
    00007ffc75fab9b0:  0000000000000000  000055b7aa637d10 
    00007ffc75fab9c0:  0000000000000000  00007f473a10ff13 
    00007ffc75fab9d0:  0000000000000005  0000000000000000 
    00007ffc75fab9e0:  2525252525252525  2525252525252525 
    00007ffc75fab9f0:  00000000000000ff  0000000000000000 
    00007ffc75faba00:  00000000000000ff  0000000000000000 
    00007ffc75faba10:  0000000000000002  0000000000000002 
    00007ffc75faba20:  0000000000000005  0000000000000000 
    00007ffc75faba30:  0000000000000004  0000000c00000000 
    00007ffc75faba40:  000000000000000e  0000000000000000 
    00007ffc75faba50:  0000000000000000  0000000000000000 
    00007ffc75faba60:  20636f6c6c616d00  203a64656c696166 
    00007ffc75faba70: <0000000000000000  0000000000000000 
    00007ffc75faba80:  0000000000000000  0000000200000000 
    00007ffc75faba90:  000000000000000b  0000000000000000 
    00007ffc75fabaa0:  0000000000000000  0000000000000000 
    00007ffc75fabab0:  0000000000000000  000000000000000a 
    00007ffc75fabac0:  0000000000000000  000055b7ab171380 
    00007ffc75fabad0:  0000000000000004  0000000000000004 
    00007ffc75fabae0:  0000000000000000  0000000000000000 
    00007ffc75fabaf0:  fffffffe7fffffff  ffffffffffffffff 
    00007ffc75fabb00:  ffffffffffffffff  ffffffffffffffff 
    00007ffc75fabb10:  ffffffffffffffff  ffffffffffffffff 
    00007ffc75fabb20:  ffffffffffffffff  ffffffffffffffff 
    00007ffc75fabb30:  ffffffffffffffff  ffffffffffffffff 
    00007ffc75fabb40:  ffffffffffffffff  ffffffffffffffff 
    00007ffc75fabb50:  ffffffffffffffff  ffffffffffffffff 
    00007ffc75fabb60:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f4739b2ef47
    stack: frame={sp:0x7ffc75faba70, fp:0x0} stack=[0x7ffc757ad0f0,0x7ffc75fac130)
    00007ffc75fab970:  00007ffc75fabd30  00007f473a11775a 
    00007ffc75fab980:  000000000000000b  0000000000000000 
    00007ffc75fab990:  00007f47348d8700  000055b7ab15b148 
    00007ffc75fab9a0:  00007ffc75fabe80  000055b7acce8930 
    00007ffc75fab9b0:  0000000000000000  000055b7aa637d10 
    00007ffc75fab9c0:  0000000000000000  00007f473a10ff13 
    00007ffc75fab9d0:  0000000000000005  0000000000000000 
    00007ffc75fab9e0:  2525252525252525  2525252525252525 
    00007ffc75fab9f0:  00000000000000ff  0000000000000000 
    00007ffc75faba00:  00000000000000ff  0000000000000000 
    00007ffc75faba10:  0000000000000002  0000000000000002 
    00007ffc75faba20:  0000000000000005  0000000000000000 
    00007ffc75faba30:  0000000000000004  0000000c00000000 
    00007ffc75faba40:  000000000000000e  0000000000000000 
    00007ffc75faba50:  0000000000000000  0000000000000000 
    00007ffc75faba60:  20636f6c6c616d00  203a64656c696166 
    00007ffc75faba70: <0000000000000000  0000000000000000 
    00007ffc75faba80:  0000000000000000  0000000200000000 
    00007ffc75faba90:  000000000000000b  0000000000000000 
    00007ffc75fabaa0:  0000000000000000  0000000000000000 
    00007ffc75fabab0:  0000000000000000  000000000000000a 
    00007ffc75fabac0:  0000000000000000  000055b7ab171380 
    00007ffc75fabad0:  0000000000000004  0000000000000004 
    00007ffc75fabae0:  0000000000000000  0000000000000000 
    00007ffc75fabaf0:  fffffffe7fffffff  ffffffffffffffff 
    00007ffc75fabb00:  ffffffffffffffff  ffffffffffffffff 
    00007ffc75fabb10:  ffffffffffffffff  ffffffffffffffff 
    00007ffc75fabb20:  ffffffffffffffff  ffffffffffffffff 
    00007ffc75fabb30:  ffffffffffffffff  ffffffffffffffff 
    00007ffc75fabb40:  ffffffffffffffff  ffffffffffffffff 
    00007ffc75fabb50:  ffffffffffffffff  ffffffffffffffff 
    00007ffc75fabb60:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [runnable, locked to thread]:
    text/template/parse.(*lexer).nextItem(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:195
    text/template/parse.(*Tree).peek(...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:95
    text/template/parse.(*Tree).parse(0xc00010e500)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:278 +0xa5b
    text/template/parse.(*Tree).Parse(0xc00010e500, 0x55b7aa4e7440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc0001b6720, 0xc000134350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:230 +0x249
    text/template/parse.Parse(0x55b7aa48c9b7, 0x4, 0x55b7aa4e7440, 0x16c, 0x0, 0x0, 0x0, 0x0, 0xc000134350, 0x2, ...)
    	/usr/lib/go-1.13/src/text/template/parse/parse.go:55 +0x124
    text/template.(*Template).Parse(0xc00003d840, 0x55b7aa4e7440, 0x16c, 0x4, 0xc0000fb5e8, 0x55b7ab176760)
    	/usr/lib/go-1.13/src/text/template/template.go:200 +0x113
    github.com/snapcore/snapd/systemd.init()
    	/build/snapd/parts/snapd-deb/build/systemd/systemd.go:1281 +0x3ad
    
    goroutine 6 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 7 [chan send]:
    text/template/parse.(*lexer).emit(...)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:157
    text/template/parse.lexIdentifier(0xc00013c630, 0x55b7aac06878)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:462 +0x534
    text/template/parse.(*lexer).run(0xc00013c630)
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:230 +0x39
    created by text/template/parse.lex
    	/usr/lib/go-1.13/src/text/template/parse/lex.go:223 +0x192
    
    rax    0x0
    rbx    0x7f4739edc840
    rcx    0x7f4739b2ef47
    rdx    0x0
    rdi    0x2
    rsi    0x7ffc75faba70
    rbp    0x55b7aa651e7c
    rsp    0x7ffc75faba70
    r8     0x0
    r9     0x7ffc75faba70
    r10    0x8
    r11    0x246
    r12    0x55b7acce8930
    r13    0x0
    r14    0x55b7aa637d10
    r15    0x0
    rip    0x7f4739b2ef47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000088400)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000088400)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc00004d800, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc000073f01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc0003d4d80)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [runnable, locked to thread]:
    encoding/json.Unmarshal(0xc000440e40, 0x3e, 0xafc0, 0x1811e60, 0xc00047c4d8, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:100 +0x31
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0005238c0, 0xc000440e40, 0x3e, 0xafc0, 0x7fbf6fdecb00, 0xc0005238c0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:565 +0x18b
    encoding/json.(*decodeState).object(0xc00051a8f0, 0x19ce1a0, 0xc0005238c0, 0x199, 0xc00051a918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc00051a8f0, 0x19ce1a0, 0xc0005238c0, 0x199, 0xc000530480, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc00051a8f0, 0x18bc100, 0xc000523160, 0x195, 0xc00051a918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc00051a8f0, 0x18bc100, 0xc000523160, 0x195, 0x18bc100, 0xc000523160)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc00051a8f0, 0x1815520, 0xc000522fc0, 0x16, 0xc00051a918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc00051a8f0, 0x1815520, 0xc000522fc0, 0x16, 0xc0004a0888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc00051a8f0, 0x1815520, 0xc000522fc0, 0xc00051a918, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0004407b5, 0x9e1, 0xb64b, 0x1815520, 0xc000522fc0, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000471200, 0xc0004407b5, 0x9e1, 0xb64b, 0x7fbf6fdecb00, 0xc000471200)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0001369a0, 0x19ce1a0, 0xc000471200, 0x199, 0xc0001369c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0001369a0, 0x19ce1a0, 0xc000471200, 0x199, 0xc000522d80, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0001369a0, 0x18e59a0, 0xc000405188, 0x195, 0xc0001369c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0001369a0, 0x18e59a0, 0xc000405188, 0x195, 0x18e59a0, 0xc000405188)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0001369a0, 0x1815520, 0xc000404fc0, 0x16, 0xc0001369c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0001369a0, 0x1815520, 0xc000404fc0, 0x16, 0xc000173548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0001369a0, 0x1815520, 0xc000404fc0, 0xc0001369c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc00043c000, 0x9d38, 0xfe00, 0x1815520, 0xc000404fc0, 0x7fbf6fde2d50, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000404d80, 0xc00043c000, 0x9d38, 0xfe00, 0x7fbf6fdecb00, 0xc000404d80)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0001368f0, 0x1a89300, 0xc000404d80, 0x16, 0xc000136918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0001368f0, 0x1a89300, 0xc000404d80, 0x16, 0xc000173c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0001368f0, 0x1a89300, 0xc000404d80, 0xc000136918, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc00043c000, 0x9d39, 0xfe00, 0x1a89300, 0xc000404d80, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc0003efb30, 0xc000173d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc0003efa70, 0xc0003efa40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 6 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
