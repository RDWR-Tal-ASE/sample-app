apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f82bb197f47 m=3 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f82bb197f47
    stack: frame={sp:0x7f82b8745830, fp:0x0} stack=[0x7f82b7f46288,0x7f82b8745e88)
    00007f82b8745730:  00007f82b8745af0  00007f82bb78075a 
    00007f82b8745740:  000000000000000b  0000000000000000 
    00007f82b8745750:  00007f82b4efe700  000055bccc464148 
    00007f82b8745760:  00007f82b8745c40  00007f82a8000da0 
    00007f82b8745770:  0000000000000000  000055bccb940d10 
    00007f82b8745780:  0000000000000000  00007f82bb778f13 
    00007f82b8745790:  0000000000000005  0000000000000000 
    00007f82b87457a0:  2525252525252525  2525252525252525 
    00007f82b87457b0:  00000000000000ff  0000000000000000 
    00007f82b87457c0:  00000000000000ff  0000000000000000 
    00007f82b87457d0:  0000000000000001  0000000000000012 
    00007f82b87457e0:  000000000000000e  000000000000000e 
    00007f82b87457f0:  0000000000000000  0000000000000000 
    00007f82b8745800:  ffffffffffffffff  ffffffffffffffff 
    00007f82b8745810:  0000000400000004  0000000400000004 
    00007f82b8745820:  20636f6c6c616d00  203a64656c696166 
    00007f82b8745830: <0000000000000000  0000000000000000 
    00007f82b8745840:  0000000000000000  0000000000000000 
    00007f82b8745850:  0000000000000000  0000000000000000 
    00007f82b8745860:  0000000000000000  0000000000000000 
    00007f82b8745870:  0000000000000000  0000000000000000 
    00007f82b8745880:  0000000000000000  0000000000000000 
    00007f82b8745890:  0000000000000000  0000000000000000 
    00007f82b87458a0:  0000000000000000  0000000000000000 
    00007f82b87458b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f82b87458c0:  ffffffffffffffff  ffffffffffffffff 
    00007f82b87458d0:  ffffffffffffffff  ffffffffffffffff 
    00007f82b87458e0:  ffffffffffffffff  ffffffffffffffff 
    00007f82b87458f0:  ffffffffffffffff  ffffffffffffffff 
    00007f82b8745900:  ffffffffffffffff  ffffffffffffffff 
    00007f82b8745910:  ffffffffffffffff  ffffffffffffffff 
    00007f82b8745920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f82bb197f47
    stack: frame={sp:0x7f82b8745830, fp:0x0} stack=[0x7f82b7f46288,0x7f82b8745e88)
    00007f82b8745730:  00007f82b8745af0  00007f82bb78075a 
    00007f82b8745740:  000000000000000b  0000000000000000 
    00007f82b8745750:  00007f82b4efe700  000055bccc464148 
    00007f82b8745760:  00007f82b8745c40  00007f82a8000da0 
    00007f82b8745770:  0000000000000000  000055bccb940d10 
    00007f82b8745780:  0000000000000000  00007f82bb778f13 
    00007f82b8745790:  0000000000000005  0000000000000000 
    00007f82b87457a0:  2525252525252525  2525252525252525 
    00007f82b87457b0:  00000000000000ff  0000000000000000 
    00007f82b87457c0:  00000000000000ff  0000000000000000 
    00007f82b87457d0:  0000000000000001  0000000000000012 
    00007f82b87457e0:  000000000000000e  000000000000000e 
    00007f82b87457f0:  0000000000000000  0000000000000000 
    00007f82b8745800:  ffffffffffffffff  ffffffffffffffff 
    00007f82b8745810:  0000000400000004  0000000400000004 
    00007f82b8745820:  20636f6c6c616d00  203a64656c696166 
    00007f82b8745830: <0000000000000000  0000000000000000 
    00007f82b8745840:  0000000000000000  0000000000000000 
    00007f82b8745850:  0000000000000000  0000000000000000 
    00007f82b8745860:  0000000000000000  0000000000000000 
    00007f82b8745870:  0000000000000000  0000000000000000 
    00007f82b8745880:  0000000000000000  0000000000000000 
    00007f82b8745890:  0000000000000000  0000000000000000 
    00007f82b87458a0:  0000000000000000  0000000000000000 
    00007f82b87458b0:  fffffffe7fffffff  ffffffffffffffff 
    00007f82b87458c0:  ffffffffffffffff  ffffffffffffffff 
    00007f82b87458d0:  ffffffffffffffff  ffffffffffffffff 
    00007f82b87458e0:  ffffffffffffffff  ffffffffffffffff 
    00007f82b87458f0:  ffffffffffffffff  ffffffffffffffff 
    00007f82b8745900:  ffffffffffffffff  ffffffffffffffff 
    00007f82b8745910:  ffffffffffffffff  ffffffffffffffff 
    00007f82b8745920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [runnable]:
    github.com/snapcore/snapd/client.(*Client).do(0xc00010ea80, 0x55bccb794ee7, 0x3, 0x55bccb79ed78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x55bccbdeef40, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:394 +0x2f9
    github.com/snapcore/snapd/client.(*Client).doSyncWithOpts(0xc00010ea80, 0x55bccb794ee7, 0x3, 0x55bccb79ed78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x55bccbd8a9a0, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:492 +0xf6
    github.com/snapcore/snapd/client.(*Client).SysInfo(0xc00010ea80, 0x46, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/client/client.go:727 +0xd4
    main.maybeWaitForSecurityProfileRegeneration(0xc00010ea80, 0xc000332280, 0xd)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:200 +0x1aa
    main.(*cmdRun).Execute(0xc00023feb8, 0xc000032190, 0x2, 0x3, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:240 +0x172
    main.main()
    	/build/snapd/parts/snapd-deb/build/cmd/snap/main.go:482 +0x581
    
    goroutine 6 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    rax    0x0
    rbx    0x7f82bb545840
    rcx    0x7f82bb197f47
    rdx    0x0
    rdi    0x2
    rsi    0x7f82b8745830
    rbp    0x55bccb95ae7c
    rsp    0x7f82b8745830
    r8     0x0
    r9     0x7f82b8745830
    r10    0x8
    r11    0x246
    r12    0x7f82a8000da0
    r13    0x0
    r14    0x55bccb940d10
    r15    0x0
    rip    0x7f82bb197f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 8 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    runtime: failed to create new OS thread (have 8 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000062c00)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000062c00)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x0, 0xc000046000, 0x6)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0xc000046000, 0x2a6cc00)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.handoffp(0xc000046000)
    	/usr/local/go/src/runtime/proc.go:2001 +0x52
    runtime.stoplockedm()
    	/usr/local/go/src/runtime/proc.go:2075 +0xf7
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2611 +0x48c
    runtime.goschedImpl(0xc000000180)
    	/usr/local/go/src/runtime/proc.go:2860 +0xda
    runtime.gopreempt_m(0xc000000180)
    	/usr/local/go/src/runtime/proc.go:2888 +0x34
    runtime.newstack()
    	/usr/local/go/src/runtime/stack.go:1047 +0x1bc
    runtime.morestack()
    	/usr/local/go/src/runtime/asm_amd64.s:449 +0x8f
    
    goroutine 1 [runnable, locked to thread]:
    reflect.Value.Convert(0x1825c80, 0xc00000c040, 0x97, 0x1d4e220, 0x1858200, 0x0, 0x19ce101, 0xc000535440)
    	/usr/local/go/src/reflect/value.go:2441 +0x22f
    encoding/json.(*decodeState).object(0xc000532370, 0x18bc100, 0xc000534ce0, 0x195, 0xc000532398, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:783 +0x858
    encoding/json.(*decodeState).value(0xc000532370, 0x18bc100, 0xc000534ce0, 0x195, 0x18bc100, 0xc000534ce0)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc000532370, 0x1815520, 0xc000534b40, 0x16, 0xc000532398, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc000532370, 0x1815520, 0xc000534b40, 0x16, 0xc0004ce888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc000532370, 0x1815520, 0xc000534b40, 0xc000532398, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc00046bdc7, 0x9ca, 0xc039, 0x1815520, 0xc000534b40, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00049d440, 0xc00046bdc7, 0x9ca, 0xc039, 0x7fb106cef900, 0xc00049d440)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e4a50, 0x19ce1a0, 0xc00049d440, 0x199, 0xc0000e4a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e4a50, 0x19ce1a0, 0xc00049d440, 0x199, 0xc000534900, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e4a50, 0x18e59a0, 0xc00042d3c8, 0x195, 0xc0000e4a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e4a50, 0x18e59a0, 0xc00042d3c8, 0x195, 0x18e59a0, 0xc00042d3c8)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e4a50, 0x1815520, 0xc00042d200, 0x16, 0xc0000e4a78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e4a50, 0x1815520, 0xc00042d200, 0x16, 0xc000223548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e4a50, 0x1815520, 0xc00042d200, 0xc0000e4a78, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000468000, 0x9d38, 0xfe00, 0x1815520, 0xc00042d200, 0x7fb106ef1b30, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00042cfc0, 0xc000468000, 0x9d38, 0xfe00, 0x7fb106cef900, 0xc00042cfc0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e49a0, 0x1a89300, 0xc00042cfc0, 0x16, 0xc0000e49c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e49a0, 0x1a89300, 0xc00042cfc0, 0x16, 0xc000223c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e49a0, 0x1a89300, 0xc00042cfc0, 0xc0000e49c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000468000, 0x9d39, 0xfe00, 0x1a89300, 0xc00042cfc0, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc000421b30, 0xc000223d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc000421a70, 0xc000421a40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 18 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000188000)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000188000)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc000050000, 0x7)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc000099f01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc000001200)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7fb1295b8f47 m=4 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7fb1295b8f47
    stack: frame={sp:0x7fb11fffe830, fp:0x0} stack=[0x7fb11f7ff288,0x7fb11fffee88)
    00007fb11fffe730:  00007fb11fffeaf0  00007fb129ba175a 
    00007fb11fffe740:  000000000000000b  0000000000000000 
    00007fb11fffe750:  00007fb11efbc700  000055ae9e00d148 
    00007fb11fffe760:  00007fb11fffec40  000055ae9f2b5540 
    00007fb11fffe770:  0000000000000000  000055ae9d4e9d10 
    00007fb11fffe780:  0000000000000000  00007fb129b99f13 
    00007fb11fffe790:  0000000000000005  0000000000000000 
    00007fb11fffe7a0:  2525252525252525  2525252525252525 
    00007fb11fffe7b0:  00000000000000ff  0000000000000000 
    00007fb11fffe7c0:  00000000000000ff  0000000000000000 
    00007fb11fffe7d0:  000000000000ff00  0000000000000000 
    00007fb11fffe7e0:  000055ae9cdd049a <net.unixSocket+314>  000055ae9dae8300 
    00007fb11fffe7f0:  0000000000000000  0000000000000000 
    00007fb11fffe800:  0000000000000000  0000000000000000 
    00007fb11fffe810:  0000000000000000  0000000000000000 
    00007fb11fffe820:  20636f6c6c616d00  203a64656c696166 
    00007fb11fffe830: <0000000000000000  0000000000000000 
    00007fb11fffe840:  000000c0003a37c0  000000c00040e0b0 
    00007fb11fffe850:  0000000000000000  0000000000000000 
    00007fb11fffe860:  0000000000000000  0000000000000000 
    00007fb11fffe870:  0000000000000000  0000000000000000 
    00007fb11fffe880:  0000000000000000  0000000000000000 
    00007fb11fffe890:  0000000000000000  0000000000000000 
    00007fb11fffe8a0:  0000000000000000  0000000000000000 
    00007fb11fffe8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007fb11fffe8c0:  ffffffffffffffff  ffffffffffffffff 
    00007fb11fffe8d0:  ffffffffffffffff  ffffffffffffffff 
    00007fb11fffe8e0:  ffffffffffffffff  ffffffffffffffff 
    00007fb11fffe8f0:  ffffffffffffffff  ffffffffffffffff 
    00007fb11fffe900:  ffffffffffffffff  ffffffffffffffff 
    00007fb11fffe910:  ffffffffffffffff  ffffffffffffffff 
    00007fb11fffe920:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7fb1295b8f47
    stack: frame={sp:0x7fb11fffe830, fp:0x0} stack=[0x7fb11f7ff288,0x7fb11fffee88)
    00007fb11fffe730:  00007fb11fffeaf0  00007fb129ba175a 
    00007fb11fffe740:  000000000000000b  0000000000000000 
    00007fb11fffe750:  00007fb11efbc700  000055ae9e00d148 
    00007fb11fffe760:  00007fb11fffec40  000055ae9f2b5540 
    00007fb11fffe770:  0000000000000000  000055ae9d4e9d10 
    00007fb11fffe780:  0000000000000000  00007fb129b99f13 
    00007fb11fffe790:  0000000000000005  0000000000000000 
    00007fb11fffe7a0:  2525252525252525  2525252525252525 
    00007fb11fffe7b0:  00000000000000ff  0000000000000000 
    00007fb11fffe7c0:  00000000000000ff  0000000000000000 
    00007fb11fffe7d0:  000000000000ff00  0000000000000000 
    00007fb11fffe7e0:  000055ae9cdd049a <net.unixSocket+314>  000055ae9dae8300 
    00007fb11fffe7f0:  0000000000000000  0000000000000000 
    00007fb11fffe800:  0000000000000000  0000000000000000 
    00007fb11fffe810:  0000000000000000  0000000000000000 
    00007fb11fffe820:  20636f6c6c616d00  203a64656c696166 
    00007fb11fffe830: <0000000000000000  0000000000000000 
    00007fb11fffe840:  000000c0003a37c0  000000c00040e0b0 
    00007fb11fffe850:  0000000000000000  0000000000000000 
    00007fb11fffe860:  0000000000000000  0000000000000000 
    00007fb11fffe870:  0000000000000000  0000000000000000 
    00007fb11fffe880:  0000000000000000  0000000000000000 
    00007fb11fffe890:  0000000000000000  0000000000000000 
    00007fb11fffe8a0:  0000000000000000  0000000000000000 
    00007fb11fffe8b0:  fffffffe7fffffff  ffffffffffffffff 
    00007fb11fffe8c0:  ffffffffffffffff  ffffffffffffffff 
    00007fb11fffe8d0:  ffffffffffffffff  ffffffffffffffff 
    00007fb11fffe8e0:  ffffffffffffffff  ffffffffffffffff 
    00007fb11fffe8f0:  ffffffffffffffff  ffffffffffffffff 
    00007fb11fffe900:  ffffffffffffffff  ffffffffffffffff 
    00007fb11fffe910:  ffffffffffffffff  ffffffffffffffff 
    00007fb11fffe920:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [runnable]:
    context.WithDeadline(0x55ae9dae8300, 0xc0000be038, 0xc0a5c25bc526e246, 0x6680039cd, 0x55ae9e066ec0, 0x0, 0x0, 0x0)
    	/usr/lib/go-1.13/src/context/context.go:416 +0x25d
    context.WithTimeout(0x55ae9dae8300, 0xc0000be038, 0x5d21dba00, 0x1, 0xc0003dec68, 0x0)
    	/usr/lib/go-1.13/src/context/context.go:464 +0x6d
    github.com/snapcore/snapd/client.(*Client).rawWithTimeout(0xc0003721c0, 0x55ae9dae8300, 0xc0000be038, 0x55ae9d33dee7, 0x3, 0x55ae9d347d78, 0xf, 0x0, 0x0, 0x0, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:290 +0x71
    github.com/snapcore/snapd/client.(*Client).do(0xc0003721c0, 0x55ae9d33dee7, 0x3, 0x55ae9d347d78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x55ae9d997f40, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:387 +0x1f0
    github.com/snapcore/snapd/client.(*Client).doSyncWithOpts(0xc0003721c0, 0x55ae9d33dee7, 0x3, 0x55ae9d347d78, 0xf, 0x0, 0x0, 0x0, 0x0, 0x55ae9d9339a0, ...)
    	/build/snapd/parts/snapd-deb/build/client/client.go:492 +0xf6
    github.com/snapcore/snapd/client.(*Client).SysInfo(0xc0003721c0, 0x46, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/client/client.go:727 +0xd4
    main.maybeWaitForSecurityProfileRegeneration(0xc0003721c0, 0xc0003a37c0, 0xd)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:200 +0x1aa
    main.(*cmdRun).Execute(0xc000251eb8, 0xc0000a8160, 0x2, 0x3, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:240 +0x172
    main.main()
    	/build/snapd/parts/snapd-deb/build/cmd/snap/main.go:482 +0x581
    
    goroutine 19 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    rax    0x0
    rbx    0x7fb129966840
    rcx    0x7fb1295b8f47
    rdx    0x0
    rdi    0x2
    rsi    0x7fb11fffe830
    rbp    0x55ae9d503e7c
    rsp    0x7fb11fffe830
    r8     0x0
    r9     0x7fb11fffe830
    r10    0x8
    r11    0x246
    r12    0x55ae9f2b5540
    r13    0x0
    r14    0x55ae9d4e9d10
    r15    0x0
    rip    0x7fb1295b8f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
