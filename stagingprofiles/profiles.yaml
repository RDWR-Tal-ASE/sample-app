apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    Error: bad file '-': yaml: line 11: mapping values are not allowed in this context
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000108000)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000108000)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc000046000, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc00006df01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc00008a300)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [syscall, locked to thread]:
    reflect.mapassign(0x18bbf80, 0xc0004a3260, 0xc0004ba560, 0xc0004ba540)
    	/usr/local/go/src/runtime/map.go:1319 +0x3f
    reflect.Value.SetMapIndex(0x18bbf80, 0xc00042c458, 0x195, 0x1858200, 0xc0004ba560, 0x98, 0x1897a80, 0xc0004ba540, 0x194)
    	/usr/local/go/src/reflect/value.go:1706 +0x27c
    encoding/json.(*decodeState).object(0xc0004c66e0, 0x1811e60, 0xc00042c458, 0x16, 0xc0004c6708, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:807 +0x8da
    encoding/json.(*decodeState).value(0xc0004c66e0, 0x1811e60, 0xc00042c458, 0x16, 0xc00044dbc8, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0004c66e0, 0x1811e60, 0xc00042c458, 0xc0004c6708, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003ee74b, 0x38, 0xb6b5, 0x1811e60, 0xc00042c458, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0004b3440, 0xc0003ee74b, 0x38, 0xb6b5, 0x7f013bc65880, 0xc0004b3440)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:565 +0x18b
    encoding/json.(*decodeState).object(0xc0004b4210, 0x19ce1a0, 0xc0004b3440, 0x199, 0xc0004b4238, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0004b4210, 0x19ce1a0, 0xc0004b3440, 0x199, 0xc0004cc480, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004b4210, 0x18bc100, 0xc0004b2ce0, 0x195, 0xc0004b4238, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004b4210, 0x18bc100, 0xc0004b2ce0, 0x195, 0x18bc100, 0xc0004b2ce0)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004b4210, 0x1815520, 0xc0004b2b40, 0x16, 0xc0004b4238, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004b4210, 0x1815520, 0xc0004b2b40, 0x16, 0xc00044e888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0004b4210, 0x1815520, 0xc0004b2b40, 0xc0004b4238, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003eddc7, 0x9ca, 0xc039, 0x1815520, 0xc0004b2b40, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00041f440, 0xc0003eddc7, 0x9ca, 0xc039, 0x7f013bc65880, 0xc00041f440)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e48f0, 0x19ce1a0, 0xc00041f440, 0x199, 0xc0000e4918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e48f0, 0x19ce1a0, 0xc00041f440, 0x199, 0xc0004b2900, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e48f0, 0x18e59a0, 0xc0003ad3c8, 0x195, 0xc0000e4918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e48f0, 0x18e59a0, 0xc0003ad3c8, 0x195, 0x18e59a0, 0xc0003ad3c8)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0000e48f0, 0x1815520, 0xc0003ad200, 0x16, 0xc0000e4918, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0000e48f0, 0x1815520, 0xc0003ad200, 0x16, 0xc0001a3548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e48f0, 0x1815520, 0xc0003ad200, 0xc0000e4918, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003ea000, 0x9d38, 0xfe00, 0x1815520, 0xc0003ad200, 0x7f013bc5b4a8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0003acfc0, 0xc0003ea000, 0x9d38, 0xfe00, 0x7f013bc65880, 0xc0003acfc0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0000e4840, 0x1a89300, 0xc0003acfc0, 0x16, 0xc0000e4868, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0000e4840, 0x1a89300, 0xc0003acfc0, 0x16, 0xc0001a3c18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0000e4840, 0x1a89300, 0xc0003acfc0, 0xc0000e4868, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003ea000, 0x9d39, 0xfe00, 0x1a89300, 0xc0003acfc0, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc00039fb30, 0xc0001a3d68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc00039fa70, 0xc00039fa40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 18 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: 
    -----
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7fc482a82f47 m=0 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7fc482a82f47
    stack: frame={sp:0x7ffdc2c72390, fp:0x0} stack=[0x7ffdc2473bd0,0x7ffdc2c72c10)
    00007ffdc2c72290:  0000000000000005  0000ffff00001fa0 
    00007ffdc2c722a0:  00007ffdc2c727a0  0000000000cd9540 
    00007ffdc2c722b0:  0000000000000000  0000000000593e90 
    00007ffdc2c722c0:  0000000000000000  00007fc483063f13 
    00007ffdc2c722d0:  0000000000000005  0000000000000000 
    00007ffdc2c722e0:  00007ffdc2c72670  00007fc482a54ce0 
    00007ffdc2c722f0:  00007ffdc2c726b0  00007fc48306b75a 
    00007ffdc2c72300:  0000000000000000  0000000000000000 
    00007ffdc2c72310:  0000000000000000  00007ffdc2c727a0 
    00007ffdc2c72320:  2525252525252525  2525252525252525 
    00007ffdc2c72330:  00000000ff00ff00  0000000000000000 
    00007ffdc2c72340:  00000000ff000000  0000000000000000 
    00007ffdc2c72350:  0000000000000000  0000000000000000 
    00007ffdc2c72360:  2f7273752f3a6e69  73752f3a6e696273 
    00007ffdc2c72370:  752f3a6e69622f72  6c61636f6c2f7273 
    00007ffdc2c72380:  73752f3a6e69622f  732f6e6962732f72 
    00007ffdc2c72390: <0000000000000000  6e69622f70616e73 
    00007ffdc2c723a0:  6c6c616d00732520  656c69616620636f 
    00007ffdc2c723b0:  0000000000000000  0000000000000000 
    00007ffdc2c723c0:  0000000000000000  0000000000000000 
    00007ffdc2c723d0:  0000000000000000  0000000000000000 
    00007ffdc2c723e0:  0000000000000000  0000000000000000 
    00007ffdc2c723f0:  0000000000000000  0000000000000000 
    00007ffdc2c72400:  0000000000000000  0000000000000000 
    00007ffdc2c72410:  fffffffe7fffffff  ffffffffffffffff 
    00007ffdc2c72420:  ffffffffffffffff  ffffffffffffffff 
    00007ffdc2c72430:  ffffffffffffffff  ffffffffffffffff 
    00007ffdc2c72440:  ffffffffffffffff  ffffffffffffffff 
    00007ffdc2c72450:  ffffffffffffffff  ffffffffffffffff 
    00007ffdc2c72460:  ffffffffffffffff  ffffffffffffffff 
    00007ffdc2c72470:  ffffffffffffffff  ffffffffffffffff 
    00007ffdc2c72480:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7fc482a82f47
    stack: frame={sp:0x7ffdc2c72390, fp:0x0} stack=[0x7ffdc2473bd0,0x7ffdc2c72c10)
    00007ffdc2c72290:  0000000000000005  0000ffff00001fa0 
    00007ffdc2c722a0:  00007ffdc2c727a0  0000000000cd9540 
    00007ffdc2c722b0:  0000000000000000  0000000000593e90 
    00007ffdc2c722c0:  0000000000000000  00007fc483063f13 
    00007ffdc2c722d0:  0000000000000005  0000000000000000 
    00007ffdc2c722e0:  00007ffdc2c72670  00007fc482a54ce0 
    00007ffdc2c722f0:  00007ffdc2c726b0  00007fc48306b75a 
    00007ffdc2c72300:  0000000000000000  0000000000000000 
    00007ffdc2c72310:  0000000000000000  00007ffdc2c727a0 
    00007ffdc2c72320:  2525252525252525  2525252525252525 
    00007ffdc2c72330:  00000000ff00ff00  0000000000000000 
    00007ffdc2c72340:  00000000ff000000  0000000000000000 
    00007ffdc2c72350:  0000000000000000  0000000000000000 
    00007ffdc2c72360:  2f7273752f3a6e69  73752f3a6e696273 
    00007ffdc2c72370:  752f3a6e69622f72  6c61636f6c2f7273 
    00007ffdc2c72380:  73752f3a6e69622f  732f6e6962732f72 
    00007ffdc2c72390: <0000000000000000  6e69622f70616e73 
    00007ffdc2c723a0:  6c6c616d00732520  656c69616620636f 
    00007ffdc2c723b0:  0000000000000000  0000000000000000 
    00007ffdc2c723c0:  0000000000000000  0000000000000000 
    00007ffdc2c723d0:  0000000000000000  0000000000000000 
    00007ffdc2c723e0:  0000000000000000  0000000000000000 
    00007ffdc2c723f0:  0000000000000000  0000000000000000 
    00007ffdc2c72400:  0000000000000000  0000000000000000 
    00007ffdc2c72410:  fffffffe7fffffff  ffffffffffffffff 
    00007ffdc2c72420:  ffffffffffffffff  ffffffffffffffff 
    00007ffdc2c72430:  ffffffffffffffff  ffffffffffffffff 
    00007ffdc2c72440:  ffffffffffffffff  ffffffffffffffff 
    00007ffdc2c72450:  ffffffffffffffff  ffffffffffffffff 
    00007ffdc2c72460:  ffffffffffffffff  ffffffffffffffff 
    00007ffdc2c72470:  ffffffffffffffff  ffffffffffffffff 
    00007ffdc2c72480:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [runnable, locked to thread]:
    runtime.gcenable()
    	/usr/lib/go-1.13/src/runtime/mgc.go:207 +0xc2
    runtime.main()
    	/usr/lib/go-1.13/src/runtime/proc.go:166 +0x121
    runtime.goexit()
    	/usr/lib/go-1.13/src/runtime/asm_amd64.s:1357 +0x1
    
    rax    0x0
    rbx    0x7fc482e30840
    rcx    0x7fc482a82f47
    rdx    0x0
    rdi    0x2
    rsi    0x7ffdc2c72390
    rbp    0x59f2ca
    rsp    0x7ffdc2c72390
    r8     0x0
    r9     0x7ffdc2c72390
    r10    0x8
    r11    0x246
    r12    0xcd9540
    r13    0x0
    r14    0x593e90
    r15    0x0
    rip    0x7fc482a82f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    -----
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f752d57ff47 m=10 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f752d57ff47
    stack: frame={sp:0x7f751a864840, fp:0x0} stack=[0x7f751a065288,0x7f751a864e88)
    00007f751a864740:  00007f751a864b20  00007f752db60f13 
    00007f751a864750:  0000000000000005  000055e774514148 
    00007f751a864760:  00007f751a864c50  000055e776328fc0 
    00007f751a864770:  0000000000000000  000055e7739f0d10 
    00007f751a864780:  0000000000000000  00007f752db60f13 
    00007f751a864790:  0000000000000005  0000000000000000 
    00007f751a8647a0:  2525252525252525  2525252525252525 
    00007f751a8647b0:  00000000000000ff  0000000000000000 
    00007f751a8647c0:  00000000000000ff  0000000000000000 
    00007f751a8647d0:  00007f74fc000010  00007f74fc000010 
    00007f751a8647e0:  000000000000000e  000000000000000e 
    00007f751a8647f0:  0000000000000000  0000000000000000 
    00007f751a864800:  ffffffffffffffff  ffffffffffffffff 
    00007f751a864810:  0000000400000004  0000000400000004 
    00007f751a864820:  20636f6c6c616d00  203a64656c696166 
    00007f751a864830:  0000000000000000  0000000000000000 
    00007f751a864840: <0000000000000000  000000c0001099e0 
    00007f751a864850:  0000000000000000  0000000000000000 
    00007f751a864860:  0000000000000000  0000000000000000 
    00007f751a864870:  000000c0003e4b40  000000c0003e4bd0 
    00007f751a864880:  000000c0003e4c60  000000c0003e4cf0 
    00007f751a864890:  000000c0003e4d80  000000c0003e4e10 
    00007f751a8648a0:  0000000000000000  0000000000000000 
    00007f751a8648b0:  00007f752d92d560  00007f752d930bc0 
    00007f751a8648c0:  fffffffe7fffffff  ffffffffffffffff 
    00007f751a8648d0:  ffffffffffffffff  ffffffffffffffff 
    00007f751a8648e0:  ffffffffffffffff  ffffffffffffffff 
    00007f751a8648f0:  ffffffffffffffff  ffffffffffffffff 
    00007f751a864900:  ffffffffffffffff  ffffffffffffffff 
    00007f751a864910:  ffffffffffffffff  ffffffffffffffff 
    00007f751a864920:  ffffffffffffffff  ffffffffffffffff 
    00007f751a864930:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f752d57ff47
    stack: frame={sp:0x7f751a864840, fp:0x0} stack=[0x7f751a065288,0x7f751a864e88)
    00007f751a864740:  00007f751a864b20  00007f752db60f13 
    00007f751a864750:  0000000000000005  000055e774514148 
    00007f751a864760:  00007f751a864c50  000055e776328fc0 
    00007f751a864770:  0000000000000000  000055e7739f0d10 
    00007f751a864780:  0000000000000000  00007f752db60f13 
    00007f751a864790:  0000000000000005  0000000000000000 
    00007f751a8647a0:  2525252525252525  2525252525252525 
    00007f751a8647b0:  00000000000000ff  0000000000000000 
    00007f751a8647c0:  00000000000000ff  0000000000000000 
    00007f751a8647d0:  00007f74fc000010  00007f74fc000010 
    00007f751a8647e0:  000000000000000e  000000000000000e 
    00007f751a8647f0:  0000000000000000  0000000000000000 
    00007f751a864800:  ffffffffffffffff  ffffffffffffffff 
    00007f751a864810:  0000000400000004  0000000400000004 
    00007f751a864820:  20636f6c6c616d00  203a64656c696166 
    00007f751a864830:  0000000000000000  0000000000000000 
    00007f751a864840: <0000000000000000  000000c0001099e0 
    00007f751a864850:  0000000000000000  0000000000000000 
    00007f751a864860:  0000000000000000  0000000000000000 
    00007f751a864870:  000000c0003e4b40  000000c0003e4bd0 
    00007f751a864880:  000000c0003e4c60  000000c0003e4cf0 
    00007f751a864890:  000000c0003e4d80  000000c0003e4e10 
    00007f751a8648a0:  0000000000000000  0000000000000000 
    00007f751a8648b0:  00007f752d92d560  00007f752d930bc0 
    00007f751a8648c0:  fffffffe7fffffff  ffffffffffffffff 
    00007f751a8648d0:  ffffffffffffffff  ffffffffffffffff 
    00007f751a8648e0:  ffffffffffffffff  ffffffffffffffff 
    00007f751a8648f0:  ffffffffffffffff  ffffffffffffffff 
    00007f751a864900:  ffffffffffffffff  ffffffffffffffff 
    00007f751a864910:  ffffffffffffffff  ffffffffffffffff 
    00007f751a864920:  ffffffffffffffff  ffffffffffffffff 
    00007f751a864930:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [runnable]:
    strings.(*genericReplacer).lookup(0xc00036e840, 0xc00049c66d, 0x0, 0x7f752dc91000, 0xc0004a7a00, 0xc000439b01, 0x0, 0x0)
    	/usr/lib/go-1.13/src/strings/replace.go:221 +0x20f
    strings.(*genericReplacer).WriteString(0xc00036e840, 0x55e773fd8a80, 0xc0004a7a00, 0xc00049c66d, 0x19, 0x5, 0x0, 0x0)
    	/usr/lib/go-1.13/src/strings/replace.go:351 +0x145
    strings.(*genericReplacer).Replace(0xc00036e840, 0xc00049c66d, 0x19, 0xc000437c7a, 0x5)
    	/usr/lib/go-1.13/src/strings/replace.go:332 +0xb5
    strings.(*Replacer).Replace(0xc00003c2c0, 0xc00049c66d, 0x19, 0x55e7739f07a6, 0x5)
    	/usr/lib/go-1.13/src/strings/replace.go:97 +0x6f
    github.com/snapcore/snapd/osutil.ParseMountInfoEntry(0xc00049c620, 0x66, 0x66, 0x168, 0xc00049c620)
    	/build/snapd/parts/snapd-deb/build/osutil/mountinfo_linux.go:194 +0x4c9
    github.com/snapcore/snapd/osutil.ReadMountInfo(0x55e773fd88c0, 0xc00045a148, 0xc00045a148, 0x55e773fd88c0, 0xc00045a148, 0x1, 0xc000438da0)
    	/build/snapd/parts/snapd-deb/build/osutil/mountinfo_linux.go:121 +0x119
    github.com/snapcore/snapd/osutil.LoadMountInfo(0x0, 0x0, 0x0, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/osutil/mountinfo_linux.go:112 +0xf2
    github.com/snapcore/snapd/sandbox/selinux.getSELinuxMount(0x2, 0x2, 0xc000438da0, 0x12)
    	/build/snapd/parts/snapd-deb/build/sandbox/selinux/selinux_linux.go:65 +0x28
    github.com/snapcore/snapd/sandbox/selinux.IsEnabled(0xc000424010, 0xd, 0xc000436d78)
    	/build/snapd/parts/snapd-deb/build/sandbox/selinux/selinux_linux.go:33 +0x28
    main.maybeRestoreSecurityContext(0xc000492050, 0xc000436d78, 0xc000436d78, 0x0)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:433 +0x7c
    main.createUserDataDirs(0xc00040e380, 0xc000436d78, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:426 +0x591
    main.(*cmdRun).runSnapConfine(0xc0004ffeb8, 0xc00040e380, 0xc000436d80, 0xa, 0x7ffc670f1ef3, 0x2, 0x0, 0x0, 0xc000032190, 0x2, ...)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:1043 +0x3a5
    main.(*cmdRun).snapRunApp(0xc00023feb8, 0x7ffc670f1ef3, 0x2, 0xc000032190, 0x2, 0x2, 0xc0003b69f0, 0xc00026d900)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:505 +0x1b9
    main.(*cmdRun).Execute(0xc00023feb8, 0xc000032190, 0x2, 0x3, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:257 +0x264
    main.main()
    	/build/snapd/parts/snapd-deb/build/cmd/snap/main.go:482 +0x581
    
    goroutine 6 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 10 [IO wait]:
    internal/poll.runtime_pollWait(0x7f752dcd1ea8, 0x72, 0xffffffffffffffff)
    	/usr/lib/go-1.13/src/runtime/netpoll.go:184 +0x57
    internal/poll.(*pollDesc).wait(0xc0000bf198, 0x72, 0x1000, 0x1000, 0xffffffffffffffff)
    	/usr/lib/go-1.13/src/internal/poll/fd_poll_runtime.go:87 +0x47
    internal/poll.(*pollDesc).waitRead(...)
    	/usr/lib/go-1.13/src/internal/poll/fd_poll_runtime.go:92
    internal/poll.(*FD).Read(0xc0000bf180, 0xc000426000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
    	/usr/lib/go-1.13/src/internal/poll/fd_unix.go:169 +0x1d1
    net.(*netFD).Read(0xc0000bf180, 0xc000426000, 0x1000, 0x1000, 0x55e7730b9e8e, 0xc00006cb20, 0x55e7730e2670)
    	/usr/lib/go-1.13/src/net/fd_unix.go:202 +0x51
    net.(*conn).Read(0xc0000103b8, 0xc000426000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
    	/usr/lib/go-1.13/src/net/net.go:184 +0x6a
    net/http.(*persistConn).Read(0xc0001099e0, 0xc000426000, 0x1000, 0x1000, 0xc00009d080, 0xc00006cc20, 0x55e77308eb65)
    	/usr/lib/go-1.13/src/net/http/transport.go:1758 +0x77
    bufio.(*Reader).fill(0xc0001ca960)
    	/usr/lib/go-1.13/src/bufio/bufio.go:100 +0x105
    bufio.(*Reader).Peek(0xc0001ca960, 0x1, 0x0, 0x0, 0x1, 0xc00009cf00, 0x0)
    	/usr/lib/go-1.13/src/bufio/bufio.go:138 +0x51
    net/http.(*persistConn).readLoop(0xc0001099e0)
    	/usr/lib/go-1.13/src/net/http/transport.go:1911 +0x1d8
    created by net/http.(*Transport).dialConn
    	/usr/lib/go-1.13/src/net/http/transport.go:1580 +0xb0f
    
    goroutine 11 [select]:
    net/http.(*persistConn).writeLoop(0xc0001099e0)
    	/usr/lib/go-1.13/src/net/http/transport.go:2210 +0x125
    created by net/http.(*Transport).dialConn
    	/usr/lib/go-1.13/src/net/http/transport.go:1581 +0xb34
    
    rax    0x0
    rbx    0x7f752d92d840
    rcx    0x7f752d57ff47
    rdx    0x0
    rdi    0x2
    rsi    0x7f751a864840
    rbp    0x55e773a0ae7c
    rsp    0x7f751a864840
    r8     0x0
    r9     0x7f751a864840
    r10    0x8
    r11    0x246
    r12    0x55e776328fc0
    r13    0x0
    r14    0x55e7739f0d10
    r15    0x0
    rip    0x7f752d57ff47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
