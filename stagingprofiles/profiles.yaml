apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f943febfe87 m=0 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f943febfe87
    stack: frame={sp:0x7ffd3a0dcd10, fp:0x0} stack=[0x7ffd398de3c0,0x7ffd3a0dd400)
    0x00007ffd3a0dcc10:  0x0000000000000005  0x0000ffff00001fa0 
    0x00007ffd3a0dcc20:  0x00007ffd3a0dd060  0x000000000000000b 
    0x00007ffd3a0dcc30:  0x00007ffd3a0dd120  0x0000000000af1480 
    0x00007ffd3a0dcc40:  0x00007f94194701c3  0x00007f94404a1053 
    0x00007ffd3a0dcc50:  0x0000000000000005  0x0000000000000000 
    0x00007ffd3a0dcc60:  0x00007ffd3a0dcff0  0x00007f943fe91d38 
    0x00007ffd3a0dcc70:  0x00007ffd3a0dd030  0x00007f94404a88aa 
    0x00007ffd3a0dcc80:  0x0000000000000000  0x0000000000000000 
    0x00007ffd3a0dcc90:  0x0000000000000000  0x00007ffd3a0dd120 
    0x00007ffd3a0dcca0:  0x2525252525252525  0x2525252525252525 
    0x00007ffd3a0dccb0:  0x00000000000000ff  0x0000000000000000 
    0x00007ffd3a0dccc0:  0x00000000000000ff  0x0000000000000000 
    0x00007ffd3a0dccd0:  0x0000000000000000  0x0000000000000000 
    0x00007ffd3a0dcce0:  0x6e732f3a6e696273  0x37312f71792f7061 
    0x00007ffd3a0dccf0:  0x2f3a6e69622f3230  0x61636f6c2f727375 
    0x00007ffd3a0dcd00:  0x2f3a6e6962732f6c  0x61636f6c2f727375 
    0x00007ffd3a0dcd10: <0x0000000000000000  0x3a6e6962732f7273 
    0x00007ffd3a0dcd20:  0x656d69746e757200  0x756f203a6f67632f 
    0x00007ffd3a0dcd30:  0x0000000000000000  0x0000000000000000 
    0x00007ffd3a0dcd40:  0x3a6e69622f323037  0x636f6c2f7273752f 
    0x00007ffd3a0dcd50:  0x3a6e6962732f6c61  0x636f6c2f7273752f 
    0x00007ffd3a0dcd60:  0x2f3a6e69622f6c61  0x6e6962732f727375 
    0x00007ffd3a0dcd70:  0x69622f7273752f3a  0x3a6e6962732f3a6e 
    0x00007ffd3a0dcd80:  0x73752f3a6e69622f  0x3a73656d61672f72 
    0x00007ffd3a0dcd90:  0xfffffffe7fffffff  0xffffffffffffffff 
    0x00007ffd3a0dcda0:  0xffffffffffffffff  0xffffffffffffffff 
    0x00007ffd3a0dcdb0:  0xffffffffffffffff  0xffffffffffffffff 
    0x00007ffd3a0dcdc0:  0xffffffffffffffff  0xffffffffffffffff 
    0x00007ffd3a0dcdd0:  0xffffffffffffffff  0xffffffffffffffff 
    0x00007ffd3a0dcde0:  0xffffffffffffffff  0xffffffffffffffff 
    0x00007ffd3a0dcdf0:  0xffffffffffffffff  0xffffffffffffffff 
    0x00007ffd3a0dce00:  0xffffffffffffffff  0xffffffffffffffff 
    runtime: unknown pc 0x7f943febfe87
    stack: frame={sp:0x7ffd3a0dcd10, fp:0x0} stack=[0x7ffd398de3c0,0x7ffd3a0dd400)
    0x00007ffd3a0dcc10:  0x0000000000000005  0x0000ffff00001fa0 
    0x00007ffd3a0dcc20:  0x00007ffd3a0dd060  0x000000000000000b 
    0x00007ffd3a0dcc30:  0x00007ffd3a0dd120  0x0000000000af1480 
    0x00007ffd3a0dcc40:  0x00007f94194701c3  0x00007f94404a1053 
    0x00007ffd3a0dcc50:  0x0000000000000005  0x0000000000000000 
    0x00007ffd3a0dcc60:  0x00007ffd3a0dcff0  0x00007f943fe91d38 
    0x00007ffd3a0dcc70:  0x00007ffd3a0dd030  0x00007f94404a88aa 
    0x00007ffd3a0dcc80:  0x0000000000000000  0x0000000000000000 
    0x00007ffd3a0dcc90:  0x0000000000000000  0x00007ffd3a0dd120 
    0x00007ffd3a0dcca0:  0x2525252525252525  0x2525252525252525 
    0x00007ffd3a0dccb0:  0x00000000000000ff  0x0000000000000000 
    0x00007ffd3a0dccc0:  0x00000000000000ff  0x0000000000000000 
    0x00007ffd3a0dccd0:  0x0000000000000000  0x0000000000000000 
    0x00007ffd3a0dcce0:  0x6e732f3a6e696273  0x37312f71792f7061 
    0x00007ffd3a0dccf0:  0x2f3a6e69622f3230  0x61636f6c2f727375 
    0x00007ffd3a0dcd00:  0x2f3a6e6962732f6c  0x61636f6c2f727375 
    0x00007ffd3a0dcd10: <0x0000000000000000  0x3a6e6962732f7273 
    0x00007ffd3a0dcd20:  0x656d69746e757200  0x756f203a6f67632f 
    0x00007ffd3a0dcd30:  0x0000000000000000  0x0000000000000000 
    0x00007ffd3a0dcd40:  0x3a6e69622f323037  0x636f6c2f7273752f 
    0x00007ffd3a0dcd50:  0x3a6e6962732f6c61  0x636f6c2f7273752f 
    0x00007ffd3a0dcd60:  0x2f3a6e69622f6c61  0x6e6962732f727375 
    0x00007ffd3a0dcd70:  0x69622f7273752f3a  0x3a6e6962732f3a6e 
    0x00007ffd3a0dcd80:  0x73752f3a6e69622f  0x3a73656d61672f72 
    0x00007ffd3a0dcd90:  0xfffffffe7fffffff  0xffffffffffffffff 
    0x00007ffd3a0dcda0:  0xffffffffffffffff  0xffffffffffffffff 
    0x00007ffd3a0dcdb0:  0xffffffffffffffff  0xffffffffffffffff 
    0x00007ffd3a0dcdc0:  0xffffffffffffffff  0xffffffffffffffff 
    0x00007ffd3a0dcdd0:  0xffffffffffffffff  0xffffffffffffffff 
    0x00007ffd3a0dcde0:  0xffffffffffffffff  0xffffffffffffffff 
    0x00007ffd3a0dcdf0:  0xffffffffffffffff  0xffffffffffffffff 
    0x00007ffd3a0dce00:  0xffffffffffffffff  0xffffffffffffffff 
    
    goroutine 1 [chan receive, locked to thread]:
    runtime.gopark(0x7f944066f108?, 0xc000046720?, 0x25?, 0xed?, 0x0?)
    	/snap/go/9415/src/runtime/proc.go:361 +0xd6
    runtime.chanrecv(0xc000070000, 0x0, 0x1)
    	/snap/go/9415/src/runtime/chan.go:577 +0x56c
    runtime.chanrecv1(0x0?, 0x2?)
    	/snap/go/9415/src/runtime/chan.go:440 +0x18
    runtime.gcenable()
    	/snap/go/9415/src/runtime/mgc.go:179 +0xb6
    runtime.main()
    	/snap/go/9415/src/runtime/proc.go:209 +0x13d
    runtime.goexit()
    	/snap/go/9415/src/runtime/asm_amd64.s:1571 +0x1
    
    rax    0x0
    rbx    0x7f944026d840
    rcx    0x7f943febfe87
    rdx    0x0
    rdi    0x2
    rsi    0x7ffd3a0dcd10
    rbp    0x7ffd3a0dd060
    rsp    0x7ffd3a0dcd10
    r8     0x0
    r9     0x7ffd3a0dcd10
    r10    0x8
    r11    0x246
    r12    0x83e0fe
    r13    0x7ffd3a0dd120
    r14    0xaf1480
    r15    0x7f94194701c3
    rip    0x7f943febfe87
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 9 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000500400)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000500400)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc000055000, 0x8)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0x426301)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc00008a300)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [runnable, locked to thread]:
    reflect.Value.Convert(0x1825c80, 0xc00030b4c0, 0x97, 0x1d4e220, 0x1858200, 0x0, 0x1, 0x0)
    	/usr/local/go/src/reflect/value.go:2441 +0x22f
    encoding/json.(*decodeState).object(0xc0006b8160, 0x18bc100, 0xc0006b7830, 0x195, 0xc0006b8188, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:783 +0x858
    encoding/json.(*decodeState).value(0xc0006b8160, 0x18bc100, 0xc0006b7830, 0x195, 0x18bc100, 0xc0006b7830)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0006b8160, 0x1815520, 0xc0006b7680, 0x16, 0xc0006b8188, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0006b8160, 0x1815520, 0xc0006b7680, 0x16, 0xc0004228d0, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0006b8160, 0x1815520, 0xc0006b7680, 0xc0006b8188, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0006834a0, 0x906, 0xc960, 0x1815520, 0xc0006b7680, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0003fe000, 0xc0006834a0, 0x906, 0xc960, 0x7f358358db00, 0xc0003fe000)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0002eac60, 0x19ce1a0, 0xc0003fe000, 0x199, 0xc0002eac88, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0002eac60, 0x19ce1a0, 0xc0003fe000, 0x199, 0xc0006b7440, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0002eac60, 0x18e59a0, 0xc0002f0888, 0x195, 0xc0002eac88, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0002eac60, 0x18e59a0, 0xc0002f0888, 0x195, 0x18e59a0, 0xc0002f0888)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0002eac60, 0x1815520, 0xc0002f06c0, 0x16, 0xc0002eac88, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0002eac60, 0x1815520, 0xc0002f06c0, 0x16, 0xc000423590, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0002eac60, 0x1815520, 0xc0002f06c0, 0xc0002eac88, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000680000, 0x9d38, 0xfe00, 0x1815520, 0xc0002f06c0, 0x7f35835903a8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc0002f0480, 0xc000680000, 0x9d38, 0xfe00, 0x7f358358db00, 0xc0002f0480)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc0002eabb0, 0x1a89300, 0xc0002f0480, 0x16, 0xc0002eabd8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc0002eabb0, 0x1a89300, 0xc0002f0480, 0x16, 0xc000423c60, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0002eabb0, 0x1a89300, 0xc0002f0480, 0xc0002eabd8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc000680000, 0x9d39, 0xfe00, 0x1a89300, 0xc0002f0480, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc000245d40, 0x0, 0x0)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.4()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:38 +0x57
    
    goroutine 6 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    runtime: failed to create new OS thread (have 4 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x7b2d88, 0x9)
    	/usr/lib/go-1.13/src/runtime/panic.go:774 +0x72
    runtime.newosproc(0xc000044700)
    	/usr/lib/go-1.13/src/runtime/os_linux.go:153 +0x1ba
    runtime.newm1(0xc000044700)
    	/usr/lib/go-1.13/src/runtime/proc.go:1853 +0xdc
    runtime.newm(0x0, 0xc000020000)
    	/usr/lib/go-1.13/src/runtime/proc.go:1832 +0x8f
    runtime.startm(0xc000020000, 0xa4ef00)
    	/usr/lib/go-1.13/src/runtime/proc.go:1969 +0x12a
    runtime.handoffp(0xc000020000)
    	/usr/lib/go-1.13/src/runtime/proc.go:1996 +0x52
    runtime.stoplockedm()
    	/usr/lib/go-1.13/src/runtime/proc.go:2064 +0xf2
    runtime.schedule()
    	/usr/lib/go-1.13/src/runtime/proc.go:2469 +0x485
    runtime.park_m(0xc000000180)
    	/usr/lib/go-1.13/src/runtime/proc.go:2610 +0x9d
    runtime.mcall(0x0)
    	/usr/lib/go-1.13/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [chan receive, locked to thread]:
    runtime.gopark(0x7c7240, 0xc000060058, 0x170e, 0x3)
    	/usr/lib/go-1.13/src/runtime/proc.go:304 +0xe0
    runtime.goparkunlock(...)
    	/usr/lib/go-1.13/src/runtime/proc.go:310
    runtime.chanrecv(0xc000060000, 0x0, 0xc000000101, 0x418fde)
    	/usr/lib/go-1.13/src/runtime/chan.go:524 +0x2e8
    runtime.chanrecv1(0xc000060000, 0x0)
    	/usr/lib/go-1.13/src/runtime/chan.go:406 +0x2b
    runtime.gcenable()
    	/usr/lib/go-1.13/src/runtime/mgc.go:212 +0x95
    runtime.main()
    	/usr/lib/go-1.13/src/runtime/proc.go:166 +0x121
    runtime.goexit()
    	/usr/lib/go-1.13/src/runtime/asm_amd64.s:1357 +0x1
