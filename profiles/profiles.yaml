apiVersion: waas.radware.com/v1beta1
kind: Profile
metadata:
  name:  waas-api-profile
  namespace: kwaf
  labels:
    release: waas
spec:
  policies:
  - classifiers:
    runtime/cgo: pthread_create failed: Resource temporarily unavailable
    SIGABRT: abort
    PC=0x7f4a9a5a1f47 m=3 sigcode=18446744073709551610
    
    goroutine 0 [idle]:
    runtime: unknown pc 0x7f4a9a5a1f47
    stack: frame={sp:0x7f4a97b4f820, fp:0x0} stack=[0x7f4a97350288,0x7f4a97b4fe88)
    00007f4a97b4f720:  0000000000000000  00007f4a9a956c58 
    00007f4a97b4f730:  00007f4a97b4fae0  00007f4a9ab8a75a 
    00007f4a97b4f740:  000000000000000b  0000000000000000 
    00007f4a97b4f750:  00007f4a95b4c700  000055c79d4a4148 
    00007f4a97b4f760:  00007f4a97b4fc30  00007f4a88000c50 
    00007f4a97b4f770:  0000000000000000  000055c79c980d10 
    00007f4a97b4f780:  0000000000000000  00007f4a9ab82f13 
    00007f4a97b4f790:  0000000000000005  0000000000000000 
    00007f4a97b4f7a0:  2525252525252525  2525252525252525 
    00007f4a97b4f7b0:  00000000000000ff  0000000000000000 
    00007f4a97b4f7c0:  00000000000000ff  0000000000000000 
    00007f4a97b4f7d0:  ff000000000000ff  00000000ff000000 
    00007f4a97b4f7e0:  000000000000000e  000000000000000e 
    00007f4a97b4f7f0:  0000000000000000  0000000000000000 
    00007f4a97b4f800:  ffffffffffffffff  ffffffffffffffff 
    00007f4a97b4f810:  0000000400000004  0000000400000004 
    00007f4a97b4f820: <0000000000000000  203a64656c696166 
    00007f4a97b4f830:  0000000000000000  0000000000000000 
    00007f4a97b4f840:  0000000000000000  0000000000000000 
    00007f4a97b4f850:  0000000000000000  0000000000000000 
    00007f4a97b4f860:  0000000000000000  0000000000000000 
    00007f4a97b4f870:  0000000000000000  0000000000000000 
    00007f4a97b4f880:  0000000000000000  0000000000000000 
    00007f4a97b4f890:  0000000000000000  0000000000000000 
    00007f4a97b4f8a0:  fffffffe7fffffff  ffffffffffffffff 
    00007f4a97b4f8b0:  ffffffffffffffff  ffffffffffffffff 
    00007f4a97b4f8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f4a97b4f8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f4a97b4f8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f4a97b4f8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f4a97b4f900:  ffffffffffffffff  ffffffffffffffff 
    00007f4a97b4f910:  ffffffffffffffff  ffffffffffffffff 
    runtime: unknown pc 0x7f4a9a5a1f47
    stack: frame={sp:0x7f4a97b4f820, fp:0x0} stack=[0x7f4a97350288,0x7f4a97b4fe88)
    00007f4a97b4f720:  0000000000000000  00007f4a9a956c58 
    00007f4a97b4f730:  00007f4a97b4fae0  00007f4a9ab8a75a 
    00007f4a97b4f740:  000000000000000b  0000000000000000 
    00007f4a97b4f750:  00007f4a95b4c700  000055c79d4a4148 
    00007f4a97b4f760:  00007f4a97b4fc30  00007f4a88000c50 
    00007f4a97b4f770:  0000000000000000  000055c79c980d10 
    00007f4a97b4f780:  0000000000000000  00007f4a9ab82f13 
    00007f4a97b4f790:  0000000000000005  0000000000000000 
    00007f4a97b4f7a0:  2525252525252525  2525252525252525 
    00007f4a97b4f7b0:  00000000000000ff  0000000000000000 
    00007f4a97b4f7c0:  00000000000000ff  0000000000000000 
    00007f4a97b4f7d0:  ff000000000000ff  00000000ff000000 
    00007f4a97b4f7e0:  000000000000000e  000000000000000e 
    00007f4a97b4f7f0:  0000000000000000  0000000000000000 
    00007f4a97b4f800:  ffffffffffffffff  ffffffffffffffff 
    00007f4a97b4f810:  0000000400000004  0000000400000004 
    00007f4a97b4f820: <0000000000000000  203a64656c696166 
    00007f4a97b4f830:  0000000000000000  0000000000000000 
    00007f4a97b4f840:  0000000000000000  0000000000000000 
    00007f4a97b4f850:  0000000000000000  0000000000000000 
    00007f4a97b4f860:  0000000000000000  0000000000000000 
    00007f4a97b4f870:  0000000000000000  0000000000000000 
    00007f4a97b4f880:  0000000000000000  0000000000000000 
    00007f4a97b4f890:  0000000000000000  0000000000000000 
    00007f4a97b4f8a0:  fffffffe7fffffff  ffffffffffffffff 
    00007f4a97b4f8b0:  ffffffffffffffff  ffffffffffffffff 
    00007f4a97b4f8c0:  ffffffffffffffff  ffffffffffffffff 
    00007f4a97b4f8d0:  ffffffffffffffff  ffffffffffffffff 
    00007f4a97b4f8e0:  ffffffffffffffff  ffffffffffffffff 
    00007f4a97b4f8f0:  ffffffffffffffff  ffffffffffffffff 
    00007f4a97b4f900:  ffffffffffffffff  ffffffffffffffff 
    00007f4a97b4f910:  ffffffffffffffff  ffffffffffffffff 
    
    goroutine 1 [syscall]:
    syscall.Syscall6(0xf7, 0x1, 0xbc2f, 0xc00023f778, 0x1000004, 0x0, 0x0, 0x55c79c0f7e01, 0xc000336420, 0xc00023f7b8)
    	/usr/lib/go-1.13/src/syscall/asm_linux_amd64.s:44 +0x5
    os.(*Process).blockUntilWaitable(0xc0002c6de0, 0x203000, 0x55c79cdf4940, 0x2)
    	/usr/lib/go-1.13/src/os/wait_waitid.go:31 +0x9a
    os.(*Process).wait(0xc0002c6de0, 0x55c79cf4f240, 0x55c79cf4f248, 0x55c79cf4f238)
    	/usr/lib/go-1.13/src/os/exec_unix.go:22 +0x3b
    os.(*Process).Wait(...)
    	/usr/lib/go-1.13/src/os/exec.go:125
    os/exec.(*Cmd).Wait(0xc0000edb80, 0x0, 0x0)
    	/usr/lib/go-1.13/src/os/exec/exec.go:501 +0x62
    os/exec.(*Cmd).Run(0xc0000edb80, 0xc0002cd6d0, 0x1)
    	/usr/lib/go-1.13/src/os/exec/exec.go:341 +0x5e
    os/exec.(*Cmd).Output(0xc0000edb80, 0x2c, 0xc00023fa30, 0x1, 0x1, 0xc0000edb80)
    	/usr/lib/go-1.13/src/os/exec/exec.go:540 +0x8a
    github.com/snapcore/snapd/sandbox/seccomp.(*Compiler).VersionInfo(0xc0003202e0, 0xc0003202e0, 0x0, 0x0, 0xc000347e60)
    	/build/snapd/parts/snapd-deb/build/sandbox/seccomp/compiler.go:75 +0x99
    github.com/snapcore/snapd/sandbox/seccomp.glob..func1(0xc000347e60, 0xc000347e60, 0x1f, 0xc0002c6540, 0x1f)
    	/build/snapd/parts/snapd-deb/build/sandbox/seccomp/compiler.go:97 +0x6a
    github.com/snapcore/snapd/sandbox/seccomp.CompilerVersionInfo(...)
    	/build/snapd/parts/snapd-deb/build/sandbox/seccomp/compiler.go:103
    github.com/snapcore/snapd/interfaces.seccompCompilerVersionInfo(0xc0002c6540, 0x1f, 0xc0002c6540, 0x1f, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/interfaces/system_key.go:95 +0x6d
    github.com/snapcore/snapd/interfaces.generateSystemKey(0xc000314040, 0x300000002, 0xd0)
    	/build/snapd/parts/snapd-deb/build/interfaces/system_key.go:145 +0x373
    github.com/snapcore/snapd/interfaces.SystemKeyMismatch(0x55c79c0267ca, 0xe0, 0x55c79cef7200)
    	/build/snapd/parts/snapd-deb/build/interfaces/system_key.go:229 +0x28
    main.maybeWaitForSecurityProfileRegeneration(0xc00010ea80, 0xc000306280, 0xd)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:152 +0x28
    main.(*cmdRun).Execute(0xc00023feb8, 0xc000032190, 0x2, 0x3, 0x0, 0x0)
    	/build/snapd/parts/snapd-deb/build/cmd/snap/cmd_run.go:240 +0x172
    main.main()
    	/build/snapd/parts/snapd-deb/build/cmd/snap/main.go:482 +0x581
    
    goroutine 6 [syscall]:
    os/signal.signal_recv(0x0)
    	/usr/lib/go-1.13/src/runtime/sigqueue.go:147 +0x9e
    os/signal.loop()
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:23 +0x24
    created by os/signal.init.0
    	/usr/lib/go-1.13/src/os/signal/signal_unix.go:29 +0x43
    
    goroutine 8 [IO wait]:
    internal/poll.runtime_pollWait(0x7f4a9acf3ea8, 0x72, 0xffffffffffffffff)
    	/usr/lib/go-1.13/src/runtime/netpoll.go:184 +0x57
    internal/poll.(*pollDesc).wait(0xc0003361f8, 0x72, 0x201, 0x200, 0xffffffffffffffff)
    	/usr/lib/go-1.13/src/internal/poll/fd_poll_runtime.go:87 +0x47
    internal/poll.(*pollDesc).waitRead(...)
    	/usr/lib/go-1.13/src/internal/poll/fd_poll_runtime.go:92
    internal/poll.(*FD).Read(0xc0003361e0, 0xc000356000, 0x200, 0x200, 0x0, 0x0, 0x0)
    	/usr/lib/go-1.13/src/internal/poll/fd_unix.go:169 +0x1d1
    os.(*File).read(...)
    	/usr/lib/go-1.13/src/os/file_unix.go:259
    os.(*File).Read(0xc000010598, 0xc000356000, 0x200, 0x200, 0x7f4a9acaf028, 0xc000060f80, 0xc000060ea0)
    	/usr/lib/go-1.13/src/os/file.go:116 +0x73
    bytes.(*Buffer).ReadFrom(0xc0003448a0, 0x55c79cf688c0, 0xc000010598, 0x7f4a9acaf028, 0xc0003448a0, 0xc0001ca401)
    	/usr/lib/go-1.13/src/bytes/buffer.go:204 +0xb6
    io.copyBuffer(0x55c79cf66560, 0xc0003448a0, 0x55c79cf688c0, 0xc000010598, 0x0, 0x0, 0x0, 0x1, 0xc000060fa8, 0x55c79c01f5d1)
    	/usr/lib/go-1.13/src/io/io.go:388 +0x2ef
    io.Copy(...)
    	/usr/lib/go-1.13/src/io/io.go:364
    os/exec.(*Cmd).writerDescriptor.func1(0x55c79cf4f4d8, 0xc000060fc8)
    	/usr/lib/go-1.13/src/os/exec/exec.go:311 +0x65
    os/exec.(*Cmd).Start.func1(0xc0000edb80, 0xc000347ee0)
    	/usr/lib/go-1.13/src/os/exec/exec.go:435 +0x29
    created by os/exec.(*Cmd).Start
    	/usr/lib/go-1.13/src/os/exec/exec.go:434 +0x60a
    
    goroutine 9 [runnable]:
    os/exec.(*Cmd).Start.func1(0xc0000edb80, 0xc000347f20)
    	/usr/lib/go-1.13/src/os/exec/exec.go:434
    created by os/exec.(*Cmd).Start
    	/usr/lib/go-1.13/src/os/exec/exec.go:434 +0x60a
    
    rax    0x0
    rbx    0x7f4a9a94f840
    rcx    0x7f4a9a5a1f47
    rdx    0x0
    rdi    0x2
    rsi    0x7f4a97b4f820
    rbp    0x55c79c99ae7c
    rsp    0x7f4a97b4f820
    r8     0x0
    r9     0x7f4a97b4f820
    r10    0x8
    r11    0x246
    r12    0x7f4a88000c50
    r13    0x0
    r14    0x55c79c980d10
    r15    0x0
    rip    0x7f4a9a5a1f47
    rflags 0x246
    cs     0x33
    fs     0x0
    gs     0x0
    name: apiPolicy
    operatorEmail: support@radware.com
    protections:
    runtime: failed to create new OS thread (have 6 already; errno=11)
    runtime: may need to increase max user processes (ulimit -u)
    fatal error: newosproc
    
    runtime stack:
    runtime.throw(0x1acaa5a, 0x9)
    	/usr/local/go/src/runtime/panic.go:1116 +0x72
    runtime.newosproc(0xc000062c00)
    	/usr/local/go/src/runtime/os_linux.go:161 +0x1c5
    runtime.newm1(0xc000062c00)
    	/usr/local/go/src/runtime/proc.go:1837 +0xdd
    runtime.newm(0x1bb7c48, 0xc000048800, 0x5)
    	/usr/local/go/src/runtime/proc.go:1816 +0x9b
    runtime.startm(0x0, 0xc000099f01)
    	/usr/local/go/src/runtime/proc.go:1973 +0xc9
    runtime.wakep()
    	/usr/local/go/src/runtime/proc.go:2061 +0x66
    runtime.resetspinning()
    	/usr/local/go/src/runtime/proc.go:2533 +0x59
    runtime.schedule()
    	/usr/local/go/src/runtime/proc.go:2684 +0x2b9
    runtime.park_m(0xc000000c00)
    	/usr/local/go/src/runtime/proc.go:2845 +0x9d
    runtime.mcall(0x0)
    	/usr/local/go/src/runtime/asm_amd64.s:318 +0x5b
    
    goroutine 1 [syscall, locked to thread]:
    reflect.mapassign(0x18bc100, 0xc00048b7a0, 0xc0004a28a0, 0xc0004b5200)
    	/usr/local/go/src/runtime/map.go:1319 +0x3f
    reflect.Value.SetMapIndex(0x18bc100, 0xc0004b5170, 0x195, 0x1858200, 0xc0004a28a0, 0x98, 0x19ce1a0, 0xc0004b5200, 0x199)
    	/usr/local/go/src/reflect/value.go:1706 +0x27c
    encoding/json.(*decodeState).object(0xc0004ac9a0, 0x18bc100, 0xc0004b5170, 0x195, 0xc0004ac9c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:807 +0x8da
    encoding/json.(*decodeState).value(0xc0004ac9a0, 0x18bc100, 0xc0004b5170, 0x195, 0x18bc100, 0xc0004b5170)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc0004ac9a0, 0x1815520, 0xc0004b4fc0, 0x16, 0xc0004ac9c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc0004ac9a0, 0x1815520, 0xc0004b4fc0, 0x16, 0xc000436888, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc0004ac9a0, 0x1815520, 0xc0004b4fc0, 0xc0004ac9c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003d67b5, 0x9e1, 0xb64b, 0x1815520, 0xc0004b4fc0, 0x26, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc000407200, 0xc0003d67b5, 0x9e1, 0xb64b, 0x7f49e6efbcd8, 0xc000407200)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc00014aa50, 0x19ce1a0, 0xc000407200, 0x199, 0xc00014aa78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc00014aa50, 0x19ce1a0, 0xc000407200, 0x199, 0xc0004b4d80, 0x99)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc00014aa50, 0x18e59a0, 0xc00039b188, 0x195, 0xc00014aa78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc00014aa50, 0x18e59a0, 0xc00039b188, 0x195, 0x18e59a0, 0xc00039b188)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).object(0xc00014aa50, 0x1815520, 0xc00039afc0, 0x16, 0xc00014aa78, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:765 +0x12fe
    encoding/json.(*decodeState).value(0xc00014aa50, 0x1815520, 0xc00039afc0, 0x16, 0xc00018b548, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc00014aa50, 0x1815520, 0xc00039afc0, 0xc00014aa78, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003d2000, 0x9d38, 0xfe00, 0x1815520, 0xc00039afc0, 0x7f49e6ef1cc0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.(*Schema).UnmarshalJSON(0xc00039ad80, 0xc0003d2000, 0x9d38, 0xfe00, 0x7f49e6efbcd8, 0xc00039ad80)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/schema.go:555 +0x8b
    encoding/json.(*decodeState).object(0xc00014a9a0, 0x1a89300, 0xc00039ad80, 0x16, 0xc00014a9c8, 0x7b)
    	/usr/local/go/src/encoding/json/decode.go:609 +0x207c
    encoding/json.(*decodeState).value(0xc00014a9a0, 0x1a89300, 0xc00039ad80, 0x16, 0xc00018bc18, 0x6fa8ab)
    	/usr/local/go/src/encoding/json/decode.go:370 +0x6d
    encoding/json.(*decodeState).unmarshal(0xc00014a9a0, 0x1a89300, 0xc00039ad80, 0xc00014a9c8, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:180 +0x1ea
    encoding/json.Unmarshal(0xc0003d2000, 0x9d39, 0xfe00, 0x1a89300, 0xc00039ad80, 0x0, 0x0)
    	/usr/local/go/src/encoding/json/decode.go:107 +0x112
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.Swagger20Schema(0xc000385b30, 0xc00018bd68, 0x12e538a)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:82 +0xb8
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.MustLoadSwagger20Schema(...)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/spec.go:66
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.initResolutionCache(0xc000385a70, 0xc000385a40)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:57 +0x35
    k8s.io/kubernetes/vendor/github.com/go-openapi/spec.init.0()
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/go-openapi/spec/cache.go:51 +0x25
    
    goroutine 18 [chan receive]:
    k8s.io/kubernetes/vendor/k8s.io/klog/v2.(*loggingT).flushDaemon(0x2a6c040)
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b
    created by k8s.io/kubernetes/vendor/k8s.io/klog/v2.init.0
    	/workspace/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/klog/v2/klog.go:417 +0xdf
    system_key.go:147: cannot determine seccomp compiler version in generateSystemKey: fork/exec /snap/snapd/15534/usr/lib/snapd/snap-seccomp: resource temporarily unavailable
